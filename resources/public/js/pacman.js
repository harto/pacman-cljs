var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
void 0;
void 0;
void 0;
void 0;
void 0;
void 0;
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
void 0;
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  if(p[goog.typeOf(x)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
void 0;
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
void 0;
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__7538__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__7538 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7538__delegate.call(this, array, i, idxs)
    };
    G__7538.cljs$lang$maxFixedArity = 2;
    G__7538.cljs$lang$applyTo = function(arglist__7539) {
      var array = cljs.core.first(arglist__7539);
      var i = cljs.core.first(cljs.core.next(arglist__7539));
      var idxs = cljs.core.rest(cljs.core.next(arglist__7539));
      return G__7538__delegate(array, i, idxs)
    };
    G__7538.cljs$lang$arity$variadic = G__7538__delegate;
    return G__7538
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
void 0;
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
void 0;
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____7603 = this$;
      if(and__3822__auto____7603) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____7603
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      return function() {
        var or__3824__auto____7604 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____7604) {
          return or__3824__auto____7604
        }else {
          var or__3824__auto____7605 = cljs.core._invoke["_"];
          if(or__3824__auto____7605) {
            return or__3824__auto____7605
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____7606 = this$;
      if(and__3822__auto____7606) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____7606
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      return function() {
        var or__3824__auto____7607 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____7607) {
          return or__3824__auto____7607
        }else {
          var or__3824__auto____7608 = cljs.core._invoke["_"];
          if(or__3824__auto____7608) {
            return or__3824__auto____7608
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____7609 = this$;
      if(and__3822__auto____7609) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____7609
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      return function() {
        var or__3824__auto____7610 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____7610) {
          return or__3824__auto____7610
        }else {
          var or__3824__auto____7611 = cljs.core._invoke["_"];
          if(or__3824__auto____7611) {
            return or__3824__auto____7611
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____7612 = this$;
      if(and__3822__auto____7612) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____7612
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      return function() {
        var or__3824__auto____7613 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____7613) {
          return or__3824__auto____7613
        }else {
          var or__3824__auto____7614 = cljs.core._invoke["_"];
          if(or__3824__auto____7614) {
            return or__3824__auto____7614
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____7615 = this$;
      if(and__3822__auto____7615) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____7615
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      return function() {
        var or__3824__auto____7616 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____7616) {
          return or__3824__auto____7616
        }else {
          var or__3824__auto____7617 = cljs.core._invoke["_"];
          if(or__3824__auto____7617) {
            return or__3824__auto____7617
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____7618 = this$;
      if(and__3822__auto____7618) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____7618
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      return function() {
        var or__3824__auto____7619 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____7619) {
          return or__3824__auto____7619
        }else {
          var or__3824__auto____7620 = cljs.core._invoke["_"];
          if(or__3824__auto____7620) {
            return or__3824__auto____7620
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____7621 = this$;
      if(and__3822__auto____7621) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____7621
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      return function() {
        var or__3824__auto____7622 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____7622) {
          return or__3824__auto____7622
        }else {
          var or__3824__auto____7623 = cljs.core._invoke["_"];
          if(or__3824__auto____7623) {
            return or__3824__auto____7623
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____7624 = this$;
      if(and__3822__auto____7624) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____7624
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      return function() {
        var or__3824__auto____7625 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____7625) {
          return or__3824__auto____7625
        }else {
          var or__3824__auto____7626 = cljs.core._invoke["_"];
          if(or__3824__auto____7626) {
            return or__3824__auto____7626
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____7627 = this$;
      if(and__3822__auto____7627) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____7627
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      return function() {
        var or__3824__auto____7628 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____7628) {
          return or__3824__auto____7628
        }else {
          var or__3824__auto____7629 = cljs.core._invoke["_"];
          if(or__3824__auto____7629) {
            return or__3824__auto____7629
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____7630 = this$;
      if(and__3822__auto____7630) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____7630
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      return function() {
        var or__3824__auto____7631 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____7631) {
          return or__3824__auto____7631
        }else {
          var or__3824__auto____7632 = cljs.core._invoke["_"];
          if(or__3824__auto____7632) {
            return or__3824__auto____7632
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____7633 = this$;
      if(and__3822__auto____7633) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____7633
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      return function() {
        var or__3824__auto____7634 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____7634) {
          return or__3824__auto____7634
        }else {
          var or__3824__auto____7635 = cljs.core._invoke["_"];
          if(or__3824__auto____7635) {
            return or__3824__auto____7635
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____7636 = this$;
      if(and__3822__auto____7636) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____7636
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      return function() {
        var or__3824__auto____7637 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____7637) {
          return or__3824__auto____7637
        }else {
          var or__3824__auto____7638 = cljs.core._invoke["_"];
          if(or__3824__auto____7638) {
            return or__3824__auto____7638
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____7639 = this$;
      if(and__3822__auto____7639) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____7639
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      return function() {
        var or__3824__auto____7640 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____7640) {
          return or__3824__auto____7640
        }else {
          var or__3824__auto____7641 = cljs.core._invoke["_"];
          if(or__3824__auto____7641) {
            return or__3824__auto____7641
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____7642 = this$;
      if(and__3822__auto____7642) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____7642
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      return function() {
        var or__3824__auto____7643 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____7643) {
          return or__3824__auto____7643
        }else {
          var or__3824__auto____7644 = cljs.core._invoke["_"];
          if(or__3824__auto____7644) {
            return or__3824__auto____7644
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____7645 = this$;
      if(and__3822__auto____7645) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____7645
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      return function() {
        var or__3824__auto____7646 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____7646) {
          return or__3824__auto____7646
        }else {
          var or__3824__auto____7647 = cljs.core._invoke["_"];
          if(or__3824__auto____7647) {
            return or__3824__auto____7647
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____7648 = this$;
      if(and__3822__auto____7648) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____7648
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      return function() {
        var or__3824__auto____7649 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____7649) {
          return or__3824__auto____7649
        }else {
          var or__3824__auto____7650 = cljs.core._invoke["_"];
          if(or__3824__auto____7650) {
            return or__3824__auto____7650
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____7651 = this$;
      if(and__3822__auto____7651) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____7651
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      return function() {
        var or__3824__auto____7652 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____7652) {
          return or__3824__auto____7652
        }else {
          var or__3824__auto____7653 = cljs.core._invoke["_"];
          if(or__3824__auto____7653) {
            return or__3824__auto____7653
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____7654 = this$;
      if(and__3822__auto____7654) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____7654
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      return function() {
        var or__3824__auto____7655 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____7655) {
          return or__3824__auto____7655
        }else {
          var or__3824__auto____7656 = cljs.core._invoke["_"];
          if(or__3824__auto____7656) {
            return or__3824__auto____7656
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____7657 = this$;
      if(and__3822__auto____7657) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____7657
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      return function() {
        var or__3824__auto____7658 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____7658) {
          return or__3824__auto____7658
        }else {
          var or__3824__auto____7659 = cljs.core._invoke["_"];
          if(or__3824__auto____7659) {
            return or__3824__auto____7659
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____7660 = this$;
      if(and__3822__auto____7660) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____7660
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      return function() {
        var or__3824__auto____7661 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____7661) {
          return or__3824__auto____7661
        }else {
          var or__3824__auto____7662 = cljs.core._invoke["_"];
          if(or__3824__auto____7662) {
            return or__3824__auto____7662
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____7663 = this$;
      if(and__3822__auto____7663) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____7663
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      return function() {
        var or__3824__auto____7664 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3824__auto____7664) {
          return or__3824__auto____7664
        }else {
          var or__3824__auto____7665 = cljs.core._invoke["_"];
          if(or__3824__auto____7665) {
            return or__3824__auto____7665
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
void 0;
void 0;
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____7669 = coll;
    if(and__3822__auto____7669) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____7669
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____7670 = cljs.core._count[goog.typeOf(coll)];
      if(or__3824__auto____7670) {
        return or__3824__auto____7670
      }else {
        var or__3824__auto____7671 = cljs.core._count["_"];
        if(or__3824__auto____7671) {
          return or__3824__auto____7671
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____7675 = coll;
    if(and__3822__auto____7675) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____7675
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____7676 = cljs.core._empty[goog.typeOf(coll)];
      if(or__3824__auto____7676) {
        return or__3824__auto____7676
      }else {
        var or__3824__auto____7677 = cljs.core._empty["_"];
        if(or__3824__auto____7677) {
          return or__3824__auto____7677
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____7681 = coll;
    if(and__3822__auto____7681) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____7681
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    return function() {
      var or__3824__auto____7682 = cljs.core._conj[goog.typeOf(coll)];
      if(or__3824__auto____7682) {
        return or__3824__auto____7682
      }else {
        var or__3824__auto____7683 = cljs.core._conj["_"];
        if(or__3824__auto____7683) {
          return or__3824__auto____7683
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
void 0;
void 0;
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____7690 = coll;
      if(and__3822__auto____7690) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____7690
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      return function() {
        var or__3824__auto____7691 = cljs.core._nth[goog.typeOf(coll)];
        if(or__3824__auto____7691) {
          return or__3824__auto____7691
        }else {
          var or__3824__auto____7692 = cljs.core._nth["_"];
          if(or__3824__auto____7692) {
            return or__3824__auto____7692
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____7693 = coll;
      if(and__3822__auto____7693) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____7693
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      return function() {
        var or__3824__auto____7694 = cljs.core._nth[goog.typeOf(coll)];
        if(or__3824__auto____7694) {
          return or__3824__auto____7694
        }else {
          var or__3824__auto____7695 = cljs.core._nth["_"];
          if(or__3824__auto____7695) {
            return or__3824__auto____7695
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
void 0;
void 0;
cljs.core.ASeq = {};
void 0;
void 0;
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____7699 = coll;
    if(and__3822__auto____7699) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____7699
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____7700 = cljs.core._first[goog.typeOf(coll)];
      if(or__3824__auto____7700) {
        return or__3824__auto____7700
      }else {
        var or__3824__auto____7701 = cljs.core._first["_"];
        if(or__3824__auto____7701) {
          return or__3824__auto____7701
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____7705 = coll;
    if(and__3822__auto____7705) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____7705
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____7706 = cljs.core._rest[goog.typeOf(coll)];
      if(or__3824__auto____7706) {
        return or__3824__auto____7706
      }else {
        var or__3824__auto____7707 = cljs.core._rest["_"];
        if(or__3824__auto____7707) {
          return or__3824__auto____7707
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____7711 = coll;
    if(and__3822__auto____7711) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____7711
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____7712 = cljs.core._next[goog.typeOf(coll)];
      if(or__3824__auto____7712) {
        return or__3824__auto____7712
      }else {
        var or__3824__auto____7713 = cljs.core._next["_"];
        if(or__3824__auto____7713) {
          return or__3824__auto____7713
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____7720 = o;
      if(and__3822__auto____7720) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____7720
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      return function() {
        var or__3824__auto____7721 = cljs.core._lookup[goog.typeOf(o)];
        if(or__3824__auto____7721) {
          return or__3824__auto____7721
        }else {
          var or__3824__auto____7722 = cljs.core._lookup["_"];
          if(or__3824__auto____7722) {
            return or__3824__auto____7722
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____7723 = o;
      if(and__3822__auto____7723) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____7723
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      return function() {
        var or__3824__auto____7724 = cljs.core._lookup[goog.typeOf(o)];
        if(or__3824__auto____7724) {
          return or__3824__auto____7724
        }else {
          var or__3824__auto____7725 = cljs.core._lookup["_"];
          if(or__3824__auto____7725) {
            return or__3824__auto____7725
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
void 0;
void 0;
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____7729 = coll;
    if(and__3822__auto____7729) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____7729
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    return function() {
      var or__3824__auto____7730 = cljs.core._contains_key_QMARK_[goog.typeOf(coll)];
      if(or__3824__auto____7730) {
        return or__3824__auto____7730
      }else {
        var or__3824__auto____7731 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____7731) {
          return or__3824__auto____7731
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____7735 = coll;
    if(and__3822__auto____7735) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____7735
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    return function() {
      var or__3824__auto____7736 = cljs.core._assoc[goog.typeOf(coll)];
      if(or__3824__auto____7736) {
        return or__3824__auto____7736
      }else {
        var or__3824__auto____7737 = cljs.core._assoc["_"];
        if(or__3824__auto____7737) {
          return or__3824__auto____7737
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
void 0;
void 0;
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____7741 = coll;
    if(and__3822__auto____7741) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____7741
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    return function() {
      var or__3824__auto____7742 = cljs.core._dissoc[goog.typeOf(coll)];
      if(or__3824__auto____7742) {
        return or__3824__auto____7742
      }else {
        var or__3824__auto____7743 = cljs.core._dissoc["_"];
        if(or__3824__auto____7743) {
          return or__3824__auto____7743
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
void 0;
void 0;
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____7747 = coll;
    if(and__3822__auto____7747) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____7747
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____7748 = cljs.core._key[goog.typeOf(coll)];
      if(or__3824__auto____7748) {
        return or__3824__auto____7748
      }else {
        var or__3824__auto____7749 = cljs.core._key["_"];
        if(or__3824__auto____7749) {
          return or__3824__auto____7749
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____7753 = coll;
    if(and__3822__auto____7753) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____7753
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____7754 = cljs.core._val[goog.typeOf(coll)];
      if(or__3824__auto____7754) {
        return or__3824__auto____7754
      }else {
        var or__3824__auto____7755 = cljs.core._val["_"];
        if(or__3824__auto____7755) {
          return or__3824__auto____7755
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____7759 = coll;
    if(and__3822__auto____7759) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____7759
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    return function() {
      var or__3824__auto____7760 = cljs.core._disjoin[goog.typeOf(coll)];
      if(or__3824__auto____7760) {
        return or__3824__auto____7760
      }else {
        var or__3824__auto____7761 = cljs.core._disjoin["_"];
        if(or__3824__auto____7761) {
          return or__3824__auto____7761
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
void 0;
void 0;
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____7765 = coll;
    if(and__3822__auto____7765) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____7765
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____7766 = cljs.core._peek[goog.typeOf(coll)];
      if(or__3824__auto____7766) {
        return or__3824__auto____7766
      }else {
        var or__3824__auto____7767 = cljs.core._peek["_"];
        if(or__3824__auto____7767) {
          return or__3824__auto____7767
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____7771 = coll;
    if(and__3822__auto____7771) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____7771
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____7772 = cljs.core._pop[goog.typeOf(coll)];
      if(or__3824__auto____7772) {
        return or__3824__auto____7772
      }else {
        var or__3824__auto____7773 = cljs.core._pop["_"];
        if(or__3824__auto____7773) {
          return or__3824__auto____7773
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____7777 = coll;
    if(and__3822__auto____7777) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____7777
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    return function() {
      var or__3824__auto____7778 = cljs.core._assoc_n[goog.typeOf(coll)];
      if(or__3824__auto____7778) {
        return or__3824__auto____7778
      }else {
        var or__3824__auto____7779 = cljs.core._assoc_n["_"];
        if(or__3824__auto____7779) {
          return or__3824__auto____7779
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
void 0;
void 0;
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____7783 = o;
    if(and__3822__auto____7783) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____7783
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    return function() {
      var or__3824__auto____7784 = cljs.core._deref[goog.typeOf(o)];
      if(or__3824__auto____7784) {
        return or__3824__auto____7784
      }else {
        var or__3824__auto____7785 = cljs.core._deref["_"];
        if(or__3824__auto____7785) {
          return or__3824__auto____7785
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
void 0;
void 0;
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____7789 = o;
    if(and__3822__auto____7789) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____7789
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    return function() {
      var or__3824__auto____7790 = cljs.core._deref_with_timeout[goog.typeOf(o)];
      if(or__3824__auto____7790) {
        return or__3824__auto____7790
      }else {
        var or__3824__auto____7791 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____7791) {
          return or__3824__auto____7791
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
void 0;
void 0;
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____7795 = o;
    if(and__3822__auto____7795) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____7795
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    return function() {
      var or__3824__auto____7796 = cljs.core._meta[goog.typeOf(o)];
      if(or__3824__auto____7796) {
        return or__3824__auto____7796
      }else {
        var or__3824__auto____7797 = cljs.core._meta["_"];
        if(or__3824__auto____7797) {
          return or__3824__auto____7797
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
void 0;
void 0;
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____7801 = o;
    if(and__3822__auto____7801) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____7801
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    return function() {
      var or__3824__auto____7802 = cljs.core._with_meta[goog.typeOf(o)];
      if(or__3824__auto____7802) {
        return or__3824__auto____7802
      }else {
        var or__3824__auto____7803 = cljs.core._with_meta["_"];
        if(or__3824__auto____7803) {
          return or__3824__auto____7803
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
void 0;
void 0;
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____7810 = coll;
      if(and__3822__auto____7810) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____7810
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      return function() {
        var or__3824__auto____7811 = cljs.core._reduce[goog.typeOf(coll)];
        if(or__3824__auto____7811) {
          return or__3824__auto____7811
        }else {
          var or__3824__auto____7812 = cljs.core._reduce["_"];
          if(or__3824__auto____7812) {
            return or__3824__auto____7812
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____7813 = coll;
      if(and__3822__auto____7813) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____7813
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      return function() {
        var or__3824__auto____7814 = cljs.core._reduce[goog.typeOf(coll)];
        if(or__3824__auto____7814) {
          return or__3824__auto____7814
        }else {
          var or__3824__auto____7815 = cljs.core._reduce["_"];
          if(or__3824__auto____7815) {
            return or__3824__auto____7815
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
void 0;
void 0;
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____7819 = coll;
    if(and__3822__auto____7819) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____7819
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    return function() {
      var or__3824__auto____7820 = cljs.core._kv_reduce[goog.typeOf(coll)];
      if(or__3824__auto____7820) {
        return or__3824__auto____7820
      }else {
        var or__3824__auto____7821 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____7821) {
          return or__3824__auto____7821
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
void 0;
void 0;
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____7825 = o;
    if(and__3822__auto____7825) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____7825
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    return function() {
      var or__3824__auto____7826 = cljs.core._equiv[goog.typeOf(o)];
      if(or__3824__auto____7826) {
        return or__3824__auto____7826
      }else {
        var or__3824__auto____7827 = cljs.core._equiv["_"];
        if(or__3824__auto____7827) {
          return or__3824__auto____7827
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
void 0;
void 0;
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____7831 = o;
    if(and__3822__auto____7831) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____7831
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    return function() {
      var or__3824__auto____7832 = cljs.core._hash[goog.typeOf(o)];
      if(or__3824__auto____7832) {
        return or__3824__auto____7832
      }else {
        var or__3824__auto____7833 = cljs.core._hash["_"];
        if(or__3824__auto____7833) {
          return or__3824__auto____7833
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
void 0;
void 0;
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____7837 = o;
    if(and__3822__auto____7837) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____7837
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    return function() {
      var or__3824__auto____7838 = cljs.core._seq[goog.typeOf(o)];
      if(or__3824__auto____7838) {
        return or__3824__auto____7838
      }else {
        var or__3824__auto____7839 = cljs.core._seq["_"];
        if(or__3824__auto____7839) {
          return or__3824__auto____7839
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
void 0;
void 0;
cljs.core.ISequential = {};
void 0;
void 0;
cljs.core.IList = {};
void 0;
void 0;
cljs.core.IRecord = {};
void 0;
void 0;
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____7843 = coll;
    if(and__3822__auto____7843) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____7843
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____7844 = cljs.core._rseq[goog.typeOf(coll)];
      if(or__3824__auto____7844) {
        return or__3824__auto____7844
      }else {
        var or__3824__auto____7845 = cljs.core._rseq["_"];
        if(or__3824__auto____7845) {
          return or__3824__auto____7845
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____7849 = coll;
    if(and__3822__auto____7849) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____7849
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    return function() {
      var or__3824__auto____7850 = cljs.core._sorted_seq[goog.typeOf(coll)];
      if(or__3824__auto____7850) {
        return or__3824__auto____7850
      }else {
        var or__3824__auto____7851 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____7851) {
          return or__3824__auto____7851
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____7855 = coll;
    if(and__3822__auto____7855) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____7855
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    return function() {
      var or__3824__auto____7856 = cljs.core._sorted_seq_from[goog.typeOf(coll)];
      if(or__3824__auto____7856) {
        return or__3824__auto____7856
      }else {
        var or__3824__auto____7857 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____7857) {
          return or__3824__auto____7857
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____7861 = coll;
    if(and__3822__auto____7861) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____7861
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    return function() {
      var or__3824__auto____7862 = cljs.core._entry_key[goog.typeOf(coll)];
      if(or__3824__auto____7862) {
        return or__3824__auto____7862
      }else {
        var or__3824__auto____7863 = cljs.core._entry_key["_"];
        if(or__3824__auto____7863) {
          return or__3824__auto____7863
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____7867 = coll;
    if(and__3822__auto____7867) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____7867
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____7868 = cljs.core._comparator[goog.typeOf(coll)];
      if(or__3824__auto____7868) {
        return or__3824__auto____7868
      }else {
        var or__3824__auto____7869 = cljs.core._comparator["_"];
        if(or__3824__auto____7869) {
          return or__3824__auto____7869
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____7873 = o;
    if(and__3822__auto____7873) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____7873
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    return function() {
      var or__3824__auto____7874 = cljs.core._pr_seq[goog.typeOf(o)];
      if(or__3824__auto____7874) {
        return or__3824__auto____7874
      }else {
        var or__3824__auto____7875 = cljs.core._pr_seq["_"];
        if(or__3824__auto____7875) {
          return or__3824__auto____7875
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
void 0;
void 0;
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____7879 = d;
    if(and__3822__auto____7879) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____7879
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    return function() {
      var or__3824__auto____7880 = cljs.core._realized_QMARK_[goog.typeOf(d)];
      if(or__3824__auto____7880) {
        return or__3824__auto____7880
      }else {
        var or__3824__auto____7881 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____7881) {
          return or__3824__auto____7881
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
void 0;
void 0;
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____7885 = this$;
    if(and__3822__auto____7885) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____7885
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    return function() {
      var or__3824__auto____7886 = cljs.core._notify_watches[goog.typeOf(this$)];
      if(or__3824__auto____7886) {
        return or__3824__auto____7886
      }else {
        var or__3824__auto____7887 = cljs.core._notify_watches["_"];
        if(or__3824__auto____7887) {
          return or__3824__auto____7887
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____7891 = this$;
    if(and__3822__auto____7891) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____7891
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    return function() {
      var or__3824__auto____7892 = cljs.core._add_watch[goog.typeOf(this$)];
      if(or__3824__auto____7892) {
        return or__3824__auto____7892
      }else {
        var or__3824__auto____7893 = cljs.core._add_watch["_"];
        if(or__3824__auto____7893) {
          return or__3824__auto____7893
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____7897 = this$;
    if(and__3822__auto____7897) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____7897
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    return function() {
      var or__3824__auto____7898 = cljs.core._remove_watch[goog.typeOf(this$)];
      if(or__3824__auto____7898) {
        return or__3824__auto____7898
      }else {
        var or__3824__auto____7899 = cljs.core._remove_watch["_"];
        if(or__3824__auto____7899) {
          return or__3824__auto____7899
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
void 0;
void 0;
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____7903 = coll;
    if(and__3822__auto____7903) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____7903
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____7904 = cljs.core._as_transient[goog.typeOf(coll)];
      if(or__3824__auto____7904) {
        return or__3824__auto____7904
      }else {
        var or__3824__auto____7905 = cljs.core._as_transient["_"];
        if(or__3824__auto____7905) {
          return or__3824__auto____7905
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____7909 = tcoll;
    if(and__3822__auto____7909) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____7909
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    return function() {
      var or__3824__auto____7910 = cljs.core._conj_BANG_[goog.typeOf(tcoll)];
      if(or__3824__auto____7910) {
        return or__3824__auto____7910
      }else {
        var or__3824__auto____7911 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____7911) {
          return or__3824__auto____7911
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____7915 = tcoll;
    if(and__3822__auto____7915) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____7915
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    return function() {
      var or__3824__auto____7916 = cljs.core._persistent_BANG_[goog.typeOf(tcoll)];
      if(or__3824__auto____7916) {
        return or__3824__auto____7916
      }else {
        var or__3824__auto____7917 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____7917) {
          return or__3824__auto____7917
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
void 0;
void 0;
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____7921 = tcoll;
    if(and__3822__auto____7921) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____7921
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    return function() {
      var or__3824__auto____7922 = cljs.core._assoc_BANG_[goog.typeOf(tcoll)];
      if(or__3824__auto____7922) {
        return or__3824__auto____7922
      }else {
        var or__3824__auto____7923 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____7923) {
          return or__3824__auto____7923
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
void 0;
void 0;
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____7927 = tcoll;
    if(and__3822__auto____7927) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____7927
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    return function() {
      var or__3824__auto____7928 = cljs.core._dissoc_BANG_[goog.typeOf(tcoll)];
      if(or__3824__auto____7928) {
        return or__3824__auto____7928
      }else {
        var or__3824__auto____7929 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____7929) {
          return or__3824__auto____7929
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
void 0;
void 0;
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____7933 = tcoll;
    if(and__3822__auto____7933) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____7933
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    return function() {
      var or__3824__auto____7934 = cljs.core._assoc_n_BANG_[goog.typeOf(tcoll)];
      if(or__3824__auto____7934) {
        return or__3824__auto____7934
      }else {
        var or__3824__auto____7935 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____7935) {
          return or__3824__auto____7935
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____7939 = tcoll;
    if(and__3822__auto____7939) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____7939
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    return function() {
      var or__3824__auto____7940 = cljs.core._pop_BANG_[goog.typeOf(tcoll)];
      if(or__3824__auto____7940) {
        return or__3824__auto____7940
      }else {
        var or__3824__auto____7941 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____7941) {
          return or__3824__auto____7941
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
void 0;
void 0;
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____7945 = tcoll;
    if(and__3822__auto____7945) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____7945
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    return function() {
      var or__3824__auto____7946 = cljs.core._disjoin_BANG_[goog.typeOf(tcoll)];
      if(or__3824__auto____7946) {
        return or__3824__auto____7946
      }else {
        var or__3824__auto____7947 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____7947) {
          return or__3824__auto____7947
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
void 0;
void 0;
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____7951 = x;
    if(and__3822__auto____7951) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____7951
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    return function() {
      var or__3824__auto____7952 = cljs.core._compare[goog.typeOf(x)];
      if(or__3824__auto____7952) {
        return or__3824__auto____7952
      }else {
        var or__3824__auto____7953 = cljs.core._compare["_"];
        if(or__3824__auto____7953) {
          return or__3824__auto____7953
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
void 0;
void 0;
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____7957 = coll;
    if(and__3822__auto____7957) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____7957
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____7958 = cljs.core._drop_first[goog.typeOf(coll)];
      if(or__3824__auto____7958) {
        return or__3824__auto____7958
      }else {
        var or__3824__auto____7959 = cljs.core._drop_first["_"];
        if(or__3824__auto____7959) {
          return or__3824__auto____7959
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____7963 = coll;
    if(and__3822__auto____7963) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____7963
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____7964 = cljs.core._chunked_first[goog.typeOf(coll)];
      if(or__3824__auto____7964) {
        return or__3824__auto____7964
      }else {
        var or__3824__auto____7965 = cljs.core._chunked_first["_"];
        if(or__3824__auto____7965) {
          return or__3824__auto____7965
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____7969 = coll;
    if(and__3822__auto____7969) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____7969
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____7970 = cljs.core._chunked_rest[goog.typeOf(coll)];
      if(or__3824__auto____7970) {
        return or__3824__auto____7970
      }else {
        var or__3824__auto____7971 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____7971) {
          return or__3824__auto____7971
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____7975 = coll;
    if(and__3822__auto____7975) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____7975
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____7976 = cljs.core._chunked_next[goog.typeOf(coll)];
      if(or__3824__auto____7976) {
        return or__3824__auto____7976
      }else {
        var or__3824__auto____7977 = cljs.core._chunked_next["_"];
        if(or__3824__auto____7977) {
          return or__3824__auto____7977
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
void 0;
void 0;
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____7979 = x === y;
    if(or__3824__auto____7979) {
      return or__3824__auto____7979
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__7980__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__7981 = y;
            var G__7982 = cljs.core.first.call(null, more);
            var G__7983 = cljs.core.next.call(null, more);
            x = G__7981;
            y = G__7982;
            more = G__7983;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7980 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7980__delegate.call(this, x, y, more)
    };
    G__7980.cljs$lang$maxFixedArity = 2;
    G__7980.cljs$lang$applyTo = function(arglist__7984) {
      var x = cljs.core.first(arglist__7984);
      var y = cljs.core.first(cljs.core.next(arglist__7984));
      var more = cljs.core.rest(cljs.core.next(arglist__7984));
      return G__7980__delegate(x, y, more)
    };
    G__7980.cljs$lang$arity$variadic = G__7980__delegate;
    return G__7980
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
void 0;
void 0;
void 0;
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__7985 = null;
  var G__7985__2 = function(o, k) {
    return null
  };
  var G__7985__3 = function(o, k, not_found) {
    return not_found
  };
  G__7985 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7985__2.call(this, o, k);
      case 3:
        return G__7985__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7985
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__7986 = null;
  var G__7986__2 = function(_, f) {
    return f.call(null)
  };
  var G__7986__3 = function(_, f, start) {
    return start
  };
  G__7986 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__7986__2.call(this, _, f);
      case 3:
        return G__7986__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7986
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__7987 = null;
  var G__7987__2 = function(_, n) {
    return null
  };
  var G__7987__3 = function(_, n, not_found) {
    return not_found
  };
  G__7987 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7987__2.call(this, _, n);
      case 3:
        return G__7987__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7987
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  return o.toString() === other.toString()
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
void 0;
void 0;
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__8000 = cljs.core._count.call(null, cicoll);
    if(cnt__8000 === 0) {
      return f.call(null)
    }else {
      var val__8001 = cljs.core._nth.call(null, cicoll, 0);
      var n__8002 = 1;
      while(true) {
        if(n__8002 < cnt__8000) {
          var nval__8003 = f.call(null, val__8001, cljs.core._nth.call(null, cicoll, n__8002));
          if(cljs.core.reduced_QMARK_.call(null, nval__8003)) {
            return cljs.core.deref.call(null, nval__8003)
          }else {
            var G__8012 = nval__8003;
            var G__8013 = n__8002 + 1;
            val__8001 = G__8012;
            n__8002 = G__8013;
            continue
          }
        }else {
          return val__8001
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__8004 = cljs.core._count.call(null, cicoll);
    var val__8005 = val;
    var n__8006 = 0;
    while(true) {
      if(n__8006 < cnt__8004) {
        var nval__8007 = f.call(null, val__8005, cljs.core._nth.call(null, cicoll, n__8006));
        if(cljs.core.reduced_QMARK_.call(null, nval__8007)) {
          return cljs.core.deref.call(null, nval__8007)
        }else {
          var G__8014 = nval__8007;
          var G__8015 = n__8006 + 1;
          val__8005 = G__8014;
          n__8006 = G__8015;
          continue
        }
      }else {
        return val__8005
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__8008 = cljs.core._count.call(null, cicoll);
    var val__8009 = val;
    var n__8010 = idx;
    while(true) {
      if(n__8010 < cnt__8008) {
        var nval__8011 = f.call(null, val__8009, cljs.core._nth.call(null, cicoll, n__8010));
        if(cljs.core.reduced_QMARK_.call(null, nval__8011)) {
          return cljs.core.deref.call(null, nval__8011)
        }else {
          var G__8016 = nval__8011;
          var G__8017 = n__8010 + 1;
          val__8009 = G__8016;
          n__8010 = G__8017;
          continue
        }
      }else {
        return val__8009
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__8030 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__8031 = arr[0];
      var n__8032 = 1;
      while(true) {
        if(n__8032 < cnt__8030) {
          var nval__8033 = f.call(null, val__8031, arr[n__8032]);
          if(cljs.core.reduced_QMARK_.call(null, nval__8033)) {
            return cljs.core.deref.call(null, nval__8033)
          }else {
            var G__8042 = nval__8033;
            var G__8043 = n__8032 + 1;
            val__8031 = G__8042;
            n__8032 = G__8043;
            continue
          }
        }else {
          return val__8031
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__8034 = arr.length;
    var val__8035 = val;
    var n__8036 = 0;
    while(true) {
      if(n__8036 < cnt__8034) {
        var nval__8037 = f.call(null, val__8035, arr[n__8036]);
        if(cljs.core.reduced_QMARK_.call(null, nval__8037)) {
          return cljs.core.deref.call(null, nval__8037)
        }else {
          var G__8044 = nval__8037;
          var G__8045 = n__8036 + 1;
          val__8035 = G__8044;
          n__8036 = G__8045;
          continue
        }
      }else {
        return val__8035
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__8038 = arr.length;
    var val__8039 = val;
    var n__8040 = idx;
    while(true) {
      if(n__8040 < cnt__8038) {
        var nval__8041 = f.call(null, val__8039, arr[n__8040]);
        if(cljs.core.reduced_QMARK_.call(null, nval__8041)) {
          return cljs.core.deref.call(null, nval__8041)
        }else {
          var G__8046 = nval__8041;
          var G__8047 = n__8040 + 1;
          val__8039 = G__8046;
          n__8040 = G__8047;
          continue
        }
      }else {
        return val__8039
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
void 0;
void 0;
void 0;
void 0;
void 0;
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8048 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__8049 = this;
  if(this__8049.i + 1 < this__8049.a.length) {
    return new cljs.core.IndexedSeq(this__8049.a, this__8049.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8050 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__8051 = this;
  var c__8052 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__8052 > 0) {
    return new cljs.core.RSeq(coll, c__8052 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__8053 = this;
  var this__8054 = this;
  return cljs.core.pr_str.call(null, this__8054)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8055 = this;
  if(cljs.core.counted_QMARK_.call(null, this__8055.a)) {
    return cljs.core.ci_reduce.call(null, this__8055.a, f, this__8055.a[this__8055.i], this__8055.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__8055.a[this__8055.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8056 = this;
  if(cljs.core.counted_QMARK_.call(null, this__8056.a)) {
    return cljs.core.ci_reduce.call(null, this__8056.a, f, start, this__8056.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__8057 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8058 = this;
  return this__8058.a.length - this__8058.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__8059 = this;
  return this__8059.a[this__8059.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__8060 = this;
  if(this__8060.i + 1 < this__8060.a.length) {
    return new cljs.core.IndexedSeq(this__8060.a, this__8060.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8061 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__8062 = this;
  var i__8063 = n + this__8062.i;
  if(i__8063 < this__8062.a.length) {
    return this__8062.a[i__8063]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__8064 = this;
  var i__8065 = n + this__8064.i;
  if(i__8065 < this__8064.a.length) {
    return this__8064.a[i__8065]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__8066 = null;
  var G__8066__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__8066__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__8066 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8066__2.call(this, array, f);
      case 3:
        return G__8066__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8066
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__8067 = null;
  var G__8067__2 = function(array, k) {
    return array[k]
  };
  var G__8067__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__8067 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8067__2.call(this, array, k);
      case 3:
        return G__8067__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8067
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__8068 = null;
  var G__8068__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__8068__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__8068 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8068__2.call(this, array, n);
      case 3:
        return G__8068__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8068
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8069 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8070 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__8071 = this;
  var this__8072 = this;
  return cljs.core.pr_str.call(null, this__8072)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8073 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8074 = this;
  return this__8074.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8075 = this;
  return cljs.core._nth.call(null, this__8075.ci, this__8075.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8076 = this;
  if(this__8076.i > 0) {
    return new cljs.core.RSeq(this__8076.ci, this__8076.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8077 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__8078 = this;
  return new cljs.core.RSeq(this__8078.ci, this__8078.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8079 = this;
  return this__8079.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8083__8084 = coll;
      if(G__8083__8084) {
        if(function() {
          var or__3824__auto____8085 = G__8083__8084.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____8085) {
            return or__3824__auto____8085
          }else {
            return G__8083__8084.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__8083__8084.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__8083__8084)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__8083__8084)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8090__8091 = coll;
      if(G__8090__8091) {
        if(function() {
          var or__3824__auto____8092 = G__8090__8091.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8092) {
            return or__3824__auto____8092
          }else {
            return G__8090__8091.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8090__8091.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8090__8091)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8090__8091)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__8093 = cljs.core.seq.call(null, coll);
      if(s__8093 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__8093)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__8098__8099 = coll;
      if(G__8098__8099) {
        if(function() {
          var or__3824__auto____8100 = G__8098__8099.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8100) {
            return or__3824__auto____8100
          }else {
            return G__8098__8099.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8098__8099.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8098__8099)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8098__8099)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__8101 = cljs.core.seq.call(null, coll);
      if(!(s__8101 == null)) {
        return cljs.core._rest.call(null, s__8101)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8105__8106 = coll;
      if(G__8105__8106) {
        if(function() {
          var or__3824__auto____8107 = G__8105__8106.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____8107) {
            return or__3824__auto____8107
          }else {
            return G__8105__8106.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__8105__8106.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__8105__8106)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__8105__8106)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__8109 = cljs.core.next.call(null, s);
    if(!(sn__8109 == null)) {
      var G__8110 = sn__8109;
      s = G__8110;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__8111__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__8112 = conj.call(null, coll, x);
          var G__8113 = cljs.core.first.call(null, xs);
          var G__8114 = cljs.core.next.call(null, xs);
          coll = G__8112;
          x = G__8113;
          xs = G__8114;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__8111 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8111__delegate.call(this, coll, x, xs)
    };
    G__8111.cljs$lang$maxFixedArity = 2;
    G__8111.cljs$lang$applyTo = function(arglist__8115) {
      var coll = cljs.core.first(arglist__8115);
      var x = cljs.core.first(cljs.core.next(arglist__8115));
      var xs = cljs.core.rest(cljs.core.next(arglist__8115));
      return G__8111__delegate(coll, x, xs)
    };
    G__8111.cljs$lang$arity$variadic = G__8111__delegate;
    return G__8111
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
void 0;
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__8118 = cljs.core.seq.call(null, coll);
  var acc__8119 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__8118)) {
      return acc__8119 + cljs.core._count.call(null, s__8118)
    }else {
      var G__8120 = cljs.core.next.call(null, s__8118);
      var G__8121 = acc__8119 + 1;
      s__8118 = G__8120;
      acc__8119 = G__8121;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
void 0;
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__8128__8129 = coll;
        if(G__8128__8129) {
          if(function() {
            var or__3824__auto____8130 = G__8128__8129.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____8130) {
              return or__3824__auto____8130
            }else {
              return G__8128__8129.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__8128__8129.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8128__8129)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8128__8129)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__8131__8132 = coll;
        if(G__8131__8132) {
          if(function() {
            var or__3824__auto____8133 = G__8131__8132.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____8133) {
              return or__3824__auto____8133
            }else {
              return G__8131__8132.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__8131__8132.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8131__8132)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8131__8132)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__8136__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__8135 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__8137 = ret__8135;
          var G__8138 = cljs.core.first.call(null, kvs);
          var G__8139 = cljs.core.second.call(null, kvs);
          var G__8140 = cljs.core.nnext.call(null, kvs);
          coll = G__8137;
          k = G__8138;
          v = G__8139;
          kvs = G__8140;
          continue
        }else {
          return ret__8135
        }
        break
      }
    };
    var G__8136 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8136__delegate.call(this, coll, k, v, kvs)
    };
    G__8136.cljs$lang$maxFixedArity = 3;
    G__8136.cljs$lang$applyTo = function(arglist__8141) {
      var coll = cljs.core.first(arglist__8141);
      var k = cljs.core.first(cljs.core.next(arglist__8141));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8141)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8141)));
      return G__8136__delegate(coll, k, v, kvs)
    };
    G__8136.cljs$lang$arity$variadic = G__8136__delegate;
    return G__8136
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__8144__delegate = function(coll, k, ks) {
      while(true) {
        var ret__8143 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__8145 = ret__8143;
          var G__8146 = cljs.core.first.call(null, ks);
          var G__8147 = cljs.core.next.call(null, ks);
          coll = G__8145;
          k = G__8146;
          ks = G__8147;
          continue
        }else {
          return ret__8143
        }
        break
      }
    };
    var G__8144 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8144__delegate.call(this, coll, k, ks)
    };
    G__8144.cljs$lang$maxFixedArity = 2;
    G__8144.cljs$lang$applyTo = function(arglist__8148) {
      var coll = cljs.core.first(arglist__8148);
      var k = cljs.core.first(cljs.core.next(arglist__8148));
      var ks = cljs.core.rest(cljs.core.next(arglist__8148));
      return G__8144__delegate(coll, k, ks)
    };
    G__8144.cljs$lang$arity$variadic = G__8144__delegate;
    return G__8144
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__8152__8153 = o;
    if(G__8152__8153) {
      if(function() {
        var or__3824__auto____8154 = G__8152__8153.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____8154) {
          return or__3824__auto____8154
        }else {
          return G__8152__8153.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__8152__8153.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__8152__8153)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__8152__8153)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__8157__delegate = function(coll, k, ks) {
      while(true) {
        var ret__8156 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__8158 = ret__8156;
          var G__8159 = cljs.core.first.call(null, ks);
          var G__8160 = cljs.core.next.call(null, ks);
          coll = G__8158;
          k = G__8159;
          ks = G__8160;
          continue
        }else {
          return ret__8156
        }
        break
      }
    };
    var G__8157 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8157__delegate.call(this, coll, k, ks)
    };
    G__8157.cljs$lang$maxFixedArity = 2;
    G__8157.cljs$lang$applyTo = function(arglist__8161) {
      var coll = cljs.core.first(arglist__8161);
      var k = cljs.core.first(cljs.core.next(arglist__8161));
      var ks = cljs.core.rest(cljs.core.next(arglist__8161));
      return G__8157__delegate(coll, k, ks)
    };
    G__8157.cljs$lang$arity$variadic = G__8157__delegate;
    return G__8157
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__8163 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__8163;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__8163
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__8165 = cljs.core.string_hash_cache[k];
  if(!(h__8165 == null)) {
    return h__8165
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____8167 = goog.isString(o);
      if(and__3822__auto____8167) {
        return check_cache
      }else {
        return and__3822__auto____8167
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8171__8172 = x;
    if(G__8171__8172) {
      if(function() {
        var or__3824__auto____8173 = G__8171__8172.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____8173) {
          return or__3824__auto____8173
        }else {
          return G__8171__8172.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__8171__8172.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__8171__8172)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__8171__8172)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8177__8178 = x;
    if(G__8177__8178) {
      if(function() {
        var or__3824__auto____8179 = G__8177__8178.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____8179) {
          return or__3824__auto____8179
        }else {
          return G__8177__8178.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__8177__8178.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__8177__8178)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__8177__8178)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__8183__8184 = x;
  if(G__8183__8184) {
    if(function() {
      var or__3824__auto____8185 = G__8183__8184.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____8185) {
        return or__3824__auto____8185
      }else {
        return G__8183__8184.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__8183__8184.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__8183__8184)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__8183__8184)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__8189__8190 = x;
  if(G__8189__8190) {
    if(function() {
      var or__3824__auto____8191 = G__8189__8190.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____8191) {
        return or__3824__auto____8191
      }else {
        return G__8189__8190.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__8189__8190.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__8189__8190)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__8189__8190)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__8195__8196 = x;
  if(G__8195__8196) {
    if(function() {
      var or__3824__auto____8197 = G__8195__8196.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____8197) {
        return or__3824__auto____8197
      }else {
        return G__8195__8196.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__8195__8196.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__8195__8196)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__8195__8196)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__8201__8202 = x;
  if(G__8201__8202) {
    if(function() {
      var or__3824__auto____8203 = G__8201__8202.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____8203) {
        return or__3824__auto____8203
      }else {
        return G__8201__8202.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__8201__8202.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8201__8202)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8201__8202)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__8207__8208 = x;
  if(G__8207__8208) {
    if(function() {
      var or__3824__auto____8209 = G__8207__8208.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____8209) {
        return or__3824__auto____8209
      }else {
        return G__8207__8208.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__8207__8208.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8207__8208)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8207__8208)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8213__8214 = x;
    if(G__8213__8214) {
      if(function() {
        var or__3824__auto____8215 = G__8213__8214.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____8215) {
          return or__3824__auto____8215
        }else {
          return G__8213__8214.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__8213__8214.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__8213__8214)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__8213__8214)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__8219__8220 = x;
  if(G__8219__8220) {
    if(function() {
      var or__3824__auto____8221 = G__8219__8220.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____8221) {
        return or__3824__auto____8221
      }else {
        return G__8219__8220.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__8219__8220.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__8219__8220)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__8219__8220)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__8225__8226 = x;
  if(G__8225__8226) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____8227 = null;
      if(cljs.core.truth_(or__3824__auto____8227)) {
        return or__3824__auto____8227
      }else {
        return G__8225__8226.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__8225__8226.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__8225__8226)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__8225__8226)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__8228__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__8228 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8228__delegate.call(this, keyvals)
    };
    G__8228.cljs$lang$maxFixedArity = 0;
    G__8228.cljs$lang$applyTo = function(arglist__8229) {
      var keyvals = cljs.core.seq(arglist__8229);
      return G__8228__delegate(keyvals)
    };
    G__8228.cljs$lang$arity$variadic = G__8228__delegate;
    return G__8228
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(falsecljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__8231 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__8231.push(key)
  });
  return keys__8231
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__8235 = i;
  var j__8236 = j;
  var len__8237 = len;
  while(true) {
    if(len__8237 === 0) {
      return to
    }else {
      to[j__8236] = from[i__8235];
      var G__8238 = i__8235 + 1;
      var G__8239 = j__8236 + 1;
      var G__8240 = len__8237 - 1;
      i__8235 = G__8238;
      j__8236 = G__8239;
      len__8237 = G__8240;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__8244 = i + (len - 1);
  var j__8245 = j + (len - 1);
  var len__8246 = len;
  while(true) {
    if(len__8246 === 0) {
      return to
    }else {
      to[j__8245] = from[i__8244];
      var G__8247 = i__8244 - 1;
      var G__8248 = j__8245 - 1;
      var G__8249 = len__8246 - 1;
      i__8244 = G__8247;
      j__8245 = G__8248;
      len__8246 = G__8249;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__8253__8254 = s;
    if(G__8253__8254) {
      if(function() {
        var or__3824__auto____8255 = G__8253__8254.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____8255) {
          return or__3824__auto____8255
        }else {
          return G__8253__8254.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__8253__8254.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8253__8254)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8253__8254)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__8259__8260 = s;
  if(G__8259__8260) {
    if(function() {
      var or__3824__auto____8261 = G__8259__8260.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____8261) {
        return or__3824__auto____8261
      }else {
        return G__8259__8260.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__8259__8260.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__8259__8260)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__8259__8260)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____8264 = goog.isString(x);
  if(and__3822__auto____8264) {
    return!function() {
      var or__3824__auto____8265 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____8265) {
        return or__3824__auto____8265
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____8264
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____8267 = goog.isString(x);
  if(and__3822__auto____8267) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____8267
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____8269 = goog.isString(x);
  if(and__3822__auto____8269) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____8269
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____8274 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____8274) {
    return or__3824__auto____8274
  }else {
    var G__8275__8276 = f;
    if(G__8275__8276) {
      if(function() {
        var or__3824__auto____8277 = G__8275__8276.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____8277) {
          return or__3824__auto____8277
        }else {
          return G__8275__8276.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__8275__8276.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__8275__8276)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__8275__8276)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____8279 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____8279) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____8279
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____8282 = coll;
    if(cljs.core.truth_(and__3822__auto____8282)) {
      var and__3822__auto____8283 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____8283) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____8283
      }
    }else {
      return and__3822__auto____8282
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__8292__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__8288 = cljs.core.set([y, x]);
        var xs__8289 = more;
        while(true) {
          var x__8290 = cljs.core.first.call(null, xs__8289);
          var etc__8291 = cljs.core.next.call(null, xs__8289);
          if(cljs.core.truth_(xs__8289)) {
            if(cljs.core.contains_QMARK_.call(null, s__8288, x__8290)) {
              return false
            }else {
              var G__8293 = cljs.core.conj.call(null, s__8288, x__8290);
              var G__8294 = etc__8291;
              s__8288 = G__8293;
              xs__8289 = G__8294;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__8292 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8292__delegate.call(this, x, y, more)
    };
    G__8292.cljs$lang$maxFixedArity = 2;
    G__8292.cljs$lang$applyTo = function(arglist__8295) {
      var x = cljs.core.first(arglist__8295);
      var y = cljs.core.first(cljs.core.next(arglist__8295));
      var more = cljs.core.rest(cljs.core.next(arglist__8295));
      return G__8292__delegate(x, y, more)
    };
    G__8292.cljs$lang$arity$variadic = G__8292__delegate;
    return G__8292
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__8299__8300 = x;
            if(G__8299__8300) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____8301 = null;
                if(cljs.core.truth_(or__3824__auto____8301)) {
                  return or__3824__auto____8301
                }else {
                  return G__8299__8300.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__8299__8300.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__8299__8300)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__8299__8300)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__8306 = cljs.core.count.call(null, xs);
    var yl__8307 = cljs.core.count.call(null, ys);
    if(xl__8306 < yl__8307) {
      return-1
    }else {
      if(xl__8306 > yl__8307) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__8306, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__8308 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____8309 = d__8308 === 0;
        if(and__3822__auto____8309) {
          return n + 1 < len
        }else {
          return and__3822__auto____8309
        }
      }()) {
        var G__8310 = xs;
        var G__8311 = ys;
        var G__8312 = len;
        var G__8313 = n + 1;
        xs = G__8310;
        ys = G__8311;
        len = G__8312;
        n = G__8313;
        continue
      }else {
        return d__8308
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__8315 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__8315)) {
        return r__8315
      }else {
        if(cljs.core.truth_(r__8315)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
void 0;
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__8317 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__8317, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__8317)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____8323 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____8323) {
      var s__8324 = temp__3971__auto____8323;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__8324), cljs.core.next.call(null, s__8324))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__8325 = val;
    var coll__8326 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__8326) {
        var nval__8327 = f.call(null, val__8325, cljs.core.first.call(null, coll__8326));
        if(cljs.core.reduced_QMARK_.call(null, nval__8327)) {
          return cljs.core.deref.call(null, nval__8327)
        }else {
          var G__8328 = nval__8327;
          var G__8329 = cljs.core.next.call(null, coll__8326);
          val__8325 = G__8328;
          coll__8326 = G__8329;
          continue
        }
      }else {
        return val__8325
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
void 0;
cljs.core.shuffle = function shuffle(coll) {
  var a__8331 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__8331);
  return cljs.core.vec.call(null, a__8331)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__8338__8339 = coll;
      if(G__8338__8339) {
        if(function() {
          var or__3824__auto____8340 = G__8338__8339.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____8340) {
            return or__3824__auto____8340
          }else {
            return G__8338__8339.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__8338__8339.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8338__8339)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8338__8339)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__8341__8342 = coll;
      if(G__8341__8342) {
        if(function() {
          var or__3824__auto____8343 = G__8341__8342.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____8343) {
            return or__3824__auto____8343
          }else {
            return G__8341__8342.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__8341__8342.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8341__8342)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8341__8342)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__8344 = this;
  return this__8344.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__8345__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__8345 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8345__delegate.call(this, x, y, more)
    };
    G__8345.cljs$lang$maxFixedArity = 2;
    G__8345.cljs$lang$applyTo = function(arglist__8346) {
      var x = cljs.core.first(arglist__8346);
      var y = cljs.core.first(cljs.core.next(arglist__8346));
      var more = cljs.core.rest(cljs.core.next(arglist__8346));
      return G__8345__delegate(x, y, more)
    };
    G__8345.cljs$lang$arity$variadic = G__8345__delegate;
    return G__8345
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__8347__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__8347 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8347__delegate.call(this, x, y, more)
    };
    G__8347.cljs$lang$maxFixedArity = 2;
    G__8347.cljs$lang$applyTo = function(arglist__8348) {
      var x = cljs.core.first(arglist__8348);
      var y = cljs.core.first(cljs.core.next(arglist__8348));
      var more = cljs.core.rest(cljs.core.next(arglist__8348));
      return G__8347__delegate(x, y, more)
    };
    G__8347.cljs$lang$arity$variadic = G__8347__delegate;
    return G__8347
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__8349__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__8349 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8349__delegate.call(this, x, y, more)
    };
    G__8349.cljs$lang$maxFixedArity = 2;
    G__8349.cljs$lang$applyTo = function(arglist__8350) {
      var x = cljs.core.first(arglist__8350);
      var y = cljs.core.first(cljs.core.next(arglist__8350));
      var more = cljs.core.rest(cljs.core.next(arglist__8350));
      return G__8349__delegate(x, y, more)
    };
    G__8349.cljs$lang$arity$variadic = G__8349__delegate;
    return G__8349
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__8351__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__8351 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8351__delegate.call(this, x, y, more)
    };
    G__8351.cljs$lang$maxFixedArity = 2;
    G__8351.cljs$lang$applyTo = function(arglist__8352) {
      var x = cljs.core.first(arglist__8352);
      var y = cljs.core.first(cljs.core.next(arglist__8352));
      var more = cljs.core.rest(cljs.core.next(arglist__8352));
      return G__8351__delegate(x, y, more)
    };
    G__8351.cljs$lang$arity$variadic = G__8351__delegate;
    return G__8351
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__8353__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__8354 = y;
            var G__8355 = cljs.core.first.call(null, more);
            var G__8356 = cljs.core.next.call(null, more);
            x = G__8354;
            y = G__8355;
            more = G__8356;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8353 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8353__delegate.call(this, x, y, more)
    };
    G__8353.cljs$lang$maxFixedArity = 2;
    G__8353.cljs$lang$applyTo = function(arglist__8357) {
      var x = cljs.core.first(arglist__8357);
      var y = cljs.core.first(cljs.core.next(arglist__8357));
      var more = cljs.core.rest(cljs.core.next(arglist__8357));
      return G__8353__delegate(x, y, more)
    };
    G__8353.cljs$lang$arity$variadic = G__8353__delegate;
    return G__8353
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__8358__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__8359 = y;
            var G__8360 = cljs.core.first.call(null, more);
            var G__8361 = cljs.core.next.call(null, more);
            x = G__8359;
            y = G__8360;
            more = G__8361;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8358 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8358__delegate.call(this, x, y, more)
    };
    G__8358.cljs$lang$maxFixedArity = 2;
    G__8358.cljs$lang$applyTo = function(arglist__8362) {
      var x = cljs.core.first(arglist__8362);
      var y = cljs.core.first(cljs.core.next(arglist__8362));
      var more = cljs.core.rest(cljs.core.next(arglist__8362));
      return G__8358__delegate(x, y, more)
    };
    G__8358.cljs$lang$arity$variadic = G__8358__delegate;
    return G__8358
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__8363__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__8364 = y;
            var G__8365 = cljs.core.first.call(null, more);
            var G__8366 = cljs.core.next.call(null, more);
            x = G__8364;
            y = G__8365;
            more = G__8366;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8363 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8363__delegate.call(this, x, y, more)
    };
    G__8363.cljs$lang$maxFixedArity = 2;
    G__8363.cljs$lang$applyTo = function(arglist__8367) {
      var x = cljs.core.first(arglist__8367);
      var y = cljs.core.first(cljs.core.next(arglist__8367));
      var more = cljs.core.rest(cljs.core.next(arglist__8367));
      return G__8363__delegate(x, y, more)
    };
    G__8363.cljs$lang$arity$variadic = G__8363__delegate;
    return G__8363
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__8368__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__8369 = y;
            var G__8370 = cljs.core.first.call(null, more);
            var G__8371 = cljs.core.next.call(null, more);
            x = G__8369;
            y = G__8370;
            more = G__8371;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8368 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8368__delegate.call(this, x, y, more)
    };
    G__8368.cljs$lang$maxFixedArity = 2;
    G__8368.cljs$lang$applyTo = function(arglist__8372) {
      var x = cljs.core.first(arglist__8372);
      var y = cljs.core.first(cljs.core.next(arglist__8372));
      var more = cljs.core.rest(cljs.core.next(arglist__8372));
      return G__8368__delegate(x, y, more)
    };
    G__8368.cljs$lang$arity$variadic = G__8368__delegate;
    return G__8368
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__8373__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__8373 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8373__delegate.call(this, x, y, more)
    };
    G__8373.cljs$lang$maxFixedArity = 2;
    G__8373.cljs$lang$applyTo = function(arglist__8374) {
      var x = cljs.core.first(arglist__8374);
      var y = cljs.core.first(cljs.core.next(arglist__8374));
      var more = cljs.core.rest(cljs.core.next(arglist__8374));
      return G__8373__delegate(x, y, more)
    };
    G__8373.cljs$lang$arity$variadic = G__8373__delegate;
    return G__8373
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__8375__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__8375 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8375__delegate.call(this, x, y, more)
    };
    G__8375.cljs$lang$maxFixedArity = 2;
    G__8375.cljs$lang$applyTo = function(arglist__8376) {
      var x = cljs.core.first(arglist__8376);
      var y = cljs.core.first(cljs.core.next(arglist__8376));
      var more = cljs.core.rest(cljs.core.next(arglist__8376));
      return G__8375__delegate(x, y, more)
    };
    G__8375.cljs$lang$arity$variadic = G__8375__delegate;
    return G__8375
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__8378 = n % d;
  return cljs.core.fix.call(null, (n - rem__8378) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__8380 = cljs.core.quot.call(null, n, d);
  return n - d * q__8380
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__8383 = v - (v >> 1 & 1431655765);
  var v__8384 = (v__8383 & 858993459) + (v__8383 >> 2 & 858993459);
  return(v__8384 + (v__8384 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__8385__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__8386 = y;
            var G__8387 = cljs.core.first.call(null, more);
            var G__8388 = cljs.core.next.call(null, more);
            x = G__8386;
            y = G__8387;
            more = G__8388;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8385 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8385__delegate.call(this, x, y, more)
    };
    G__8385.cljs$lang$maxFixedArity = 2;
    G__8385.cljs$lang$applyTo = function(arglist__8389) {
      var x = cljs.core.first(arglist__8389);
      var y = cljs.core.first(cljs.core.next(arglist__8389));
      var more = cljs.core.rest(cljs.core.next(arglist__8389));
      return G__8385__delegate(x, y, more)
    };
    G__8385.cljs$lang$arity$variadic = G__8385__delegate;
    return G__8385
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__8393 = n;
  var xs__8394 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____8395 = xs__8394;
      if(and__3822__auto____8395) {
        return n__8393 > 0
      }else {
        return and__3822__auto____8395
      }
    }())) {
      var G__8396 = n__8393 - 1;
      var G__8397 = cljs.core.next.call(null, xs__8394);
      n__8393 = G__8396;
      xs__8394 = G__8397;
      continue
    }else {
      return xs__8394
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__8398__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__8399 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__8400 = cljs.core.next.call(null, more);
            sb = G__8399;
            more = G__8400;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__8398 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__8398__delegate.call(this, x, ys)
    };
    G__8398.cljs$lang$maxFixedArity = 1;
    G__8398.cljs$lang$applyTo = function(arglist__8401) {
      var x = cljs.core.first(arglist__8401);
      var ys = cljs.core.rest(arglist__8401);
      return G__8398__delegate(x, ys)
    };
    G__8398.cljs$lang$arity$variadic = G__8398__delegate;
    return G__8398
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__8402__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__8403 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__8404 = cljs.core.next.call(null, more);
            sb = G__8403;
            more = G__8404;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__8402 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__8402__delegate.call(this, x, ys)
    };
    G__8402.cljs$lang$maxFixedArity = 1;
    G__8402.cljs$lang$applyTo = function(arglist__8405) {
      var x = cljs.core.first(arglist__8405);
      var ys = cljs.core.rest(arglist__8405);
      return G__8402__delegate(x, ys)
    };
    G__8402.cljs$lang$arity$variadic = G__8402__delegate;
    return G__8402
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__8408 = cljs.core.seq.call(null, x);
    var ys__8409 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__8408 == null) {
        return ys__8409 == null
      }else {
        if(ys__8409 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__8408), cljs.core.first.call(null, ys__8409))) {
            var G__8410 = cljs.core.next.call(null, xs__8408);
            var G__8411 = cljs.core.next.call(null, ys__8409);
            xs__8408 = G__8410;
            ys__8409 = G__8411;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__8412_SHARP_, p2__8413_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__8412_SHARP_, cljs.core.hash.call(null, p2__8413_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
void 0;
void 0;
cljs.core.hash_imap = function hash_imap(m) {
  var h__8417 = 0;
  var s__8418 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__8418) {
      var e__8419 = cljs.core.first.call(null, s__8418);
      var G__8420 = (h__8417 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__8419)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__8419)))) % 4503599627370496;
      var G__8421 = cljs.core.next.call(null, s__8418);
      h__8417 = G__8420;
      s__8418 = G__8421;
      continue
    }else {
      return h__8417
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__8425 = 0;
  var s__8426 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__8426) {
      var e__8427 = cljs.core.first.call(null, s__8426);
      var G__8428 = (h__8425 + cljs.core.hash.call(null, e__8427)) % 4503599627370496;
      var G__8429 = cljs.core.next.call(null, s__8426);
      h__8425 = G__8428;
      s__8426 = G__8429;
      continue
    }else {
      return h__8425
    }
    break
  }
};
void 0;
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__8450__8451 = cljs.core.seq.call(null, fn_map);
  if(G__8450__8451) {
    var G__8453__8455 = cljs.core.first.call(null, G__8450__8451);
    var vec__8454__8456 = G__8453__8455;
    var key_name__8457 = cljs.core.nth.call(null, vec__8454__8456, 0, null);
    var f__8458 = cljs.core.nth.call(null, vec__8454__8456, 1, null);
    var G__8450__8459 = G__8450__8451;
    var G__8453__8460 = G__8453__8455;
    var G__8450__8461 = G__8450__8459;
    while(true) {
      var vec__8462__8463 = G__8453__8460;
      var key_name__8464 = cljs.core.nth.call(null, vec__8462__8463, 0, null);
      var f__8465 = cljs.core.nth.call(null, vec__8462__8463, 1, null);
      var G__8450__8466 = G__8450__8461;
      var str_name__8467 = cljs.core.name.call(null, key_name__8464);
      obj[str_name__8467] = f__8465;
      var temp__3974__auto____8468 = cljs.core.next.call(null, G__8450__8466);
      if(temp__3974__auto____8468) {
        var G__8450__8469 = temp__3974__auto____8468;
        var G__8470 = cljs.core.first.call(null, G__8450__8469);
        var G__8471 = G__8450__8469;
        G__8453__8460 = G__8470;
        G__8450__8461 = G__8471;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8472 = this;
  var h__2173__auto____8473 = this__8472.__hash;
  if(!(h__2173__auto____8473 == null)) {
    return h__2173__auto____8473
  }else {
    var h__2173__auto____8474 = cljs.core.hash_coll.call(null, coll);
    this__8472.__hash = h__2173__auto____8474;
    return h__2173__auto____8474
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8475 = this;
  if(this__8475.count === 1) {
    return null
  }else {
    return this__8475.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8476 = this;
  return new cljs.core.List(this__8476.meta, o, coll, this__8476.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__8477 = this;
  var this__8478 = this;
  return cljs.core.pr_str.call(null, this__8478)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8479 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8480 = this;
  return this__8480.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8481 = this;
  return this__8481.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8482 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8483 = this;
  return this__8483.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8484 = this;
  if(this__8484.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__8484.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8485 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8486 = this;
  return new cljs.core.List(meta, this__8486.first, this__8486.rest, this__8486.count, this__8486.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8487 = this;
  return this__8487.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8488 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8489 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8490 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8491 = this;
  return new cljs.core.List(this__8491.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__8492 = this;
  var this__8493 = this;
  return cljs.core.pr_str.call(null, this__8493)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8494 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8495 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8496 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8497 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8498 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8499 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8500 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8501 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8502 = this;
  return this__8502.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8503 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__8507__8508 = coll;
  if(G__8507__8508) {
    if(function() {
      var or__3824__auto____8509 = G__8507__8508.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____8509) {
        return or__3824__auto____8509
      }else {
        return G__8507__8508.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__8507__8508.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8507__8508)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8507__8508)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__8510__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__8510 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8510__delegate.call(this, x, y, z, items)
    };
    G__8510.cljs$lang$maxFixedArity = 3;
    G__8510.cljs$lang$applyTo = function(arglist__8511) {
      var x = cljs.core.first(arglist__8511);
      var y = cljs.core.first(cljs.core.next(arglist__8511));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8511)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8511)));
      return G__8510__delegate(x, y, z, items)
    };
    G__8510.cljs$lang$arity$variadic = G__8510__delegate;
    return G__8510
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8512 = this;
  var h__2173__auto____8513 = this__8512.__hash;
  if(!(h__2173__auto____8513 == null)) {
    return h__2173__auto____8513
  }else {
    var h__2173__auto____8514 = cljs.core.hash_coll.call(null, coll);
    this__8512.__hash = h__2173__auto____8514;
    return h__2173__auto____8514
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8515 = this;
  if(this__8515.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__8515.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8516 = this;
  return new cljs.core.Cons(null, o, coll, this__8516.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__8517 = this;
  var this__8518 = this;
  return cljs.core.pr_str.call(null, this__8518)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8519 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8520 = this;
  return this__8520.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8521 = this;
  if(this__8521.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8521.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8522 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8523 = this;
  return new cljs.core.Cons(meta, this__8523.first, this__8523.rest, this__8523.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8524 = this;
  return this__8524.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8525 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8525.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____8530 = coll == null;
    if(or__3824__auto____8530) {
      return or__3824__auto____8530
    }else {
      var G__8531__8532 = coll;
      if(G__8531__8532) {
        if(function() {
          var or__3824__auto____8533 = G__8531__8532.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8533) {
            return or__3824__auto____8533
          }else {
            return G__8531__8532.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8531__8532.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8531__8532)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8531__8532)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__8537__8538 = x;
  if(G__8537__8538) {
    if(function() {
      var or__3824__auto____8539 = G__8537__8538.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____8539) {
        return or__3824__auto____8539
      }else {
        return G__8537__8538.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__8537__8538.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8537__8538)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8537__8538)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__8540 = null;
  var G__8540__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__8540__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__8540 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8540__2.call(this, string, f);
      case 3:
        return G__8540__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8540
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__8541 = null;
  var G__8541__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__8541__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__8541 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8541__2.call(this, string, k);
      case 3:
        return G__8541__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8541
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__8542 = null;
  var G__8542__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__8542__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__8542 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8542__2.call(this, string, n);
      case 3:
        return G__8542__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8542
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function(this_sym8545, coll) {
  var this__8546 = this;
  var this_sym8545__8547 = this;
  var ___8548 = this_sym8545__8547;
  if(coll == null) {
    return null
  }else {
    var strobj__8549 = coll.strobj;
    if(strobj__8549 == null) {
      return cljs.core._lookup.call(null, coll, this__8546.k, null)
    }else {
      return strobj__8549[this__8546.k]
    }
  }
};
cljs.core.Keyword.prototype.apply = function(this_sym8543, args8544) {
  var this__8550 = this;
  return this_sym8543.call.apply(this_sym8543, [this_sym8543].concat(args8544.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__8559 = null;
  var G__8559__2 = function(this_sym8553, coll) {
    var this_sym8553__8555 = this;
    var this__8556 = this_sym8553__8555;
    return cljs.core._lookup.call(null, coll, this__8556.toString(), null)
  };
  var G__8559__3 = function(this_sym8554, coll, not_found) {
    var this_sym8554__8557 = this;
    var this__8558 = this_sym8554__8557;
    return cljs.core._lookup.call(null, coll, this__8558.toString(), not_found)
  };
  G__8559 = function(this_sym8554, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8559__2.call(this, this_sym8554, coll);
      case 3:
        return G__8559__3.call(this, this_sym8554, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8559
}();
String.prototype.apply = function(this_sym8551, args8552) {
  return this_sym8551.call.apply(this_sym8551, [this_sym8551].concat(args8552.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__8561 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__8561
  }else {
    lazy_seq.x = x__8561.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8562 = this;
  var h__2173__auto____8563 = this__8562.__hash;
  if(!(h__2173__auto____8563 == null)) {
    return h__2173__auto____8563
  }else {
    var h__2173__auto____8564 = cljs.core.hash_coll.call(null, coll);
    this__8562.__hash = h__2173__auto____8564;
    return h__2173__auto____8564
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8565 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8566 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__8567 = this;
  var this__8568 = this;
  return cljs.core.pr_str.call(null, this__8568)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8569 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8570 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8571 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8572 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8573 = this;
  return new cljs.core.LazySeq(meta, this__8573.realized, this__8573.x, this__8573.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8574 = this;
  return this__8574.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8575 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8575.meta)
};
cljs.core.LazySeq;
void 0;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8576 = this;
  return this__8576.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__8577 = this;
  var ___8578 = this;
  this__8577.buf[this__8577.end] = o;
  return this__8577.end = this__8577.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__8579 = this;
  var ___8580 = this;
  var ret__8581 = new cljs.core.ArrayChunk(this__8579.buf, 0, this__8579.end);
  this__8579.buf = null;
  return ret__8581
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8582 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__8582.arr[this__8582.off], this__8582.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8583 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__8583.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__8584 = this;
  if(this__8584.off === this__8584.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__8584.arr, this__8584.off + 1, this__8584.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__8585 = this;
  return this__8585.arr[this__8585.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__8586 = this;
  if(function() {
    var and__3822__auto____8587 = i >= 0;
    if(and__3822__auto____8587) {
      return i < this__8586.end - this__8586.off
    }else {
      return and__3822__auto____8587
    }
  }()) {
    return this__8586.arr[this__8586.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8588 = this;
  return this__8588.end - this__8588.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__8589 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8590 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8591 = this;
  return cljs.core._nth.call(null, this__8591.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8592 = this;
  if(cljs.core._count.call(null, this__8592.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__8592.chunk), this__8592.more, this__8592.meta)
  }else {
    if(this__8592.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__8592.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__8593 = this;
  if(this__8593.more == null) {
    return null
  }else {
    return this__8593.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8594 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__8595 = this;
  return new cljs.core.ChunkedCons(this__8595.chunk, this__8595.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8596 = this;
  return this__8596.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__8597 = this;
  return this__8597.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__8598 = this;
  if(this__8598.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8598.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__8602__8603 = s;
    if(G__8602__8603) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____8604 = null;
        if(cljs.core.truth_(or__3824__auto____8604)) {
          return or__3824__auto____8604
        }else {
          return G__8602__8603.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__8602__8603.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8602__8603)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8602__8603)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__8607 = [];
  var s__8608 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__8608)) {
      ary__8607.push(cljs.core.first.call(null, s__8608));
      var G__8609 = cljs.core.next.call(null, s__8608);
      s__8608 = G__8609;
      continue
    }else {
      return ary__8607
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__8613 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__8614 = 0;
  var xs__8615 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__8615) {
      ret__8613[i__8614] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__8615));
      var G__8616 = i__8614 + 1;
      var G__8617 = cljs.core.next.call(null, xs__8615);
      i__8614 = G__8616;
      xs__8615 = G__8617;
      continue
    }else {
    }
    break
  }
  return ret__8613
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__8625 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8626 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8627 = 0;
      var s__8628 = s__8626;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8629 = s__8628;
          if(and__3822__auto____8629) {
            return i__8627 < size
          }else {
            return and__3822__auto____8629
          }
        }())) {
          a__8625[i__8627] = cljs.core.first.call(null, s__8628);
          var G__8632 = i__8627 + 1;
          var G__8633 = cljs.core.next.call(null, s__8628);
          i__8627 = G__8632;
          s__8628 = G__8633;
          continue
        }else {
          return a__8625
        }
        break
      }
    }else {
      var n__2512__auto____8630 = size;
      var i__8631 = 0;
      while(true) {
        if(i__8631 < n__2512__auto____8630) {
          a__8625[i__8631] = init_val_or_seq;
          var G__8634 = i__8631 + 1;
          i__8631 = G__8634;
          continue
        }else {
        }
        break
      }
      return a__8625
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__8642 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8643 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8644 = 0;
      var s__8645 = s__8643;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8646 = s__8645;
          if(and__3822__auto____8646) {
            return i__8644 < size
          }else {
            return and__3822__auto____8646
          }
        }())) {
          a__8642[i__8644] = cljs.core.first.call(null, s__8645);
          var G__8649 = i__8644 + 1;
          var G__8650 = cljs.core.next.call(null, s__8645);
          i__8644 = G__8649;
          s__8645 = G__8650;
          continue
        }else {
          return a__8642
        }
        break
      }
    }else {
      var n__2512__auto____8647 = size;
      var i__8648 = 0;
      while(true) {
        if(i__8648 < n__2512__auto____8647) {
          a__8642[i__8648] = init_val_or_seq;
          var G__8651 = i__8648 + 1;
          i__8648 = G__8651;
          continue
        }else {
        }
        break
      }
      return a__8642
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__8659 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8660 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8661 = 0;
      var s__8662 = s__8660;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8663 = s__8662;
          if(and__3822__auto____8663) {
            return i__8661 < size
          }else {
            return and__3822__auto____8663
          }
        }())) {
          a__8659[i__8661] = cljs.core.first.call(null, s__8662);
          var G__8666 = i__8661 + 1;
          var G__8667 = cljs.core.next.call(null, s__8662);
          i__8661 = G__8666;
          s__8662 = G__8667;
          continue
        }else {
          return a__8659
        }
        break
      }
    }else {
      var n__2512__auto____8664 = size;
      var i__8665 = 0;
      while(true) {
        if(i__8665 < n__2512__auto____8664) {
          a__8659[i__8665] = init_val_or_seq;
          var G__8668 = i__8665 + 1;
          i__8665 = G__8668;
          continue
        }else {
        }
        break
      }
      return a__8659
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__8673 = s;
    var i__8674 = n;
    var sum__8675 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____8676 = i__8674 > 0;
        if(and__3822__auto____8676) {
          return cljs.core.seq.call(null, s__8673)
        }else {
          return and__3822__auto____8676
        }
      }())) {
        var G__8677 = cljs.core.next.call(null, s__8673);
        var G__8678 = i__8674 - 1;
        var G__8679 = sum__8675 + 1;
        s__8673 = G__8677;
        i__8674 = G__8678;
        sum__8675 = G__8679;
        continue
      }else {
        return sum__8675
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__8684 = cljs.core.seq.call(null, x);
      if(s__8684) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8684)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__8684), concat.call(null, cljs.core.chunk_rest.call(null, s__8684), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__8684), concat.call(null, cljs.core.rest.call(null, s__8684), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__8688__delegate = function(x, y, zs) {
      var cat__8687 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__8686 = cljs.core.seq.call(null, xys);
          if(xys__8686) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__8686)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__8686), cat.call(null, cljs.core.chunk_rest.call(null, xys__8686), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__8686), cat.call(null, cljs.core.rest.call(null, xys__8686), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__8687.call(null, concat.call(null, x, y), zs)
    };
    var G__8688 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8688__delegate.call(this, x, y, zs)
    };
    G__8688.cljs$lang$maxFixedArity = 2;
    G__8688.cljs$lang$applyTo = function(arglist__8689) {
      var x = cljs.core.first(arglist__8689);
      var y = cljs.core.first(cljs.core.next(arglist__8689));
      var zs = cljs.core.rest(cljs.core.next(arglist__8689));
      return G__8688__delegate(x, y, zs)
    };
    G__8688.cljs$lang$arity$variadic = G__8688__delegate;
    return G__8688
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__8690__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__8690 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8690__delegate.call(this, a, b, c, d, more)
    };
    G__8690.cljs$lang$maxFixedArity = 4;
    G__8690.cljs$lang$applyTo = function(arglist__8691) {
      var a = cljs.core.first(arglist__8691);
      var b = cljs.core.first(cljs.core.next(arglist__8691));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8691)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8691))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8691))));
      return G__8690__delegate(a, b, c, d, more)
    };
    G__8690.cljs$lang$arity$variadic = G__8690__delegate;
    return G__8690
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
void 0;
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__8733 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__8734 = cljs.core._first.call(null, args__8733);
    var args__8735 = cljs.core._rest.call(null, args__8733);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__8734)
      }else {
        return f.call(null, a__8734)
      }
    }else {
      var b__8736 = cljs.core._first.call(null, args__8735);
      var args__8737 = cljs.core._rest.call(null, args__8735);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__8734, b__8736)
        }else {
          return f.call(null, a__8734, b__8736)
        }
      }else {
        var c__8738 = cljs.core._first.call(null, args__8737);
        var args__8739 = cljs.core._rest.call(null, args__8737);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__8734, b__8736, c__8738)
          }else {
            return f.call(null, a__8734, b__8736, c__8738)
          }
        }else {
          var d__8740 = cljs.core._first.call(null, args__8739);
          var args__8741 = cljs.core._rest.call(null, args__8739);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__8734, b__8736, c__8738, d__8740)
            }else {
              return f.call(null, a__8734, b__8736, c__8738, d__8740)
            }
          }else {
            var e__8742 = cljs.core._first.call(null, args__8741);
            var args__8743 = cljs.core._rest.call(null, args__8741);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__8734, b__8736, c__8738, d__8740, e__8742)
              }else {
                return f.call(null, a__8734, b__8736, c__8738, d__8740, e__8742)
              }
            }else {
              var f__8744 = cljs.core._first.call(null, args__8743);
              var args__8745 = cljs.core._rest.call(null, args__8743);
              if(argc === 6) {
                if(f__8744.cljs$lang$arity$6) {
                  return f__8744.cljs$lang$arity$6(a__8734, b__8736, c__8738, d__8740, e__8742, f__8744)
                }else {
                  return f__8744.call(null, a__8734, b__8736, c__8738, d__8740, e__8742, f__8744)
                }
              }else {
                var g__8746 = cljs.core._first.call(null, args__8745);
                var args__8747 = cljs.core._rest.call(null, args__8745);
                if(argc === 7) {
                  if(f__8744.cljs$lang$arity$7) {
                    return f__8744.cljs$lang$arity$7(a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746)
                  }else {
                    return f__8744.call(null, a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746)
                  }
                }else {
                  var h__8748 = cljs.core._first.call(null, args__8747);
                  var args__8749 = cljs.core._rest.call(null, args__8747);
                  if(argc === 8) {
                    if(f__8744.cljs$lang$arity$8) {
                      return f__8744.cljs$lang$arity$8(a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748)
                    }else {
                      return f__8744.call(null, a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748)
                    }
                  }else {
                    var i__8750 = cljs.core._first.call(null, args__8749);
                    var args__8751 = cljs.core._rest.call(null, args__8749);
                    if(argc === 9) {
                      if(f__8744.cljs$lang$arity$9) {
                        return f__8744.cljs$lang$arity$9(a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750)
                      }else {
                        return f__8744.call(null, a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750)
                      }
                    }else {
                      var j__8752 = cljs.core._first.call(null, args__8751);
                      var args__8753 = cljs.core._rest.call(null, args__8751);
                      if(argc === 10) {
                        if(f__8744.cljs$lang$arity$10) {
                          return f__8744.cljs$lang$arity$10(a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750, j__8752)
                        }else {
                          return f__8744.call(null, a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750, j__8752)
                        }
                      }else {
                        var k__8754 = cljs.core._first.call(null, args__8753);
                        var args__8755 = cljs.core._rest.call(null, args__8753);
                        if(argc === 11) {
                          if(f__8744.cljs$lang$arity$11) {
                            return f__8744.cljs$lang$arity$11(a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750, j__8752, k__8754)
                          }else {
                            return f__8744.call(null, a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750, j__8752, k__8754)
                          }
                        }else {
                          var l__8756 = cljs.core._first.call(null, args__8755);
                          var args__8757 = cljs.core._rest.call(null, args__8755);
                          if(argc === 12) {
                            if(f__8744.cljs$lang$arity$12) {
                              return f__8744.cljs$lang$arity$12(a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750, j__8752, k__8754, l__8756)
                            }else {
                              return f__8744.call(null, a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750, j__8752, k__8754, l__8756)
                            }
                          }else {
                            var m__8758 = cljs.core._first.call(null, args__8757);
                            var args__8759 = cljs.core._rest.call(null, args__8757);
                            if(argc === 13) {
                              if(f__8744.cljs$lang$arity$13) {
                                return f__8744.cljs$lang$arity$13(a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750, j__8752, k__8754, l__8756, m__8758)
                              }else {
                                return f__8744.call(null, a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750, j__8752, k__8754, l__8756, m__8758)
                              }
                            }else {
                              var n__8760 = cljs.core._first.call(null, args__8759);
                              var args__8761 = cljs.core._rest.call(null, args__8759);
                              if(argc === 14) {
                                if(f__8744.cljs$lang$arity$14) {
                                  return f__8744.cljs$lang$arity$14(a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750, j__8752, k__8754, l__8756, m__8758, n__8760)
                                }else {
                                  return f__8744.call(null, a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750, j__8752, k__8754, l__8756, m__8758, n__8760)
                                }
                              }else {
                                var o__8762 = cljs.core._first.call(null, args__8761);
                                var args__8763 = cljs.core._rest.call(null, args__8761);
                                if(argc === 15) {
                                  if(f__8744.cljs$lang$arity$15) {
                                    return f__8744.cljs$lang$arity$15(a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750, j__8752, k__8754, l__8756, m__8758, n__8760, o__8762)
                                  }else {
                                    return f__8744.call(null, a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750, j__8752, k__8754, l__8756, m__8758, n__8760, o__8762)
                                  }
                                }else {
                                  var p__8764 = cljs.core._first.call(null, args__8763);
                                  var args__8765 = cljs.core._rest.call(null, args__8763);
                                  if(argc === 16) {
                                    if(f__8744.cljs$lang$arity$16) {
                                      return f__8744.cljs$lang$arity$16(a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750, j__8752, k__8754, l__8756, m__8758, n__8760, o__8762, p__8764)
                                    }else {
                                      return f__8744.call(null, a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750, j__8752, k__8754, l__8756, m__8758, n__8760, o__8762, p__8764)
                                    }
                                  }else {
                                    var q__8766 = cljs.core._first.call(null, args__8765);
                                    var args__8767 = cljs.core._rest.call(null, args__8765);
                                    if(argc === 17) {
                                      if(f__8744.cljs$lang$arity$17) {
                                        return f__8744.cljs$lang$arity$17(a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750, j__8752, k__8754, l__8756, m__8758, n__8760, o__8762, p__8764, q__8766)
                                      }else {
                                        return f__8744.call(null, a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750, j__8752, k__8754, l__8756, m__8758, n__8760, o__8762, p__8764, q__8766)
                                      }
                                    }else {
                                      var r__8768 = cljs.core._first.call(null, args__8767);
                                      var args__8769 = cljs.core._rest.call(null, args__8767);
                                      if(argc === 18) {
                                        if(f__8744.cljs$lang$arity$18) {
                                          return f__8744.cljs$lang$arity$18(a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750, j__8752, k__8754, l__8756, m__8758, n__8760, o__8762, p__8764, q__8766, r__8768)
                                        }else {
                                          return f__8744.call(null, a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750, j__8752, k__8754, l__8756, m__8758, n__8760, o__8762, p__8764, q__8766, r__8768)
                                        }
                                      }else {
                                        var s__8770 = cljs.core._first.call(null, args__8769);
                                        var args__8771 = cljs.core._rest.call(null, args__8769);
                                        if(argc === 19) {
                                          if(f__8744.cljs$lang$arity$19) {
                                            return f__8744.cljs$lang$arity$19(a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750, j__8752, k__8754, l__8756, m__8758, n__8760, o__8762, p__8764, q__8766, r__8768, s__8770)
                                          }else {
                                            return f__8744.call(null, a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750, j__8752, k__8754, l__8756, m__8758, n__8760, o__8762, p__8764, q__8766, r__8768, s__8770)
                                          }
                                        }else {
                                          var t__8772 = cljs.core._first.call(null, args__8771);
                                          var args__8773 = cljs.core._rest.call(null, args__8771);
                                          if(argc === 20) {
                                            if(f__8744.cljs$lang$arity$20) {
                                              return f__8744.cljs$lang$arity$20(a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750, j__8752, k__8754, l__8756, m__8758, n__8760, o__8762, p__8764, q__8766, r__8768, s__8770, t__8772)
                                            }else {
                                              return f__8744.call(null, a__8734, b__8736, c__8738, d__8740, e__8742, f__8744, g__8746, h__8748, i__8750, j__8752, k__8754, l__8756, m__8758, n__8760, o__8762, p__8764, q__8766, r__8768, s__8770, t__8772)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
void 0;
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__8788 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8789 = cljs.core.bounded_count.call(null, args, fixed_arity__8788 + 1);
      if(bc__8789 <= fixed_arity__8788) {
        return cljs.core.apply_to.call(null, f, bc__8789, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__8790 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__8791 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8792 = cljs.core.bounded_count.call(null, arglist__8790, fixed_arity__8791 + 1);
      if(bc__8792 <= fixed_arity__8791) {
        return cljs.core.apply_to.call(null, f, bc__8792, arglist__8790)
      }else {
        return f.cljs$lang$applyTo(arglist__8790)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8790))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__8793 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__8794 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8795 = cljs.core.bounded_count.call(null, arglist__8793, fixed_arity__8794 + 1);
      if(bc__8795 <= fixed_arity__8794) {
        return cljs.core.apply_to.call(null, f, bc__8795, arglist__8793)
      }else {
        return f.cljs$lang$applyTo(arglist__8793)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8793))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__8796 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__8797 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8798 = cljs.core.bounded_count.call(null, arglist__8796, fixed_arity__8797 + 1);
      if(bc__8798 <= fixed_arity__8797) {
        return cljs.core.apply_to.call(null, f, bc__8798, arglist__8796)
      }else {
        return f.cljs$lang$applyTo(arglist__8796)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8796))
    }
  };
  var apply__6 = function() {
    var G__8802__delegate = function(f, a, b, c, d, args) {
      var arglist__8799 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__8800 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__8801 = cljs.core.bounded_count.call(null, arglist__8799, fixed_arity__8800 + 1);
        if(bc__8801 <= fixed_arity__8800) {
          return cljs.core.apply_to.call(null, f, bc__8801, arglist__8799)
        }else {
          return f.cljs$lang$applyTo(arglist__8799)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__8799))
      }
    };
    var G__8802 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__8802__delegate.call(this, f, a, b, c, d, args)
    };
    G__8802.cljs$lang$maxFixedArity = 5;
    G__8802.cljs$lang$applyTo = function(arglist__8803) {
      var f = cljs.core.first(arglist__8803);
      var a = cljs.core.first(cljs.core.next(arglist__8803));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8803)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8803))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8803)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8803)))));
      return G__8802__delegate(f, a, b, c, d, args)
    };
    G__8802.cljs$lang$arity$variadic = G__8802__delegate;
    return G__8802
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__8804) {
    var obj = cljs.core.first(arglist__8804);
    var f = cljs.core.first(cljs.core.next(arglist__8804));
    var args = cljs.core.rest(cljs.core.next(arglist__8804));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__8805__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__8805 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8805__delegate.call(this, x, y, more)
    };
    G__8805.cljs$lang$maxFixedArity = 2;
    G__8805.cljs$lang$applyTo = function(arglist__8806) {
      var x = cljs.core.first(arglist__8806);
      var y = cljs.core.first(cljs.core.next(arglist__8806));
      var more = cljs.core.rest(cljs.core.next(arglist__8806));
      return G__8805__delegate(x, y, more)
    };
    G__8805.cljs$lang$arity$variadic = G__8805__delegate;
    return G__8805
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__8807 = pred;
        var G__8808 = cljs.core.next.call(null, coll);
        pred = G__8807;
        coll = G__8808;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____8810 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____8810)) {
        return or__3824__auto____8810
      }else {
        var G__8811 = pred;
        var G__8812 = cljs.core.next.call(null, coll);
        pred = G__8811;
        coll = G__8812;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__8813 = null;
    var G__8813__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__8813__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__8813__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__8813__3 = function() {
      var G__8814__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__8814 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__8814__delegate.call(this, x, y, zs)
      };
      G__8814.cljs$lang$maxFixedArity = 2;
      G__8814.cljs$lang$applyTo = function(arglist__8815) {
        var x = cljs.core.first(arglist__8815);
        var y = cljs.core.first(cljs.core.next(arglist__8815));
        var zs = cljs.core.rest(cljs.core.next(arglist__8815));
        return G__8814__delegate(x, y, zs)
      };
      G__8814.cljs$lang$arity$variadic = G__8814__delegate;
      return G__8814
    }();
    G__8813 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__8813__0.call(this);
        case 1:
          return G__8813__1.call(this, x);
        case 2:
          return G__8813__2.call(this, x, y);
        default:
          return G__8813__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__8813.cljs$lang$maxFixedArity = 2;
    G__8813.cljs$lang$applyTo = G__8813__3.cljs$lang$applyTo;
    return G__8813
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__8816__delegate = function(args) {
      return x
    };
    var G__8816 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8816__delegate.call(this, args)
    };
    G__8816.cljs$lang$maxFixedArity = 0;
    G__8816.cljs$lang$applyTo = function(arglist__8817) {
      var args = cljs.core.seq(arglist__8817);
      return G__8816__delegate(args)
    };
    G__8816.cljs$lang$arity$variadic = G__8816__delegate;
    return G__8816
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__8824 = null;
      var G__8824__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__8824__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__8824__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__8824__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__8824__4 = function() {
        var G__8825__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__8825 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8825__delegate.call(this, x, y, z, args)
        };
        G__8825.cljs$lang$maxFixedArity = 3;
        G__8825.cljs$lang$applyTo = function(arglist__8826) {
          var x = cljs.core.first(arglist__8826);
          var y = cljs.core.first(cljs.core.next(arglist__8826));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8826)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8826)));
          return G__8825__delegate(x, y, z, args)
        };
        G__8825.cljs$lang$arity$variadic = G__8825__delegate;
        return G__8825
      }();
      G__8824 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8824__0.call(this);
          case 1:
            return G__8824__1.call(this, x);
          case 2:
            return G__8824__2.call(this, x, y);
          case 3:
            return G__8824__3.call(this, x, y, z);
          default:
            return G__8824__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8824.cljs$lang$maxFixedArity = 3;
      G__8824.cljs$lang$applyTo = G__8824__4.cljs$lang$applyTo;
      return G__8824
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__8827 = null;
      var G__8827__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__8827__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__8827__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__8827__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__8827__4 = function() {
        var G__8828__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__8828 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8828__delegate.call(this, x, y, z, args)
        };
        G__8828.cljs$lang$maxFixedArity = 3;
        G__8828.cljs$lang$applyTo = function(arglist__8829) {
          var x = cljs.core.first(arglist__8829);
          var y = cljs.core.first(cljs.core.next(arglist__8829));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8829)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8829)));
          return G__8828__delegate(x, y, z, args)
        };
        G__8828.cljs$lang$arity$variadic = G__8828__delegate;
        return G__8828
      }();
      G__8827 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8827__0.call(this);
          case 1:
            return G__8827__1.call(this, x);
          case 2:
            return G__8827__2.call(this, x, y);
          case 3:
            return G__8827__3.call(this, x, y, z);
          default:
            return G__8827__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8827.cljs$lang$maxFixedArity = 3;
      G__8827.cljs$lang$applyTo = G__8827__4.cljs$lang$applyTo;
      return G__8827
    }()
  };
  var comp__4 = function() {
    var G__8830__delegate = function(f1, f2, f3, fs) {
      var fs__8821 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__8831__delegate = function(args) {
          var ret__8822 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__8821), args);
          var fs__8823 = cljs.core.next.call(null, fs__8821);
          while(true) {
            if(fs__8823) {
              var G__8832 = cljs.core.first.call(null, fs__8823).call(null, ret__8822);
              var G__8833 = cljs.core.next.call(null, fs__8823);
              ret__8822 = G__8832;
              fs__8823 = G__8833;
              continue
            }else {
              return ret__8822
            }
            break
          }
        };
        var G__8831 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__8831__delegate.call(this, args)
        };
        G__8831.cljs$lang$maxFixedArity = 0;
        G__8831.cljs$lang$applyTo = function(arglist__8834) {
          var args = cljs.core.seq(arglist__8834);
          return G__8831__delegate(args)
        };
        G__8831.cljs$lang$arity$variadic = G__8831__delegate;
        return G__8831
      }()
    };
    var G__8830 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8830__delegate.call(this, f1, f2, f3, fs)
    };
    G__8830.cljs$lang$maxFixedArity = 3;
    G__8830.cljs$lang$applyTo = function(arglist__8835) {
      var f1 = cljs.core.first(arglist__8835);
      var f2 = cljs.core.first(cljs.core.next(arglist__8835));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8835)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8835)));
      return G__8830__delegate(f1, f2, f3, fs)
    };
    G__8830.cljs$lang$arity$variadic = G__8830__delegate;
    return G__8830
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__8836__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__8836 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8836__delegate.call(this, args)
      };
      G__8836.cljs$lang$maxFixedArity = 0;
      G__8836.cljs$lang$applyTo = function(arglist__8837) {
        var args = cljs.core.seq(arglist__8837);
        return G__8836__delegate(args)
      };
      G__8836.cljs$lang$arity$variadic = G__8836__delegate;
      return G__8836
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__8838__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__8838 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8838__delegate.call(this, args)
      };
      G__8838.cljs$lang$maxFixedArity = 0;
      G__8838.cljs$lang$applyTo = function(arglist__8839) {
        var args = cljs.core.seq(arglist__8839);
        return G__8838__delegate(args)
      };
      G__8838.cljs$lang$arity$variadic = G__8838__delegate;
      return G__8838
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__8840__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__8840 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8840__delegate.call(this, args)
      };
      G__8840.cljs$lang$maxFixedArity = 0;
      G__8840.cljs$lang$applyTo = function(arglist__8841) {
        var args = cljs.core.seq(arglist__8841);
        return G__8840__delegate(args)
      };
      G__8840.cljs$lang$arity$variadic = G__8840__delegate;
      return G__8840
    }()
  };
  var partial__5 = function() {
    var G__8842__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__8843__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__8843 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__8843__delegate.call(this, args)
        };
        G__8843.cljs$lang$maxFixedArity = 0;
        G__8843.cljs$lang$applyTo = function(arglist__8844) {
          var args = cljs.core.seq(arglist__8844);
          return G__8843__delegate(args)
        };
        G__8843.cljs$lang$arity$variadic = G__8843__delegate;
        return G__8843
      }()
    };
    var G__8842 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8842__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__8842.cljs$lang$maxFixedArity = 4;
    G__8842.cljs$lang$applyTo = function(arglist__8845) {
      var f = cljs.core.first(arglist__8845);
      var arg1 = cljs.core.first(cljs.core.next(arglist__8845));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8845)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8845))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8845))));
      return G__8842__delegate(f, arg1, arg2, arg3, more)
    };
    G__8842.cljs$lang$arity$variadic = G__8842__delegate;
    return G__8842
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__8846 = null;
      var G__8846__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__8846__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__8846__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__8846__4 = function() {
        var G__8847__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__8847 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8847__delegate.call(this, a, b, c, ds)
        };
        G__8847.cljs$lang$maxFixedArity = 3;
        G__8847.cljs$lang$applyTo = function(arglist__8848) {
          var a = cljs.core.first(arglist__8848);
          var b = cljs.core.first(cljs.core.next(arglist__8848));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8848)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8848)));
          return G__8847__delegate(a, b, c, ds)
        };
        G__8847.cljs$lang$arity$variadic = G__8847__delegate;
        return G__8847
      }();
      G__8846 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__8846__1.call(this, a);
          case 2:
            return G__8846__2.call(this, a, b);
          case 3:
            return G__8846__3.call(this, a, b, c);
          default:
            return G__8846__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8846.cljs$lang$maxFixedArity = 3;
      G__8846.cljs$lang$applyTo = G__8846__4.cljs$lang$applyTo;
      return G__8846
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__8849 = null;
      var G__8849__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__8849__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__8849__4 = function() {
        var G__8850__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__8850 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8850__delegate.call(this, a, b, c, ds)
        };
        G__8850.cljs$lang$maxFixedArity = 3;
        G__8850.cljs$lang$applyTo = function(arglist__8851) {
          var a = cljs.core.first(arglist__8851);
          var b = cljs.core.first(cljs.core.next(arglist__8851));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8851)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8851)));
          return G__8850__delegate(a, b, c, ds)
        };
        G__8850.cljs$lang$arity$variadic = G__8850__delegate;
        return G__8850
      }();
      G__8849 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__8849__2.call(this, a, b);
          case 3:
            return G__8849__3.call(this, a, b, c);
          default:
            return G__8849__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8849.cljs$lang$maxFixedArity = 3;
      G__8849.cljs$lang$applyTo = G__8849__4.cljs$lang$applyTo;
      return G__8849
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__8852 = null;
      var G__8852__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__8852__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__8852__4 = function() {
        var G__8853__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__8853 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8853__delegate.call(this, a, b, c, ds)
        };
        G__8853.cljs$lang$maxFixedArity = 3;
        G__8853.cljs$lang$applyTo = function(arglist__8854) {
          var a = cljs.core.first(arglist__8854);
          var b = cljs.core.first(cljs.core.next(arglist__8854));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8854)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8854)));
          return G__8853__delegate(a, b, c, ds)
        };
        G__8853.cljs$lang$arity$variadic = G__8853__delegate;
        return G__8853
      }();
      G__8852 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__8852__2.call(this, a, b);
          case 3:
            return G__8852__3.call(this, a, b, c);
          default:
            return G__8852__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8852.cljs$lang$maxFixedArity = 3;
      G__8852.cljs$lang$applyTo = G__8852__4.cljs$lang$applyTo;
      return G__8852
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__8870 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8878 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8878) {
        var s__8879 = temp__3974__auto____8878;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8879)) {
          var c__8880 = cljs.core.chunk_first.call(null, s__8879);
          var size__8881 = cljs.core.count.call(null, c__8880);
          var b__8882 = cljs.core.chunk_buffer.call(null, size__8881);
          var n__2512__auto____8883 = size__8881;
          var i__8884 = 0;
          while(true) {
            if(i__8884 < n__2512__auto____8883) {
              cljs.core.chunk_append.call(null, b__8882, f.call(null, idx + i__8884, cljs.core._nth.call(null, c__8880, i__8884)));
              var G__8885 = i__8884 + 1;
              i__8884 = G__8885;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8882), mapi.call(null, idx + size__8881, cljs.core.chunk_rest.call(null, s__8879)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__8879)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__8879)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__8870.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____8895 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____8895) {
      var s__8896 = temp__3974__auto____8895;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__8896)) {
        var c__8897 = cljs.core.chunk_first.call(null, s__8896);
        var size__8898 = cljs.core.count.call(null, c__8897);
        var b__8899 = cljs.core.chunk_buffer.call(null, size__8898);
        var n__2512__auto____8900 = size__8898;
        var i__8901 = 0;
        while(true) {
          if(i__8901 < n__2512__auto____8900) {
            var x__8902 = f.call(null, cljs.core._nth.call(null, c__8897, i__8901));
            if(x__8902 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__8899, x__8902)
            }
            var G__8904 = i__8901 + 1;
            i__8901 = G__8904;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8899), keep.call(null, f, cljs.core.chunk_rest.call(null, s__8896)))
      }else {
        var x__8903 = f.call(null, cljs.core.first.call(null, s__8896));
        if(x__8903 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__8896))
        }else {
          return cljs.core.cons.call(null, x__8903, keep.call(null, f, cljs.core.rest.call(null, s__8896)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__8930 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8940 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8940) {
        var s__8941 = temp__3974__auto____8940;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8941)) {
          var c__8942 = cljs.core.chunk_first.call(null, s__8941);
          var size__8943 = cljs.core.count.call(null, c__8942);
          var b__8944 = cljs.core.chunk_buffer.call(null, size__8943);
          var n__2512__auto____8945 = size__8943;
          var i__8946 = 0;
          while(true) {
            if(i__8946 < n__2512__auto____8945) {
              var x__8947 = f.call(null, idx + i__8946, cljs.core._nth.call(null, c__8942, i__8946));
              if(x__8947 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__8944, x__8947)
              }
              var G__8949 = i__8946 + 1;
              i__8946 = G__8949;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8944), keepi.call(null, idx + size__8943, cljs.core.chunk_rest.call(null, s__8941)))
        }else {
          var x__8948 = f.call(null, idx, cljs.core.first.call(null, s__8941));
          if(x__8948 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__8941))
          }else {
            return cljs.core.cons.call(null, x__8948, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__8941)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__8930.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9035 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9035)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____9035
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9036 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9036)) {
            var and__3822__auto____9037 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9037)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____9037
            }
          }else {
            return and__3822__auto____9036
          }
        }())
      };
      var ep1__4 = function() {
        var G__9106__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9038 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9038)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____9038
            }
          }())
        };
        var G__9106 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9106__delegate.call(this, x, y, z, args)
        };
        G__9106.cljs$lang$maxFixedArity = 3;
        G__9106.cljs$lang$applyTo = function(arglist__9107) {
          var x = cljs.core.first(arglist__9107);
          var y = cljs.core.first(cljs.core.next(arglist__9107));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9107)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9107)));
          return G__9106__delegate(x, y, z, args)
        };
        G__9106.cljs$lang$arity$variadic = G__9106__delegate;
        return G__9106
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9050 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9050)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____9050
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9051 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9051)) {
            var and__3822__auto____9052 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9052)) {
              var and__3822__auto____9053 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9053)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____9053
              }
            }else {
              return and__3822__auto____9052
            }
          }else {
            return and__3822__auto____9051
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9054 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9054)) {
            var and__3822__auto____9055 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9055)) {
              var and__3822__auto____9056 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____9056)) {
                var and__3822__auto____9057 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____9057)) {
                  var and__3822__auto____9058 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9058)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____9058
                  }
                }else {
                  return and__3822__auto____9057
                }
              }else {
                return and__3822__auto____9056
              }
            }else {
              return and__3822__auto____9055
            }
          }else {
            return and__3822__auto____9054
          }
        }())
      };
      var ep2__4 = function() {
        var G__9108__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9059 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9059)) {
              return cljs.core.every_QMARK_.call(null, function(p1__8905_SHARP_) {
                var and__3822__auto____9060 = p1.call(null, p1__8905_SHARP_);
                if(cljs.core.truth_(and__3822__auto____9060)) {
                  return p2.call(null, p1__8905_SHARP_)
                }else {
                  return and__3822__auto____9060
                }
              }, args)
            }else {
              return and__3822__auto____9059
            }
          }())
        };
        var G__9108 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9108__delegate.call(this, x, y, z, args)
        };
        G__9108.cljs$lang$maxFixedArity = 3;
        G__9108.cljs$lang$applyTo = function(arglist__9109) {
          var x = cljs.core.first(arglist__9109);
          var y = cljs.core.first(cljs.core.next(arglist__9109));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9109)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9109)));
          return G__9108__delegate(x, y, z, args)
        };
        G__9108.cljs$lang$arity$variadic = G__9108__delegate;
        return G__9108
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9079 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9079)) {
            var and__3822__auto____9080 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9080)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____9080
            }
          }else {
            return and__3822__auto____9079
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9081 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9081)) {
            var and__3822__auto____9082 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9082)) {
              var and__3822__auto____9083 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9083)) {
                var and__3822__auto____9084 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____9084)) {
                  var and__3822__auto____9085 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9085)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____9085
                  }
                }else {
                  return and__3822__auto____9084
                }
              }else {
                return and__3822__auto____9083
              }
            }else {
              return and__3822__auto____9082
            }
          }else {
            return and__3822__auto____9081
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9086 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9086)) {
            var and__3822__auto____9087 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9087)) {
              var and__3822__auto____9088 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9088)) {
                var and__3822__auto____9089 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____9089)) {
                  var and__3822__auto____9090 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9090)) {
                    var and__3822__auto____9091 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____9091)) {
                      var and__3822__auto____9092 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____9092)) {
                        var and__3822__auto____9093 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____9093)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____9093
                        }
                      }else {
                        return and__3822__auto____9092
                      }
                    }else {
                      return and__3822__auto____9091
                    }
                  }else {
                    return and__3822__auto____9090
                  }
                }else {
                  return and__3822__auto____9089
                }
              }else {
                return and__3822__auto____9088
              }
            }else {
              return and__3822__auto____9087
            }
          }else {
            return and__3822__auto____9086
          }
        }())
      };
      var ep3__4 = function() {
        var G__9110__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9094 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9094)) {
              return cljs.core.every_QMARK_.call(null, function(p1__8906_SHARP_) {
                var and__3822__auto____9095 = p1.call(null, p1__8906_SHARP_);
                if(cljs.core.truth_(and__3822__auto____9095)) {
                  var and__3822__auto____9096 = p2.call(null, p1__8906_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____9096)) {
                    return p3.call(null, p1__8906_SHARP_)
                  }else {
                    return and__3822__auto____9096
                  }
                }else {
                  return and__3822__auto____9095
                }
              }, args)
            }else {
              return and__3822__auto____9094
            }
          }())
        };
        var G__9110 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9110__delegate.call(this, x, y, z, args)
        };
        G__9110.cljs$lang$maxFixedArity = 3;
        G__9110.cljs$lang$applyTo = function(arglist__9111) {
          var x = cljs.core.first(arglist__9111);
          var y = cljs.core.first(cljs.core.next(arglist__9111));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9111)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9111)));
          return G__9110__delegate(x, y, z, args)
        };
        G__9110.cljs$lang$arity$variadic = G__9110__delegate;
        return G__9110
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__9112__delegate = function(p1, p2, p3, ps) {
      var ps__9097 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__8907_SHARP_) {
            return p1__8907_SHARP_.call(null, x)
          }, ps__9097)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__8908_SHARP_) {
            var and__3822__auto____9102 = p1__8908_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9102)) {
              return p1__8908_SHARP_.call(null, y)
            }else {
              return and__3822__auto____9102
            }
          }, ps__9097)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__8909_SHARP_) {
            var and__3822__auto____9103 = p1__8909_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9103)) {
              var and__3822__auto____9104 = p1__8909_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____9104)) {
                return p1__8909_SHARP_.call(null, z)
              }else {
                return and__3822__auto____9104
              }
            }else {
              return and__3822__auto____9103
            }
          }, ps__9097)
        };
        var epn__4 = function() {
          var G__9113__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____9105 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____9105)) {
                return cljs.core.every_QMARK_.call(null, function(p1__8910_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__8910_SHARP_, args)
                }, ps__9097)
              }else {
                return and__3822__auto____9105
              }
            }())
          };
          var G__9113 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9113__delegate.call(this, x, y, z, args)
          };
          G__9113.cljs$lang$maxFixedArity = 3;
          G__9113.cljs$lang$applyTo = function(arglist__9114) {
            var x = cljs.core.first(arglist__9114);
            var y = cljs.core.first(cljs.core.next(arglist__9114));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9114)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9114)));
            return G__9113__delegate(x, y, z, args)
          };
          G__9113.cljs$lang$arity$variadic = G__9113__delegate;
          return G__9113
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__9112 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9112__delegate.call(this, p1, p2, p3, ps)
    };
    G__9112.cljs$lang$maxFixedArity = 3;
    G__9112.cljs$lang$applyTo = function(arglist__9115) {
      var p1 = cljs.core.first(arglist__9115);
      var p2 = cljs.core.first(cljs.core.next(arglist__9115));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9115)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9115)));
      return G__9112__delegate(p1, p2, p3, ps)
    };
    G__9112.cljs$lang$arity$variadic = G__9112__delegate;
    return G__9112
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____9196 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9196)) {
          return or__3824__auto____9196
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____9197 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9197)) {
          return or__3824__auto____9197
        }else {
          var or__3824__auto____9198 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9198)) {
            return or__3824__auto____9198
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__9267__delegate = function(x, y, z, args) {
          var or__3824__auto____9199 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9199)) {
            return or__3824__auto____9199
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__9267 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9267__delegate.call(this, x, y, z, args)
        };
        G__9267.cljs$lang$maxFixedArity = 3;
        G__9267.cljs$lang$applyTo = function(arglist__9268) {
          var x = cljs.core.first(arglist__9268);
          var y = cljs.core.first(cljs.core.next(arglist__9268));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9268)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9268)));
          return G__9267__delegate(x, y, z, args)
        };
        G__9267.cljs$lang$arity$variadic = G__9267__delegate;
        return G__9267
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____9211 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9211)) {
          return or__3824__auto____9211
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____9212 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9212)) {
          return or__3824__auto____9212
        }else {
          var or__3824__auto____9213 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9213)) {
            return or__3824__auto____9213
          }else {
            var or__3824__auto____9214 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9214)) {
              return or__3824__auto____9214
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____9215 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9215)) {
          return or__3824__auto____9215
        }else {
          var or__3824__auto____9216 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9216)) {
            return or__3824__auto____9216
          }else {
            var or__3824__auto____9217 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____9217)) {
              return or__3824__auto____9217
            }else {
              var or__3824__auto____9218 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____9218)) {
                return or__3824__auto____9218
              }else {
                var or__3824__auto____9219 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9219)) {
                  return or__3824__auto____9219
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__9269__delegate = function(x, y, z, args) {
          var or__3824__auto____9220 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9220)) {
            return or__3824__auto____9220
          }else {
            return cljs.core.some.call(null, function(p1__8950_SHARP_) {
              var or__3824__auto____9221 = p1.call(null, p1__8950_SHARP_);
              if(cljs.core.truth_(or__3824__auto____9221)) {
                return or__3824__auto____9221
              }else {
                return p2.call(null, p1__8950_SHARP_)
              }
            }, args)
          }
        };
        var G__9269 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9269__delegate.call(this, x, y, z, args)
        };
        G__9269.cljs$lang$maxFixedArity = 3;
        G__9269.cljs$lang$applyTo = function(arglist__9270) {
          var x = cljs.core.first(arglist__9270);
          var y = cljs.core.first(cljs.core.next(arglist__9270));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9270)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9270)));
          return G__9269__delegate(x, y, z, args)
        };
        G__9269.cljs$lang$arity$variadic = G__9269__delegate;
        return G__9269
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____9240 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9240)) {
          return or__3824__auto____9240
        }else {
          var or__3824__auto____9241 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9241)) {
            return or__3824__auto____9241
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____9242 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9242)) {
          return or__3824__auto____9242
        }else {
          var or__3824__auto____9243 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9243)) {
            return or__3824__auto____9243
          }else {
            var or__3824__auto____9244 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9244)) {
              return or__3824__auto____9244
            }else {
              var or__3824__auto____9245 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9245)) {
                return or__3824__auto____9245
              }else {
                var or__3824__auto____9246 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9246)) {
                  return or__3824__auto____9246
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____9247 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9247)) {
          return or__3824__auto____9247
        }else {
          var or__3824__auto____9248 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9248)) {
            return or__3824__auto____9248
          }else {
            var or__3824__auto____9249 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9249)) {
              return or__3824__auto____9249
            }else {
              var or__3824__auto____9250 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9250)) {
                return or__3824__auto____9250
              }else {
                var or__3824__auto____9251 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9251)) {
                  return or__3824__auto____9251
                }else {
                  var or__3824__auto____9252 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____9252)) {
                    return or__3824__auto____9252
                  }else {
                    var or__3824__auto____9253 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____9253)) {
                      return or__3824__auto____9253
                    }else {
                      var or__3824__auto____9254 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____9254)) {
                        return or__3824__auto____9254
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__9271__delegate = function(x, y, z, args) {
          var or__3824__auto____9255 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9255)) {
            return or__3824__auto____9255
          }else {
            return cljs.core.some.call(null, function(p1__8951_SHARP_) {
              var or__3824__auto____9256 = p1.call(null, p1__8951_SHARP_);
              if(cljs.core.truth_(or__3824__auto____9256)) {
                return or__3824__auto____9256
              }else {
                var or__3824__auto____9257 = p2.call(null, p1__8951_SHARP_);
                if(cljs.core.truth_(or__3824__auto____9257)) {
                  return or__3824__auto____9257
                }else {
                  return p3.call(null, p1__8951_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__9271 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9271__delegate.call(this, x, y, z, args)
        };
        G__9271.cljs$lang$maxFixedArity = 3;
        G__9271.cljs$lang$applyTo = function(arglist__9272) {
          var x = cljs.core.first(arglist__9272);
          var y = cljs.core.first(cljs.core.next(arglist__9272));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9272)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9272)));
          return G__9271__delegate(x, y, z, args)
        };
        G__9271.cljs$lang$arity$variadic = G__9271__delegate;
        return G__9271
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__9273__delegate = function(p1, p2, p3, ps) {
      var ps__9258 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__8952_SHARP_) {
            return p1__8952_SHARP_.call(null, x)
          }, ps__9258)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__8953_SHARP_) {
            var or__3824__auto____9263 = p1__8953_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9263)) {
              return or__3824__auto____9263
            }else {
              return p1__8953_SHARP_.call(null, y)
            }
          }, ps__9258)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__8954_SHARP_) {
            var or__3824__auto____9264 = p1__8954_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9264)) {
              return or__3824__auto____9264
            }else {
              var or__3824__auto____9265 = p1__8954_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9265)) {
                return or__3824__auto____9265
              }else {
                return p1__8954_SHARP_.call(null, z)
              }
            }
          }, ps__9258)
        };
        var spn__4 = function() {
          var G__9274__delegate = function(x, y, z, args) {
            var or__3824__auto____9266 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____9266)) {
              return or__3824__auto____9266
            }else {
              return cljs.core.some.call(null, function(p1__8955_SHARP_) {
                return cljs.core.some.call(null, p1__8955_SHARP_, args)
              }, ps__9258)
            }
          };
          var G__9274 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9274__delegate.call(this, x, y, z, args)
          };
          G__9274.cljs$lang$maxFixedArity = 3;
          G__9274.cljs$lang$applyTo = function(arglist__9275) {
            var x = cljs.core.first(arglist__9275);
            var y = cljs.core.first(cljs.core.next(arglist__9275));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9275)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9275)));
            return G__9274__delegate(x, y, z, args)
          };
          G__9274.cljs$lang$arity$variadic = G__9274__delegate;
          return G__9274
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__9273 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9273__delegate.call(this, p1, p2, p3, ps)
    };
    G__9273.cljs$lang$maxFixedArity = 3;
    G__9273.cljs$lang$applyTo = function(arglist__9276) {
      var p1 = cljs.core.first(arglist__9276);
      var p2 = cljs.core.first(cljs.core.next(arglist__9276));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9276)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9276)));
      return G__9273__delegate(p1, p2, p3, ps)
    };
    G__9273.cljs$lang$arity$variadic = G__9273__delegate;
    return G__9273
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9295 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9295) {
        var s__9296 = temp__3974__auto____9295;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9296)) {
          var c__9297 = cljs.core.chunk_first.call(null, s__9296);
          var size__9298 = cljs.core.count.call(null, c__9297);
          var b__9299 = cljs.core.chunk_buffer.call(null, size__9298);
          var n__2512__auto____9300 = size__9298;
          var i__9301 = 0;
          while(true) {
            if(i__9301 < n__2512__auto____9300) {
              cljs.core.chunk_append.call(null, b__9299, f.call(null, cljs.core._nth.call(null, c__9297, i__9301)));
              var G__9313 = i__9301 + 1;
              i__9301 = G__9313;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9299), map.call(null, f, cljs.core.chunk_rest.call(null, s__9296)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__9296)), map.call(null, f, cljs.core.rest.call(null, s__9296)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9302 = cljs.core.seq.call(null, c1);
      var s2__9303 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____9304 = s1__9302;
        if(and__3822__auto____9304) {
          return s2__9303
        }else {
          return and__3822__auto____9304
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__9302), cljs.core.first.call(null, s2__9303)), map.call(null, f, cljs.core.rest.call(null, s1__9302), cljs.core.rest.call(null, s2__9303)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9305 = cljs.core.seq.call(null, c1);
      var s2__9306 = cljs.core.seq.call(null, c2);
      var s3__9307 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____9308 = s1__9305;
        if(and__3822__auto____9308) {
          var and__3822__auto____9309 = s2__9306;
          if(and__3822__auto____9309) {
            return s3__9307
          }else {
            return and__3822__auto____9309
          }
        }else {
          return and__3822__auto____9308
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__9305), cljs.core.first.call(null, s2__9306), cljs.core.first.call(null, s3__9307)), map.call(null, f, cljs.core.rest.call(null, s1__9305), cljs.core.rest.call(null, s2__9306), cljs.core.rest.call(null, s3__9307)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__9314__delegate = function(f, c1, c2, c3, colls) {
      var step__9312 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__9311 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__9311)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__9311), step.call(null, map.call(null, cljs.core.rest, ss__9311)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__9116_SHARP_) {
        return cljs.core.apply.call(null, f, p1__9116_SHARP_)
      }, step__9312.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__9314 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9314__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__9314.cljs$lang$maxFixedArity = 4;
    G__9314.cljs$lang$applyTo = function(arglist__9315) {
      var f = cljs.core.first(arglist__9315);
      var c1 = cljs.core.first(cljs.core.next(arglist__9315));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9315)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9315))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9315))));
      return G__9314__delegate(f, c1, c2, c3, colls)
    };
    G__9314.cljs$lang$arity$variadic = G__9314__delegate;
    return G__9314
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____9318 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9318) {
        var s__9319 = temp__3974__auto____9318;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__9319), take.call(null, n - 1, cljs.core.rest.call(null, s__9319)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__9325 = function(n, coll) {
    while(true) {
      var s__9323 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____9324 = n > 0;
        if(and__3822__auto____9324) {
          return s__9323
        }else {
          return and__3822__auto____9324
        }
      }())) {
        var G__9326 = n - 1;
        var G__9327 = cljs.core.rest.call(null, s__9323);
        n = G__9326;
        coll = G__9327;
        continue
      }else {
        return s__9323
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__9325.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__9330 = cljs.core.seq.call(null, coll);
  var lead__9331 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__9331) {
      var G__9332 = cljs.core.next.call(null, s__9330);
      var G__9333 = cljs.core.next.call(null, lead__9331);
      s__9330 = G__9332;
      lead__9331 = G__9333;
      continue
    }else {
      return s__9330
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__9339 = function(pred, coll) {
    while(true) {
      var s__9337 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____9338 = s__9337;
        if(and__3822__auto____9338) {
          return pred.call(null, cljs.core.first.call(null, s__9337))
        }else {
          return and__3822__auto____9338
        }
      }())) {
        var G__9340 = pred;
        var G__9341 = cljs.core.rest.call(null, s__9337);
        pred = G__9340;
        coll = G__9341;
        continue
      }else {
        return s__9337
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__9339.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9344 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9344) {
      var s__9345 = temp__3974__auto____9344;
      return cljs.core.concat.call(null, s__9345, cycle.call(null, s__9345))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9350 = cljs.core.seq.call(null, c1);
      var s2__9351 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____9352 = s1__9350;
        if(and__3822__auto____9352) {
          return s2__9351
        }else {
          return and__3822__auto____9352
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__9350), cljs.core.cons.call(null, cljs.core.first.call(null, s2__9351), interleave.call(null, cljs.core.rest.call(null, s1__9350), cljs.core.rest.call(null, s2__9351))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__9354__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__9353 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__9353)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__9353), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__9353)))
        }else {
          return null
        }
      }, null)
    };
    var G__9354 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9354__delegate.call(this, c1, c2, colls)
    };
    G__9354.cljs$lang$maxFixedArity = 2;
    G__9354.cljs$lang$applyTo = function(arglist__9355) {
      var c1 = cljs.core.first(arglist__9355);
      var c2 = cljs.core.first(cljs.core.next(arglist__9355));
      var colls = cljs.core.rest(cljs.core.next(arglist__9355));
      return G__9354__delegate(c1, c2, colls)
    };
    G__9354.cljs$lang$arity$variadic = G__9354__delegate;
    return G__9354
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__9365 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____9363 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____9363) {
        var coll__9364 = temp__3971__auto____9363;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__9364), cat.call(null, cljs.core.rest.call(null, coll__9364), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__9365.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__9366__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__9366 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9366__delegate.call(this, f, coll, colls)
    };
    G__9366.cljs$lang$maxFixedArity = 2;
    G__9366.cljs$lang$applyTo = function(arglist__9367) {
      var f = cljs.core.first(arglist__9367);
      var coll = cljs.core.first(cljs.core.next(arglist__9367));
      var colls = cljs.core.rest(cljs.core.next(arglist__9367));
      return G__9366__delegate(f, coll, colls)
    };
    G__9366.cljs$lang$arity$variadic = G__9366__delegate;
    return G__9366
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9377 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9377) {
      var s__9378 = temp__3974__auto____9377;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__9378)) {
        var c__9379 = cljs.core.chunk_first.call(null, s__9378);
        var size__9380 = cljs.core.count.call(null, c__9379);
        var b__9381 = cljs.core.chunk_buffer.call(null, size__9380);
        var n__2512__auto____9382 = size__9380;
        var i__9383 = 0;
        while(true) {
          if(i__9383 < n__2512__auto____9382) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__9379, i__9383)))) {
              cljs.core.chunk_append.call(null, b__9381, cljs.core._nth.call(null, c__9379, i__9383))
            }else {
            }
            var G__9386 = i__9383 + 1;
            i__9383 = G__9386;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9381), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__9378)))
      }else {
        var f__9384 = cljs.core.first.call(null, s__9378);
        var r__9385 = cljs.core.rest.call(null, s__9378);
        if(cljs.core.truth_(pred.call(null, f__9384))) {
          return cljs.core.cons.call(null, f__9384, filter.call(null, pred, r__9385))
        }else {
          return filter.call(null, pred, r__9385)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__9389 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__9389.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__9387_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__9387_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__9393__9394 = to;
    if(G__9393__9394) {
      if(function() {
        var or__3824__auto____9395 = G__9393__9394.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____9395) {
          return or__3824__auto____9395
        }else {
          return G__9393__9394.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__9393__9394.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__9393__9394)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__9393__9394)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__9396__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__9396 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9396__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__9396.cljs$lang$maxFixedArity = 4;
    G__9396.cljs$lang$applyTo = function(arglist__9397) {
      var f = cljs.core.first(arglist__9397);
      var c1 = cljs.core.first(cljs.core.next(arglist__9397));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9397)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9397))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9397))));
      return G__9396__delegate(f, c1, c2, c3, colls)
    };
    G__9396.cljs$lang$arity$variadic = G__9396__delegate;
    return G__9396
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9404 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9404) {
        var s__9405 = temp__3974__auto____9404;
        var p__9406 = cljs.core.take.call(null, n, s__9405);
        if(n === cljs.core.count.call(null, p__9406)) {
          return cljs.core.cons.call(null, p__9406, partition.call(null, n, step, cljs.core.drop.call(null, step, s__9405)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9407 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9407) {
        var s__9408 = temp__3974__auto____9407;
        var p__9409 = cljs.core.take.call(null, n, s__9408);
        if(n === cljs.core.count.call(null, p__9409)) {
          return cljs.core.cons.call(null, p__9409, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__9408)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__9409, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__9414 = cljs.core.lookup_sentinel;
    var m__9415 = m;
    var ks__9416 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__9416) {
        var m__9417 = cljs.core._lookup.call(null, m__9415, cljs.core.first.call(null, ks__9416), sentinel__9414);
        if(sentinel__9414 === m__9417) {
          return not_found
        }else {
          var G__9418 = sentinel__9414;
          var G__9419 = m__9417;
          var G__9420 = cljs.core.next.call(null, ks__9416);
          sentinel__9414 = G__9418;
          m__9415 = G__9419;
          ks__9416 = G__9420;
          continue
        }
      }else {
        return m__9415
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__9421, v) {
  var vec__9426__9427 = p__9421;
  var k__9428 = cljs.core.nth.call(null, vec__9426__9427, 0, null);
  var ks__9429 = cljs.core.nthnext.call(null, vec__9426__9427, 1);
  if(cljs.core.truth_(ks__9429)) {
    return cljs.core.assoc.call(null, m, k__9428, assoc_in.call(null, cljs.core._lookup.call(null, m, k__9428, null), ks__9429, v))
  }else {
    return cljs.core.assoc.call(null, m, k__9428, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__9430, f, args) {
    var vec__9435__9436 = p__9430;
    var k__9437 = cljs.core.nth.call(null, vec__9435__9436, 0, null);
    var ks__9438 = cljs.core.nthnext.call(null, vec__9435__9436, 1);
    if(cljs.core.truth_(ks__9438)) {
      return cljs.core.assoc.call(null, m, k__9437, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__9437, null), ks__9438, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__9437, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__9437, null), args))
    }
  };
  var update_in = function(m, p__9430, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__9430, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__9439) {
    var m = cljs.core.first(arglist__9439);
    var p__9430 = cljs.core.first(cljs.core.next(arglist__9439));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9439)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9439)));
    return update_in__delegate(m, p__9430, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9442 = this;
  var h__2173__auto____9443 = this__9442.__hash;
  if(!(h__2173__auto____9443 == null)) {
    return h__2173__auto____9443
  }else {
    var h__2173__auto____9444 = cljs.core.hash_coll.call(null, coll);
    this__9442.__hash = h__2173__auto____9444;
    return h__2173__auto____9444
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9445 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9446 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9447 = this;
  var new_array__9448 = this__9447.array.slice();
  new_array__9448[k] = v;
  return new cljs.core.Vector(this__9447.meta, new_array__9448, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__9479 = null;
  var G__9479__2 = function(this_sym9449, k) {
    var this__9451 = this;
    var this_sym9449__9452 = this;
    var coll__9453 = this_sym9449__9452;
    return coll__9453.cljs$core$ILookup$_lookup$arity$2(coll__9453, k)
  };
  var G__9479__3 = function(this_sym9450, k, not_found) {
    var this__9451 = this;
    var this_sym9450__9454 = this;
    var coll__9455 = this_sym9450__9454;
    return coll__9455.cljs$core$ILookup$_lookup$arity$3(coll__9455, k, not_found)
  };
  G__9479 = function(this_sym9450, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9479__2.call(this, this_sym9450, k);
      case 3:
        return G__9479__3.call(this, this_sym9450, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9479
}();
cljs.core.Vector.prototype.apply = function(this_sym9440, args9441) {
  var this__9456 = this;
  return this_sym9440.call.apply(this_sym9440, [this_sym9440].concat(args9441.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9457 = this;
  var new_array__9458 = this__9457.array.slice();
  new_array__9458.push(o);
  return new cljs.core.Vector(this__9457.meta, new_array__9458, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__9459 = this;
  var this__9460 = this;
  return cljs.core.pr_str.call(null, this__9460)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9461 = this;
  return cljs.core.ci_reduce.call(null, this__9461.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9462 = this;
  return cljs.core.ci_reduce.call(null, this__9462.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9463 = this;
  if(this__9463.array.length > 0) {
    var vector_seq__9464 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__9463.array.length) {
          return cljs.core.cons.call(null, this__9463.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__9464.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9465 = this;
  return this__9465.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9466 = this;
  var count__9467 = this__9466.array.length;
  if(count__9467 > 0) {
    return this__9466.array[count__9467 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9468 = this;
  if(this__9468.array.length > 0) {
    var new_array__9469 = this__9468.array.slice();
    new_array__9469.pop();
    return new cljs.core.Vector(this__9468.meta, new_array__9469, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9470 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9471 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9472 = this;
  return new cljs.core.Vector(meta, this__9472.array, this__9472.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9473 = this;
  return this__9473.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9474 = this;
  if(function() {
    var and__3822__auto____9475 = 0 <= n;
    if(and__3822__auto____9475) {
      return n < this__9474.array.length
    }else {
      return and__3822__auto____9475
    }
  }()) {
    return this__9474.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9476 = this;
  if(function() {
    var and__3822__auto____9477 = 0 <= n;
    if(and__3822__auto____9477) {
      return n < this__9476.array.length
    }else {
      return and__3822__auto____9477
    }
  }()) {
    return this__9476.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9478 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9478.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2291__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__9481 = pv.cnt;
  if(cnt__9481 < 32) {
    return 0
  }else {
    return cnt__9481 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__9487 = level;
  var ret__9488 = node;
  while(true) {
    if(ll__9487 === 0) {
      return ret__9488
    }else {
      var embed__9489 = ret__9488;
      var r__9490 = cljs.core.pv_fresh_node.call(null, edit);
      var ___9491 = cljs.core.pv_aset.call(null, r__9490, 0, embed__9489);
      var G__9492 = ll__9487 - 5;
      var G__9493 = r__9490;
      ll__9487 = G__9492;
      ret__9488 = G__9493;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__9499 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__9500 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__9499, subidx__9500, tailnode);
    return ret__9499
  }else {
    var child__9501 = cljs.core.pv_aget.call(null, parent, subidx__9500);
    if(!(child__9501 == null)) {
      var node_to_insert__9502 = push_tail.call(null, pv, level - 5, child__9501, tailnode);
      cljs.core.pv_aset.call(null, ret__9499, subidx__9500, node_to_insert__9502);
      return ret__9499
    }else {
      var node_to_insert__9503 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__9499, subidx__9500, node_to_insert__9503);
      return ret__9499
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____9507 = 0 <= i;
    if(and__3822__auto____9507) {
      return i < pv.cnt
    }else {
      return and__3822__auto____9507
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__9508 = pv.root;
      var level__9509 = pv.shift;
      while(true) {
        if(level__9509 > 0) {
          var G__9510 = cljs.core.pv_aget.call(null, node__9508, i >>> level__9509 & 31);
          var G__9511 = level__9509 - 5;
          node__9508 = G__9510;
          level__9509 = G__9511;
          continue
        }else {
          return node__9508.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__9514 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__9514, i & 31, val);
    return ret__9514
  }else {
    var subidx__9515 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__9514, subidx__9515, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9515), i, val));
    return ret__9514
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__9521 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9522 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9521));
    if(function() {
      var and__3822__auto____9523 = new_child__9522 == null;
      if(and__3822__auto____9523) {
        return subidx__9521 === 0
      }else {
        return and__3822__auto____9523
      }
    }()) {
      return null
    }else {
      var ret__9524 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__9524, subidx__9521, new_child__9522);
      return ret__9524
    }
  }else {
    if(subidx__9521 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__9525 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__9525, subidx__9521, null);
        return ret__9525
      }else {
        return null
      }
    }
  }
};
void 0;
void 0;
void 0;
void 0;
void 0;
void 0;
void 0;
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9528 = this;
  return new cljs.core.TransientVector(this__9528.cnt, this__9528.shift, cljs.core.tv_editable_root.call(null, this__9528.root), cljs.core.tv_editable_tail.call(null, this__9528.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9529 = this;
  var h__2173__auto____9530 = this__9529.__hash;
  if(!(h__2173__auto____9530 == null)) {
    return h__2173__auto____9530
  }else {
    var h__2173__auto____9531 = cljs.core.hash_coll.call(null, coll);
    this__9529.__hash = h__2173__auto____9531;
    return h__2173__auto____9531
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9532 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9533 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9534 = this;
  if(function() {
    var and__3822__auto____9535 = 0 <= k;
    if(and__3822__auto____9535) {
      return k < this__9534.cnt
    }else {
      return and__3822__auto____9535
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__9536 = this__9534.tail.slice();
      new_tail__9536[k & 31] = v;
      return new cljs.core.PersistentVector(this__9534.meta, this__9534.cnt, this__9534.shift, this__9534.root, new_tail__9536, null)
    }else {
      return new cljs.core.PersistentVector(this__9534.meta, this__9534.cnt, this__9534.shift, cljs.core.do_assoc.call(null, coll, this__9534.shift, this__9534.root, k, v), this__9534.tail, null)
    }
  }else {
    if(k === this__9534.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__9534.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__9584 = null;
  var G__9584__2 = function(this_sym9537, k) {
    var this__9539 = this;
    var this_sym9537__9540 = this;
    var coll__9541 = this_sym9537__9540;
    return coll__9541.cljs$core$ILookup$_lookup$arity$2(coll__9541, k)
  };
  var G__9584__3 = function(this_sym9538, k, not_found) {
    var this__9539 = this;
    var this_sym9538__9542 = this;
    var coll__9543 = this_sym9538__9542;
    return coll__9543.cljs$core$ILookup$_lookup$arity$3(coll__9543, k, not_found)
  };
  G__9584 = function(this_sym9538, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9584__2.call(this, this_sym9538, k);
      case 3:
        return G__9584__3.call(this, this_sym9538, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9584
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym9526, args9527) {
  var this__9544 = this;
  return this_sym9526.call.apply(this_sym9526, [this_sym9526].concat(args9527.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__9545 = this;
  var step_init__9546 = [0, init];
  var i__9547 = 0;
  while(true) {
    if(i__9547 < this__9545.cnt) {
      var arr__9548 = cljs.core.array_for.call(null, v, i__9547);
      var len__9549 = arr__9548.length;
      var init__9553 = function() {
        var j__9550 = 0;
        var init__9551 = step_init__9546[1];
        while(true) {
          if(j__9550 < len__9549) {
            var init__9552 = f.call(null, init__9551, j__9550 + i__9547, arr__9548[j__9550]);
            if(cljs.core.reduced_QMARK_.call(null, init__9552)) {
              return init__9552
            }else {
              var G__9585 = j__9550 + 1;
              var G__9586 = init__9552;
              j__9550 = G__9585;
              init__9551 = G__9586;
              continue
            }
          }else {
            step_init__9546[0] = len__9549;
            step_init__9546[1] = init__9551;
            return init__9551
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__9553)) {
        return cljs.core.deref.call(null, init__9553)
      }else {
        var G__9587 = i__9547 + step_init__9546[0];
        i__9547 = G__9587;
        continue
      }
    }else {
      return step_init__9546[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9554 = this;
  if(this__9554.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__9555 = this__9554.tail.slice();
    new_tail__9555.push(o);
    return new cljs.core.PersistentVector(this__9554.meta, this__9554.cnt + 1, this__9554.shift, this__9554.root, new_tail__9555, null)
  }else {
    var root_overflow_QMARK___9556 = this__9554.cnt >>> 5 > 1 << this__9554.shift;
    var new_shift__9557 = root_overflow_QMARK___9556 ? this__9554.shift + 5 : this__9554.shift;
    var new_root__9559 = root_overflow_QMARK___9556 ? function() {
      var n_r__9558 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__9558, 0, this__9554.root);
      cljs.core.pv_aset.call(null, n_r__9558, 1, cljs.core.new_path.call(null, null, this__9554.shift, new cljs.core.VectorNode(null, this__9554.tail)));
      return n_r__9558
    }() : cljs.core.push_tail.call(null, coll, this__9554.shift, this__9554.root, new cljs.core.VectorNode(null, this__9554.tail));
    return new cljs.core.PersistentVector(this__9554.meta, this__9554.cnt + 1, new_shift__9557, new_root__9559, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__9560 = this;
  if(this__9560.cnt > 0) {
    return new cljs.core.RSeq(coll, this__9560.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__9561 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__9562 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__9563 = this;
  var this__9564 = this;
  return cljs.core.pr_str.call(null, this__9564)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9565 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9566 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9567 = this;
  if(this__9567.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9568 = this;
  return this__9568.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9569 = this;
  if(this__9569.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__9569.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9570 = this;
  if(this__9570.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__9570.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9570.meta)
    }else {
      if(1 < this__9570.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__9570.meta, this__9570.cnt - 1, this__9570.shift, this__9570.root, this__9570.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__9571 = cljs.core.array_for.call(null, coll, this__9570.cnt - 2);
          var nr__9572 = cljs.core.pop_tail.call(null, coll, this__9570.shift, this__9570.root);
          var new_root__9573 = nr__9572 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__9572;
          var cnt_1__9574 = this__9570.cnt - 1;
          if(function() {
            var and__3822__auto____9575 = 5 < this__9570.shift;
            if(and__3822__auto____9575) {
              return cljs.core.pv_aget.call(null, new_root__9573, 1) == null
            }else {
              return and__3822__auto____9575
            }
          }()) {
            return new cljs.core.PersistentVector(this__9570.meta, cnt_1__9574, this__9570.shift - 5, cljs.core.pv_aget.call(null, new_root__9573, 0), new_tail__9571, null)
          }else {
            return new cljs.core.PersistentVector(this__9570.meta, cnt_1__9574, this__9570.shift, new_root__9573, new_tail__9571, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9576 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9577 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9578 = this;
  return new cljs.core.PersistentVector(meta, this__9578.cnt, this__9578.shift, this__9578.root, this__9578.tail, this__9578.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9579 = this;
  return this__9579.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9580 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9581 = this;
  if(function() {
    var and__3822__auto____9582 = 0 <= n;
    if(and__3822__auto____9582) {
      return n < this__9581.cnt
    }else {
      return and__3822__auto____9582
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9583 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9583.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__9588 = xs.length;
  var xs__9589 = no_clone === true ? xs : xs.slice();
  if(l__9588 < 32) {
    return new cljs.core.PersistentVector(null, l__9588, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__9589, null)
  }else {
    var node__9590 = xs__9589.slice(0, 32);
    var v__9591 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__9590, null);
    var i__9592 = 32;
    var out__9593 = cljs.core._as_transient.call(null, v__9591);
    while(true) {
      if(i__9592 < l__9588) {
        var G__9594 = i__9592 + 1;
        var G__9595 = cljs.core.conj_BANG_.call(null, out__9593, xs__9589[i__9592]);
        i__9592 = G__9594;
        out__9593 = G__9595;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__9593)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__9596) {
    var args = cljs.core.seq(arglist__9596);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9597 = this;
  if(this__9597.off + 1 < this__9597.node.length) {
    var s__9598 = cljs.core.chunked_seq.call(null, this__9597.vec, this__9597.node, this__9597.i, this__9597.off + 1);
    if(s__9598 == null) {
      return null
    }else {
      return s__9598
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9599 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9600 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9601 = this;
  return this__9601.node[this__9601.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9602 = this;
  if(this__9602.off + 1 < this__9602.node.length) {
    var s__9603 = cljs.core.chunked_seq.call(null, this__9602.vec, this__9602.node, this__9602.i, this__9602.off + 1);
    if(s__9603 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__9603
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__9604 = this;
  var l__9605 = this__9604.node.length;
  var s__9606 = this__9604.i + l__9605 < cljs.core._count.call(null, this__9604.vec) ? cljs.core.chunked_seq.call(null, this__9604.vec, this__9604.i + l__9605, 0) : null;
  if(s__9606 == null) {
    return null
  }else {
    return s__9606
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9607 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__9608 = this;
  return cljs.core.chunked_seq.call(null, this__9608.vec, this__9608.node, this__9608.i, this__9608.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__9609 = this;
  return this__9609.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9610 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9610.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__9611 = this;
  return cljs.core.array_chunk.call(null, this__9611.node, this__9611.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__9612 = this;
  var l__9613 = this__9612.node.length;
  var s__9614 = this__9612.i + l__9613 < cljs.core._count.call(null, this__9612.vec) ? cljs.core.chunked_seq.call(null, this__9612.vec, this__9612.i + l__9613, 0) : null;
  if(s__9614 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__9614
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9617 = this;
  var h__2173__auto____9618 = this__9617.__hash;
  if(!(h__2173__auto____9618 == null)) {
    return h__2173__auto____9618
  }else {
    var h__2173__auto____9619 = cljs.core.hash_coll.call(null, coll);
    this__9617.__hash = h__2173__auto____9619;
    return h__2173__auto____9619
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9620 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9621 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__9622 = this;
  var v_pos__9623 = this__9622.start + key;
  return new cljs.core.Subvec(this__9622.meta, cljs.core._assoc.call(null, this__9622.v, v_pos__9623, val), this__9622.start, this__9622.end > v_pos__9623 + 1 ? this__9622.end : v_pos__9623 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__9649 = null;
  var G__9649__2 = function(this_sym9624, k) {
    var this__9626 = this;
    var this_sym9624__9627 = this;
    var coll__9628 = this_sym9624__9627;
    return coll__9628.cljs$core$ILookup$_lookup$arity$2(coll__9628, k)
  };
  var G__9649__3 = function(this_sym9625, k, not_found) {
    var this__9626 = this;
    var this_sym9625__9629 = this;
    var coll__9630 = this_sym9625__9629;
    return coll__9630.cljs$core$ILookup$_lookup$arity$3(coll__9630, k, not_found)
  };
  G__9649 = function(this_sym9625, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9649__2.call(this, this_sym9625, k);
      case 3:
        return G__9649__3.call(this, this_sym9625, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9649
}();
cljs.core.Subvec.prototype.apply = function(this_sym9615, args9616) {
  var this__9631 = this;
  return this_sym9615.call.apply(this_sym9615, [this_sym9615].concat(args9616.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9632 = this;
  return new cljs.core.Subvec(this__9632.meta, cljs.core._assoc_n.call(null, this__9632.v, this__9632.end, o), this__9632.start, this__9632.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__9633 = this;
  var this__9634 = this;
  return cljs.core.pr_str.call(null, this__9634)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__9635 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__9636 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9637 = this;
  var subvec_seq__9638 = function subvec_seq(i) {
    if(i === this__9637.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__9637.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__9638.call(null, this__9637.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9639 = this;
  return this__9639.end - this__9639.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9640 = this;
  return cljs.core._nth.call(null, this__9640.v, this__9640.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9641 = this;
  if(this__9641.start === this__9641.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__9641.meta, this__9641.v, this__9641.start, this__9641.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9642 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9643 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9644 = this;
  return new cljs.core.Subvec(meta, this__9644.v, this__9644.start, this__9644.end, this__9644.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9645 = this;
  return this__9645.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9646 = this;
  return cljs.core._nth.call(null, this__9646.v, this__9646.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9647 = this;
  return cljs.core._nth.call(null, this__9647.v, this__9647.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9648 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9648.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__9651 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__9651, 0, tl.length);
  return ret__9651
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__9655 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__9656 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__9655, subidx__9656, level === 5 ? tail_node : function() {
    var child__9657 = cljs.core.pv_aget.call(null, ret__9655, subidx__9656);
    if(!(child__9657 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__9657, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__9655
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__9662 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__9663 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9664 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__9662, subidx__9663));
    if(function() {
      var and__3822__auto____9665 = new_child__9664 == null;
      if(and__3822__auto____9665) {
        return subidx__9663 === 0
      }else {
        return and__3822__auto____9665
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__9662, subidx__9663, new_child__9664);
      return node__9662
    }
  }else {
    if(subidx__9663 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__9662, subidx__9663, null);
        return node__9662
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____9670 = 0 <= i;
    if(and__3822__auto____9670) {
      return i < tv.cnt
    }else {
      return and__3822__auto____9670
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__9671 = tv.root;
      var node__9672 = root__9671;
      var level__9673 = tv.shift;
      while(true) {
        if(level__9673 > 0) {
          var G__9674 = cljs.core.tv_ensure_editable.call(null, root__9671.edit, cljs.core.pv_aget.call(null, node__9672, i >>> level__9673 & 31));
          var G__9675 = level__9673 - 5;
          node__9672 = G__9674;
          level__9673 = G__9675;
          continue
        }else {
          return node__9672.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__9715 = null;
  var G__9715__2 = function(this_sym9678, k) {
    var this__9680 = this;
    var this_sym9678__9681 = this;
    var coll__9682 = this_sym9678__9681;
    return coll__9682.cljs$core$ILookup$_lookup$arity$2(coll__9682, k)
  };
  var G__9715__3 = function(this_sym9679, k, not_found) {
    var this__9680 = this;
    var this_sym9679__9683 = this;
    var coll__9684 = this_sym9679__9683;
    return coll__9684.cljs$core$ILookup$_lookup$arity$3(coll__9684, k, not_found)
  };
  G__9715 = function(this_sym9679, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9715__2.call(this, this_sym9679, k);
      case 3:
        return G__9715__3.call(this, this_sym9679, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9715
}();
cljs.core.TransientVector.prototype.apply = function(this_sym9676, args9677) {
  var this__9685 = this;
  return this_sym9676.call.apply(this_sym9676, [this_sym9676].concat(args9677.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9686 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9687 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9688 = this;
  if(this__9688.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9689 = this;
  if(function() {
    var and__3822__auto____9690 = 0 <= n;
    if(and__3822__auto____9690) {
      return n < this__9689.cnt
    }else {
      return and__3822__auto____9690
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9691 = this;
  if(this__9691.root.edit) {
    return this__9691.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__9692 = this;
  if(this__9692.root.edit) {
    if(function() {
      var and__3822__auto____9693 = 0 <= n;
      if(and__3822__auto____9693) {
        return n < this__9692.cnt
      }else {
        return and__3822__auto____9693
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__9692.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__9698 = function go(level, node) {
          var node__9696 = cljs.core.tv_ensure_editable.call(null, this__9692.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__9696, n & 31, val);
            return node__9696
          }else {
            var subidx__9697 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__9696, subidx__9697, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__9696, subidx__9697)));
            return node__9696
          }
        }.call(null, this__9692.shift, this__9692.root);
        this__9692.root = new_root__9698;
        return tcoll
      }
    }else {
      if(n === this__9692.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__9692.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__9699 = this;
  if(this__9699.root.edit) {
    if(this__9699.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__9699.cnt) {
        this__9699.cnt = 0;
        return tcoll
      }else {
        if((this__9699.cnt - 1 & 31) > 0) {
          this__9699.cnt = this__9699.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__9700 = cljs.core.editable_array_for.call(null, tcoll, this__9699.cnt - 2);
            var new_root__9702 = function() {
              var nr__9701 = cljs.core.tv_pop_tail.call(null, tcoll, this__9699.shift, this__9699.root);
              if(!(nr__9701 == null)) {
                return nr__9701
              }else {
                return new cljs.core.VectorNode(this__9699.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____9703 = 5 < this__9699.shift;
              if(and__3822__auto____9703) {
                return cljs.core.pv_aget.call(null, new_root__9702, 1) == null
              }else {
                return and__3822__auto____9703
              }
            }()) {
              var new_root__9704 = cljs.core.tv_ensure_editable.call(null, this__9699.root.edit, cljs.core.pv_aget.call(null, new_root__9702, 0));
              this__9699.root = new_root__9704;
              this__9699.shift = this__9699.shift - 5;
              this__9699.cnt = this__9699.cnt - 1;
              this__9699.tail = new_tail__9700;
              return tcoll
            }else {
              this__9699.root = new_root__9702;
              this__9699.cnt = this__9699.cnt - 1;
              this__9699.tail = new_tail__9700;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9705 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__9706 = this;
  if(this__9706.root.edit) {
    if(this__9706.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__9706.tail[this__9706.cnt & 31] = o;
      this__9706.cnt = this__9706.cnt + 1;
      return tcoll
    }else {
      var tail_node__9707 = new cljs.core.VectorNode(this__9706.root.edit, this__9706.tail);
      var new_tail__9708 = cljs.core.make_array.call(null, 32);
      new_tail__9708[0] = o;
      this__9706.tail = new_tail__9708;
      if(this__9706.cnt >>> 5 > 1 << this__9706.shift) {
        var new_root_array__9709 = cljs.core.make_array.call(null, 32);
        var new_shift__9710 = this__9706.shift + 5;
        new_root_array__9709[0] = this__9706.root;
        new_root_array__9709[1] = cljs.core.new_path.call(null, this__9706.root.edit, this__9706.shift, tail_node__9707);
        this__9706.root = new cljs.core.VectorNode(this__9706.root.edit, new_root_array__9709);
        this__9706.shift = new_shift__9710;
        this__9706.cnt = this__9706.cnt + 1;
        return tcoll
      }else {
        var new_root__9711 = cljs.core.tv_push_tail.call(null, tcoll, this__9706.shift, this__9706.root, tail_node__9707);
        this__9706.root = new_root__9711;
        this__9706.cnt = this__9706.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9712 = this;
  if(this__9712.root.edit) {
    this__9712.root.edit = null;
    var len__9713 = this__9712.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__9714 = cljs.core.make_array.call(null, len__9713);
    cljs.core.array_copy.call(null, this__9712.tail, 0, trimmed_tail__9714, 0, len__9713);
    return new cljs.core.PersistentVector(null, this__9712.cnt, this__9712.shift, this__9712.root, trimmed_tail__9714, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9716 = this;
  var h__2173__auto____9717 = this__9716.__hash;
  if(!(h__2173__auto____9717 == null)) {
    return h__2173__auto____9717
  }else {
    var h__2173__auto____9718 = cljs.core.hash_coll.call(null, coll);
    this__9716.__hash = h__2173__auto____9718;
    return h__2173__auto____9718
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9719 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__9720 = this;
  var this__9721 = this;
  return cljs.core.pr_str.call(null, this__9721)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9722 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9723 = this;
  return cljs.core._first.call(null, this__9723.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9724 = this;
  var temp__3971__auto____9725 = cljs.core.next.call(null, this__9724.front);
  if(temp__3971__auto____9725) {
    var f1__9726 = temp__3971__auto____9725;
    return new cljs.core.PersistentQueueSeq(this__9724.meta, f1__9726, this__9724.rear, null)
  }else {
    if(this__9724.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__9724.meta, this__9724.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9727 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9728 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__9728.front, this__9728.rear, this__9728.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9729 = this;
  return this__9729.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9730 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9730.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9731 = this;
  var h__2173__auto____9732 = this__9731.__hash;
  if(!(h__2173__auto____9732 == null)) {
    return h__2173__auto____9732
  }else {
    var h__2173__auto____9733 = cljs.core.hash_coll.call(null, coll);
    this__9731.__hash = h__2173__auto____9733;
    return h__2173__auto____9733
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9734 = this;
  if(cljs.core.truth_(this__9734.front)) {
    return new cljs.core.PersistentQueue(this__9734.meta, this__9734.count + 1, this__9734.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____9735 = this__9734.rear;
      if(cljs.core.truth_(or__3824__auto____9735)) {
        return or__3824__auto____9735
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__9734.meta, this__9734.count + 1, cljs.core.conj.call(null, this__9734.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__9736 = this;
  var this__9737 = this;
  return cljs.core.pr_str.call(null, this__9737)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9738 = this;
  var rear__9739 = cljs.core.seq.call(null, this__9738.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____9740 = this__9738.front;
    if(cljs.core.truth_(or__3824__auto____9740)) {
      return or__3824__auto____9740
    }else {
      return rear__9739
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__9738.front, cljs.core.seq.call(null, rear__9739), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9741 = this;
  return this__9741.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9742 = this;
  return cljs.core._first.call(null, this__9742.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9743 = this;
  if(cljs.core.truth_(this__9743.front)) {
    var temp__3971__auto____9744 = cljs.core.next.call(null, this__9743.front);
    if(temp__3971__auto____9744) {
      var f1__9745 = temp__3971__auto____9744;
      return new cljs.core.PersistentQueue(this__9743.meta, this__9743.count - 1, f1__9745, this__9743.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__9743.meta, this__9743.count - 1, cljs.core.seq.call(null, this__9743.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9746 = this;
  return cljs.core.first.call(null, this__9746.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9747 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9748 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9749 = this;
  return new cljs.core.PersistentQueue(meta, this__9749.count, this__9749.front, this__9749.rear, this__9749.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9750 = this;
  return this__9750.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9751 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__9752 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__9755 = array.length;
  var i__9756 = 0;
  while(true) {
    if(i__9756 < len__9755) {
      if(k === array[i__9756]) {
        return i__9756
      }else {
        var G__9757 = i__9756 + incr;
        i__9756 = G__9757;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__9760 = cljs.core.hash.call(null, a);
  var b__9761 = cljs.core.hash.call(null, b);
  if(a__9760 < b__9761) {
    return-1
  }else {
    if(a__9760 > b__9761) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__9769 = m.keys;
  var len__9770 = ks__9769.length;
  var so__9771 = m.strobj;
  var out__9772 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__9773 = 0;
  var out__9774 = cljs.core.transient$.call(null, out__9772);
  while(true) {
    if(i__9773 < len__9770) {
      var k__9775 = ks__9769[i__9773];
      var G__9776 = i__9773 + 1;
      var G__9777 = cljs.core.assoc_BANG_.call(null, out__9774, k__9775, so__9771[k__9775]);
      i__9773 = G__9776;
      out__9774 = G__9777;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__9774, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__9783 = {};
  var l__9784 = ks.length;
  var i__9785 = 0;
  while(true) {
    if(i__9785 < l__9784) {
      var k__9786 = ks[i__9785];
      new_obj__9783[k__9786] = obj[k__9786];
      var G__9787 = i__9785 + 1;
      i__9785 = G__9787;
      continue
    }else {
    }
    break
  }
  return new_obj__9783
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9790 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9791 = this;
  var h__2173__auto____9792 = this__9791.__hash;
  if(!(h__2173__auto____9792 == null)) {
    return h__2173__auto____9792
  }else {
    var h__2173__auto____9793 = cljs.core.hash_imap.call(null, coll);
    this__9791.__hash = h__2173__auto____9793;
    return h__2173__auto____9793
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9794 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9795 = this;
  if(function() {
    var and__3822__auto____9796 = goog.isString(k);
    if(and__3822__auto____9796) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9795.keys) == null)
    }else {
      return and__3822__auto____9796
    }
  }()) {
    return this__9795.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9797 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____9798 = this__9797.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____9798) {
        return or__3824__auto____9798
      }else {
        return this__9797.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__9797.keys) == null)) {
        var new_strobj__9799 = cljs.core.obj_clone.call(null, this__9797.strobj, this__9797.keys);
        new_strobj__9799[k] = v;
        return new cljs.core.ObjMap(this__9797.meta, this__9797.keys, new_strobj__9799, this__9797.update_count + 1, null)
      }else {
        var new_strobj__9800 = cljs.core.obj_clone.call(null, this__9797.strobj, this__9797.keys);
        var new_keys__9801 = this__9797.keys.slice();
        new_strobj__9800[k] = v;
        new_keys__9801.push(k);
        return new cljs.core.ObjMap(this__9797.meta, new_keys__9801, new_strobj__9800, this__9797.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9802 = this;
  if(function() {
    var and__3822__auto____9803 = goog.isString(k);
    if(and__3822__auto____9803) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9802.keys) == null)
    }else {
      return and__3822__auto____9803
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__9825 = null;
  var G__9825__2 = function(this_sym9804, k) {
    var this__9806 = this;
    var this_sym9804__9807 = this;
    var coll__9808 = this_sym9804__9807;
    return coll__9808.cljs$core$ILookup$_lookup$arity$2(coll__9808, k)
  };
  var G__9825__3 = function(this_sym9805, k, not_found) {
    var this__9806 = this;
    var this_sym9805__9809 = this;
    var coll__9810 = this_sym9805__9809;
    return coll__9810.cljs$core$ILookup$_lookup$arity$3(coll__9810, k, not_found)
  };
  G__9825 = function(this_sym9805, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9825__2.call(this, this_sym9805, k);
      case 3:
        return G__9825__3.call(this, this_sym9805, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9825
}();
cljs.core.ObjMap.prototype.apply = function(this_sym9788, args9789) {
  var this__9811 = this;
  return this_sym9788.call.apply(this_sym9788, [this_sym9788].concat(args9789.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9812 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__9813 = this;
  var this__9814 = this;
  return cljs.core.pr_str.call(null, this__9814)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9815 = this;
  if(this__9815.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__9778_SHARP_) {
      return cljs.core.vector.call(null, p1__9778_SHARP_, this__9815.strobj[p1__9778_SHARP_])
    }, this__9815.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9816 = this;
  return this__9816.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9817 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9818 = this;
  return new cljs.core.ObjMap(meta, this__9818.keys, this__9818.strobj, this__9818.update_count, this__9818.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9819 = this;
  return this__9819.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9820 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__9820.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9821 = this;
  if(function() {
    var and__3822__auto____9822 = goog.isString(k);
    if(and__3822__auto____9822) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9821.keys) == null)
    }else {
      return and__3822__auto____9822
    }
  }()) {
    var new_keys__9823 = this__9821.keys.slice();
    var new_strobj__9824 = cljs.core.obj_clone.call(null, this__9821.strobj, this__9821.keys);
    new_keys__9823.splice(cljs.core.scan_array.call(null, 1, k, new_keys__9823), 1);
    cljs.core.js_delete.call(null, new_strobj__9824, k);
    return new cljs.core.ObjMap(this__9821.meta, new_keys__9823, new_strobj__9824, this__9821.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9829 = this;
  var h__2173__auto____9830 = this__9829.__hash;
  if(!(h__2173__auto____9830 == null)) {
    return h__2173__auto____9830
  }else {
    var h__2173__auto____9831 = cljs.core.hash_imap.call(null, coll);
    this__9829.__hash = h__2173__auto____9831;
    return h__2173__auto____9831
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9832 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9833 = this;
  var bucket__9834 = this__9833.hashobj[cljs.core.hash.call(null, k)];
  var i__9835 = cljs.core.truth_(bucket__9834) ? cljs.core.scan_array.call(null, 2, k, bucket__9834) : null;
  if(cljs.core.truth_(i__9835)) {
    return bucket__9834[i__9835 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9836 = this;
  var h__9837 = cljs.core.hash.call(null, k);
  var bucket__9838 = this__9836.hashobj[h__9837];
  if(cljs.core.truth_(bucket__9838)) {
    var new_bucket__9839 = bucket__9838.slice();
    var new_hashobj__9840 = goog.object.clone(this__9836.hashobj);
    new_hashobj__9840[h__9837] = new_bucket__9839;
    var temp__3971__auto____9841 = cljs.core.scan_array.call(null, 2, k, new_bucket__9839);
    if(cljs.core.truth_(temp__3971__auto____9841)) {
      var i__9842 = temp__3971__auto____9841;
      new_bucket__9839[i__9842 + 1] = v;
      return new cljs.core.HashMap(this__9836.meta, this__9836.count, new_hashobj__9840, null)
    }else {
      new_bucket__9839.push(k, v);
      return new cljs.core.HashMap(this__9836.meta, this__9836.count + 1, new_hashobj__9840, null)
    }
  }else {
    var new_hashobj__9843 = goog.object.clone(this__9836.hashobj);
    new_hashobj__9843[h__9837] = [k, v];
    return new cljs.core.HashMap(this__9836.meta, this__9836.count + 1, new_hashobj__9843, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9844 = this;
  var bucket__9845 = this__9844.hashobj[cljs.core.hash.call(null, k)];
  var i__9846 = cljs.core.truth_(bucket__9845) ? cljs.core.scan_array.call(null, 2, k, bucket__9845) : null;
  if(cljs.core.truth_(i__9846)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__9871 = null;
  var G__9871__2 = function(this_sym9847, k) {
    var this__9849 = this;
    var this_sym9847__9850 = this;
    var coll__9851 = this_sym9847__9850;
    return coll__9851.cljs$core$ILookup$_lookup$arity$2(coll__9851, k)
  };
  var G__9871__3 = function(this_sym9848, k, not_found) {
    var this__9849 = this;
    var this_sym9848__9852 = this;
    var coll__9853 = this_sym9848__9852;
    return coll__9853.cljs$core$ILookup$_lookup$arity$3(coll__9853, k, not_found)
  };
  G__9871 = function(this_sym9848, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9871__2.call(this, this_sym9848, k);
      case 3:
        return G__9871__3.call(this, this_sym9848, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9871
}();
cljs.core.HashMap.prototype.apply = function(this_sym9827, args9828) {
  var this__9854 = this;
  return this_sym9827.call.apply(this_sym9827, [this_sym9827].concat(args9828.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9855 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__9856 = this;
  var this__9857 = this;
  return cljs.core.pr_str.call(null, this__9857)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9858 = this;
  if(this__9858.count > 0) {
    var hashes__9859 = cljs.core.js_keys.call(null, this__9858.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__9826_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__9858.hashobj[p1__9826_SHARP_]))
    }, hashes__9859)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9860 = this;
  return this__9860.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9861 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9862 = this;
  return new cljs.core.HashMap(meta, this__9862.count, this__9862.hashobj, this__9862.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9863 = this;
  return this__9863.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9864 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__9864.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9865 = this;
  var h__9866 = cljs.core.hash.call(null, k);
  var bucket__9867 = this__9865.hashobj[h__9866];
  var i__9868 = cljs.core.truth_(bucket__9867) ? cljs.core.scan_array.call(null, 2, k, bucket__9867) : null;
  if(cljs.core.not.call(null, i__9868)) {
    return coll
  }else {
    var new_hashobj__9869 = goog.object.clone(this__9865.hashobj);
    if(3 > bucket__9867.length) {
      cljs.core.js_delete.call(null, new_hashobj__9869, h__9866)
    }else {
      var new_bucket__9870 = bucket__9867.slice();
      new_bucket__9870.splice(i__9868, 2);
      new_hashobj__9869[h__9866] = new_bucket__9870
    }
    return new cljs.core.HashMap(this__9865.meta, this__9865.count - 1, new_hashobj__9869, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__9872 = ks.length;
  var i__9873 = 0;
  var out__9874 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__9873 < len__9872) {
      var G__9875 = i__9873 + 1;
      var G__9876 = cljs.core.assoc.call(null, out__9874, ks[i__9873], vs[i__9873]);
      i__9873 = G__9875;
      out__9874 = G__9876;
      continue
    }else {
      return out__9874
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__9880 = m.arr;
  var len__9881 = arr__9880.length;
  var i__9882 = 0;
  while(true) {
    if(len__9881 <= i__9882) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__9880[i__9882], k)) {
        return i__9882
      }else {
        if("\ufdd0'else") {
          var G__9883 = i__9882 + 2;
          i__9882 = G__9883;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
void 0;
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9886 = this;
  return new cljs.core.TransientArrayMap({}, this__9886.arr.length, this__9886.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9887 = this;
  var h__2173__auto____9888 = this__9887.__hash;
  if(!(h__2173__auto____9888 == null)) {
    return h__2173__auto____9888
  }else {
    var h__2173__auto____9889 = cljs.core.hash_imap.call(null, coll);
    this__9887.__hash = h__2173__auto____9889;
    return h__2173__auto____9889
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9890 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9891 = this;
  var idx__9892 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9892 === -1) {
    return not_found
  }else {
    return this__9891.arr[idx__9892 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9893 = this;
  var idx__9894 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9894 === -1) {
    if(this__9893.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__9893.meta, this__9893.cnt + 1, function() {
        var G__9895__9896 = this__9893.arr.slice();
        G__9895__9896.push(k);
        G__9895__9896.push(v);
        return G__9895__9896
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__9893.arr[idx__9894 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__9893.meta, this__9893.cnt, function() {
          var G__9897__9898 = this__9893.arr.slice();
          G__9897__9898[idx__9894 + 1] = v;
          return G__9897__9898
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9899 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__9931 = null;
  var G__9931__2 = function(this_sym9900, k) {
    var this__9902 = this;
    var this_sym9900__9903 = this;
    var coll__9904 = this_sym9900__9903;
    return coll__9904.cljs$core$ILookup$_lookup$arity$2(coll__9904, k)
  };
  var G__9931__3 = function(this_sym9901, k, not_found) {
    var this__9902 = this;
    var this_sym9901__9905 = this;
    var coll__9906 = this_sym9901__9905;
    return coll__9906.cljs$core$ILookup$_lookup$arity$3(coll__9906, k, not_found)
  };
  G__9931 = function(this_sym9901, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9931__2.call(this, this_sym9901, k);
      case 3:
        return G__9931__3.call(this, this_sym9901, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9931
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym9884, args9885) {
  var this__9907 = this;
  return this_sym9884.call.apply(this_sym9884, [this_sym9884].concat(args9885.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__9908 = this;
  var len__9909 = this__9908.arr.length;
  var i__9910 = 0;
  var init__9911 = init;
  while(true) {
    if(i__9910 < len__9909) {
      var init__9912 = f.call(null, init__9911, this__9908.arr[i__9910], this__9908.arr[i__9910 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__9912)) {
        return cljs.core.deref.call(null, init__9912)
      }else {
        var G__9932 = i__9910 + 2;
        var G__9933 = init__9912;
        i__9910 = G__9932;
        init__9911 = G__9933;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9913 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__9914 = this;
  var this__9915 = this;
  return cljs.core.pr_str.call(null, this__9915)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9916 = this;
  if(this__9916.cnt > 0) {
    var len__9917 = this__9916.arr.length;
    var array_map_seq__9918 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__9917) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__9916.arr[i], this__9916.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__9918.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9919 = this;
  return this__9919.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9920 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9921 = this;
  return new cljs.core.PersistentArrayMap(meta, this__9921.cnt, this__9921.arr, this__9921.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9922 = this;
  return this__9922.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9923 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9923.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9924 = this;
  var idx__9925 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9925 >= 0) {
    var len__9926 = this__9924.arr.length;
    var new_len__9927 = len__9926 - 2;
    if(new_len__9927 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__9928 = cljs.core.make_array.call(null, new_len__9927);
      var s__9929 = 0;
      var d__9930 = 0;
      while(true) {
        if(s__9929 >= len__9926) {
          return new cljs.core.PersistentArrayMap(this__9924.meta, this__9924.cnt - 1, new_arr__9928, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__9924.arr[s__9929])) {
            var G__9934 = s__9929 + 2;
            var G__9935 = d__9930;
            s__9929 = G__9934;
            d__9930 = G__9935;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__9928[d__9930] = this__9924.arr[s__9929];
              new_arr__9928[d__9930 + 1] = this__9924.arr[s__9929 + 1];
              var G__9936 = s__9929 + 2;
              var G__9937 = d__9930 + 2;
              s__9929 = G__9936;
              d__9930 = G__9937;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__9938 = cljs.core.count.call(null, ks);
  var i__9939 = 0;
  var out__9940 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__9939 < len__9938) {
      var G__9941 = i__9939 + 1;
      var G__9942 = cljs.core.assoc_BANG_.call(null, out__9940, ks[i__9939], vs[i__9939]);
      i__9939 = G__9941;
      out__9940 = G__9942;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__9940)
    }
    break
  }
};
void 0;
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__9943 = this;
  if(cljs.core.truth_(this__9943.editable_QMARK_)) {
    var idx__9944 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__9944 >= 0) {
      this__9943.arr[idx__9944] = this__9943.arr[this__9943.len - 2];
      this__9943.arr[idx__9944 + 1] = this__9943.arr[this__9943.len - 1];
      var G__9945__9946 = this__9943.arr;
      G__9945__9946.pop();
      G__9945__9946.pop();
      G__9945__9946;
      this__9943.len = this__9943.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9947 = this;
  if(cljs.core.truth_(this__9947.editable_QMARK_)) {
    var idx__9948 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__9948 === -1) {
      if(this__9947.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__9947.len = this__9947.len + 2;
        this__9947.arr.push(key);
        this__9947.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__9947.len, this__9947.arr), key, val)
      }
    }else {
      if(val === this__9947.arr[idx__9948 + 1]) {
        return tcoll
      }else {
        this__9947.arr[idx__9948 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__9949 = this;
  if(cljs.core.truth_(this__9949.editable_QMARK_)) {
    if(function() {
      var G__9950__9951 = o;
      if(G__9950__9951) {
        if(function() {
          var or__3824__auto____9952 = G__9950__9951.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____9952) {
            return or__3824__auto____9952
          }else {
            return G__9950__9951.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__9950__9951.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9950__9951)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9950__9951)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__9953 = cljs.core.seq.call(null, o);
      var tcoll__9954 = tcoll;
      while(true) {
        var temp__3971__auto____9955 = cljs.core.first.call(null, es__9953);
        if(cljs.core.truth_(temp__3971__auto____9955)) {
          var e__9956 = temp__3971__auto____9955;
          var G__9962 = cljs.core.next.call(null, es__9953);
          var G__9963 = tcoll__9954.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__9954, cljs.core.key.call(null, e__9956), cljs.core.val.call(null, e__9956));
          es__9953 = G__9962;
          tcoll__9954 = G__9963;
          continue
        }else {
          return tcoll__9954
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9957 = this;
  if(cljs.core.truth_(this__9957.editable_QMARK_)) {
    this__9957.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__9957.len, 2), this__9957.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__9958 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__9959 = this;
  if(cljs.core.truth_(this__9959.editable_QMARK_)) {
    var idx__9960 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__9960 === -1) {
      return not_found
    }else {
      return this__9959.arr[idx__9960 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__9961 = this;
  if(cljs.core.truth_(this__9961.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__9961.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
void 0;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__9966 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__9967 = 0;
  while(true) {
    if(i__9967 < len) {
      var G__9968 = cljs.core.assoc_BANG_.call(null, out__9966, arr[i__9967], arr[i__9967 + 1]);
      var G__9969 = i__9967 + 2;
      out__9966 = G__9968;
      i__9967 = G__9969;
      continue
    }else {
      return out__9966
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2291__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
void 0;
void 0;
void 0;
void 0;
void 0;
void 0;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__9974__9975 = arr.slice();
    G__9974__9975[i] = a;
    return G__9974__9975
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__9976__9977 = arr.slice();
    G__9976__9977[i] = a;
    G__9976__9977[j] = b;
    return G__9976__9977
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__9979 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__9979, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__9979, 2 * i, new_arr__9979.length - 2 * i);
  return new_arr__9979
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__9982 = inode.ensure_editable(edit);
    editable__9982.arr[i] = a;
    return editable__9982
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__9983 = inode.ensure_editable(edit);
    editable__9983.arr[i] = a;
    editable__9983.arr[j] = b;
    return editable__9983
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__9990 = arr.length;
  var i__9991 = 0;
  var init__9992 = init;
  while(true) {
    if(i__9991 < len__9990) {
      var init__9995 = function() {
        var k__9993 = arr[i__9991];
        if(!(k__9993 == null)) {
          return f.call(null, init__9992, k__9993, arr[i__9991 + 1])
        }else {
          var node__9994 = arr[i__9991 + 1];
          if(!(node__9994 == null)) {
            return node__9994.kv_reduce(f, init__9992)
          }else {
            return init__9992
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__9995)) {
        return cljs.core.deref.call(null, init__9995)
      }else {
        var G__9996 = i__9991 + 2;
        var G__9997 = init__9995;
        i__9991 = G__9996;
        init__9992 = G__9997;
        continue
      }
    }else {
      return init__9992
    }
    break
  }
};
void 0;
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__9998 = this;
  var inode__9999 = this;
  if(this__9998.bitmap === bit) {
    return null
  }else {
    var editable__10000 = inode__9999.ensure_editable(e);
    var earr__10001 = editable__10000.arr;
    var len__10002 = earr__10001.length;
    editable__10000.bitmap = bit ^ editable__10000.bitmap;
    cljs.core.array_copy.call(null, earr__10001, 2 * (i + 1), earr__10001, 2 * i, len__10002 - 2 * (i + 1));
    earr__10001[len__10002 - 2] = null;
    earr__10001[len__10002 - 1] = null;
    return editable__10000
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10003 = this;
  var inode__10004 = this;
  var bit__10005 = 1 << (hash >>> shift & 31);
  var idx__10006 = cljs.core.bitmap_indexed_node_index.call(null, this__10003.bitmap, bit__10005);
  if((this__10003.bitmap & bit__10005) === 0) {
    var n__10007 = cljs.core.bit_count.call(null, this__10003.bitmap);
    if(2 * n__10007 < this__10003.arr.length) {
      var editable__10008 = inode__10004.ensure_editable(edit);
      var earr__10009 = editable__10008.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__10009, 2 * idx__10006, earr__10009, 2 * (idx__10006 + 1), 2 * (n__10007 - idx__10006));
      earr__10009[2 * idx__10006] = key;
      earr__10009[2 * idx__10006 + 1] = val;
      editable__10008.bitmap = editable__10008.bitmap | bit__10005;
      return editable__10008
    }else {
      if(n__10007 >= 16) {
        var nodes__10010 = cljs.core.make_array.call(null, 32);
        var jdx__10011 = hash >>> shift & 31;
        nodes__10010[jdx__10011] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__10012 = 0;
        var j__10013 = 0;
        while(true) {
          if(i__10012 < 32) {
            if((this__10003.bitmap >>> i__10012 & 1) === 0) {
              var G__10066 = i__10012 + 1;
              var G__10067 = j__10013;
              i__10012 = G__10066;
              j__10013 = G__10067;
              continue
            }else {
              nodes__10010[i__10012] = !(this__10003.arr[j__10013] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__10003.arr[j__10013]), this__10003.arr[j__10013], this__10003.arr[j__10013 + 1], added_leaf_QMARK_) : this__10003.arr[j__10013 + 1];
              var G__10068 = i__10012 + 1;
              var G__10069 = j__10013 + 2;
              i__10012 = G__10068;
              j__10013 = G__10069;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__10007 + 1, nodes__10010)
      }else {
        if("\ufdd0'else") {
          var new_arr__10014 = cljs.core.make_array.call(null, 2 * (n__10007 + 4));
          cljs.core.array_copy.call(null, this__10003.arr, 0, new_arr__10014, 0, 2 * idx__10006);
          new_arr__10014[2 * idx__10006] = key;
          new_arr__10014[2 * idx__10006 + 1] = val;
          cljs.core.array_copy.call(null, this__10003.arr, 2 * idx__10006, new_arr__10014, 2 * (idx__10006 + 1), 2 * (n__10007 - idx__10006));
          added_leaf_QMARK_.val = true;
          var editable__10015 = inode__10004.ensure_editable(edit);
          editable__10015.arr = new_arr__10014;
          editable__10015.bitmap = editable__10015.bitmap | bit__10005;
          return editable__10015
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__10016 = this__10003.arr[2 * idx__10006];
    var val_or_node__10017 = this__10003.arr[2 * idx__10006 + 1];
    if(key_or_nil__10016 == null) {
      var n__10018 = val_or_node__10017.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__10018 === val_or_node__10017) {
        return inode__10004
      }else {
        return cljs.core.edit_and_set.call(null, inode__10004, edit, 2 * idx__10006 + 1, n__10018)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10016)) {
        if(val === val_or_node__10017) {
          return inode__10004
        }else {
          return cljs.core.edit_and_set.call(null, inode__10004, edit, 2 * idx__10006 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__10004, edit, 2 * idx__10006, null, 2 * idx__10006 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__10016, val_or_node__10017, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__10019 = this;
  var inode__10020 = this;
  return cljs.core.create_inode_seq.call(null, this__10019.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10021 = this;
  var inode__10022 = this;
  var bit__10023 = 1 << (hash >>> shift & 31);
  if((this__10021.bitmap & bit__10023) === 0) {
    return inode__10022
  }else {
    var idx__10024 = cljs.core.bitmap_indexed_node_index.call(null, this__10021.bitmap, bit__10023);
    var key_or_nil__10025 = this__10021.arr[2 * idx__10024];
    var val_or_node__10026 = this__10021.arr[2 * idx__10024 + 1];
    if(key_or_nil__10025 == null) {
      var n__10027 = val_or_node__10026.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__10027 === val_or_node__10026) {
        return inode__10022
      }else {
        if(!(n__10027 == null)) {
          return cljs.core.edit_and_set.call(null, inode__10022, edit, 2 * idx__10024 + 1, n__10027)
        }else {
          if(this__10021.bitmap === bit__10023) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__10022.edit_and_remove_pair(edit, bit__10023, idx__10024)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10025)) {
        removed_leaf_QMARK_[0] = true;
        return inode__10022.edit_and_remove_pair(edit, bit__10023, idx__10024)
      }else {
        if("\ufdd0'else") {
          return inode__10022
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__10028 = this;
  var inode__10029 = this;
  if(e === this__10028.edit) {
    return inode__10029
  }else {
    var n__10030 = cljs.core.bit_count.call(null, this__10028.bitmap);
    var new_arr__10031 = cljs.core.make_array.call(null, n__10030 < 0 ? 4 : 2 * (n__10030 + 1));
    cljs.core.array_copy.call(null, this__10028.arr, 0, new_arr__10031, 0, 2 * n__10030);
    return new cljs.core.BitmapIndexedNode(e, this__10028.bitmap, new_arr__10031)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__10032 = this;
  var inode__10033 = this;
  return cljs.core.inode_kv_reduce.call(null, this__10032.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10034 = this;
  var inode__10035 = this;
  var bit__10036 = 1 << (hash >>> shift & 31);
  if((this__10034.bitmap & bit__10036) === 0) {
    return not_found
  }else {
    var idx__10037 = cljs.core.bitmap_indexed_node_index.call(null, this__10034.bitmap, bit__10036);
    var key_or_nil__10038 = this__10034.arr[2 * idx__10037];
    var val_or_node__10039 = this__10034.arr[2 * idx__10037 + 1];
    if(key_or_nil__10038 == null) {
      return val_or_node__10039.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10038)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__10038, val_or_node__10039], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__10040 = this;
  var inode__10041 = this;
  var bit__10042 = 1 << (hash >>> shift & 31);
  if((this__10040.bitmap & bit__10042) === 0) {
    return inode__10041
  }else {
    var idx__10043 = cljs.core.bitmap_indexed_node_index.call(null, this__10040.bitmap, bit__10042);
    var key_or_nil__10044 = this__10040.arr[2 * idx__10043];
    var val_or_node__10045 = this__10040.arr[2 * idx__10043 + 1];
    if(key_or_nil__10044 == null) {
      var n__10046 = val_or_node__10045.inode_without(shift + 5, hash, key);
      if(n__10046 === val_or_node__10045) {
        return inode__10041
      }else {
        if(!(n__10046 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__10040.bitmap, cljs.core.clone_and_set.call(null, this__10040.arr, 2 * idx__10043 + 1, n__10046))
        }else {
          if(this__10040.bitmap === bit__10042) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__10040.bitmap ^ bit__10042, cljs.core.remove_pair.call(null, this__10040.arr, idx__10043))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10044)) {
        return new cljs.core.BitmapIndexedNode(null, this__10040.bitmap ^ bit__10042, cljs.core.remove_pair.call(null, this__10040.arr, idx__10043))
      }else {
        if("\ufdd0'else") {
          return inode__10041
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10047 = this;
  var inode__10048 = this;
  var bit__10049 = 1 << (hash >>> shift & 31);
  var idx__10050 = cljs.core.bitmap_indexed_node_index.call(null, this__10047.bitmap, bit__10049);
  if((this__10047.bitmap & bit__10049) === 0) {
    var n__10051 = cljs.core.bit_count.call(null, this__10047.bitmap);
    if(n__10051 >= 16) {
      var nodes__10052 = cljs.core.make_array.call(null, 32);
      var jdx__10053 = hash >>> shift & 31;
      nodes__10052[jdx__10053] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__10054 = 0;
      var j__10055 = 0;
      while(true) {
        if(i__10054 < 32) {
          if((this__10047.bitmap >>> i__10054 & 1) === 0) {
            var G__10070 = i__10054 + 1;
            var G__10071 = j__10055;
            i__10054 = G__10070;
            j__10055 = G__10071;
            continue
          }else {
            nodes__10052[i__10054] = !(this__10047.arr[j__10055] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__10047.arr[j__10055]), this__10047.arr[j__10055], this__10047.arr[j__10055 + 1], added_leaf_QMARK_) : this__10047.arr[j__10055 + 1];
            var G__10072 = i__10054 + 1;
            var G__10073 = j__10055 + 2;
            i__10054 = G__10072;
            j__10055 = G__10073;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__10051 + 1, nodes__10052)
    }else {
      var new_arr__10056 = cljs.core.make_array.call(null, 2 * (n__10051 + 1));
      cljs.core.array_copy.call(null, this__10047.arr, 0, new_arr__10056, 0, 2 * idx__10050);
      new_arr__10056[2 * idx__10050] = key;
      new_arr__10056[2 * idx__10050 + 1] = val;
      cljs.core.array_copy.call(null, this__10047.arr, 2 * idx__10050, new_arr__10056, 2 * (idx__10050 + 1), 2 * (n__10051 - idx__10050));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__10047.bitmap | bit__10049, new_arr__10056)
    }
  }else {
    var key_or_nil__10057 = this__10047.arr[2 * idx__10050];
    var val_or_node__10058 = this__10047.arr[2 * idx__10050 + 1];
    if(key_or_nil__10057 == null) {
      var n__10059 = val_or_node__10058.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__10059 === val_or_node__10058) {
        return inode__10048
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__10047.bitmap, cljs.core.clone_and_set.call(null, this__10047.arr, 2 * idx__10050 + 1, n__10059))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10057)) {
        if(val === val_or_node__10058) {
          return inode__10048
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__10047.bitmap, cljs.core.clone_and_set.call(null, this__10047.arr, 2 * idx__10050 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__10047.bitmap, cljs.core.clone_and_set.call(null, this__10047.arr, 2 * idx__10050, null, 2 * idx__10050 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__10057, val_or_node__10058, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10060 = this;
  var inode__10061 = this;
  var bit__10062 = 1 << (hash >>> shift & 31);
  if((this__10060.bitmap & bit__10062) === 0) {
    return not_found
  }else {
    var idx__10063 = cljs.core.bitmap_indexed_node_index.call(null, this__10060.bitmap, bit__10062);
    var key_or_nil__10064 = this__10060.arr[2 * idx__10063];
    var val_or_node__10065 = this__10060.arr[2 * idx__10063 + 1];
    if(key_or_nil__10064 == null) {
      return val_or_node__10065.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10064)) {
        return val_or_node__10065
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__10081 = array_node.arr;
  var len__10082 = 2 * (array_node.cnt - 1);
  var new_arr__10083 = cljs.core.make_array.call(null, len__10082);
  var i__10084 = 0;
  var j__10085 = 1;
  var bitmap__10086 = 0;
  while(true) {
    if(i__10084 < len__10082) {
      if(function() {
        var and__3822__auto____10087 = !(i__10084 === idx);
        if(and__3822__auto____10087) {
          return!(arr__10081[i__10084] == null)
        }else {
          return and__3822__auto____10087
        }
      }()) {
        new_arr__10083[j__10085] = arr__10081[i__10084];
        var G__10088 = i__10084 + 1;
        var G__10089 = j__10085 + 2;
        var G__10090 = bitmap__10086 | 1 << i__10084;
        i__10084 = G__10088;
        j__10085 = G__10089;
        bitmap__10086 = G__10090;
        continue
      }else {
        var G__10091 = i__10084 + 1;
        var G__10092 = j__10085;
        var G__10093 = bitmap__10086;
        i__10084 = G__10091;
        j__10085 = G__10092;
        bitmap__10086 = G__10093;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__10086, new_arr__10083)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10094 = this;
  var inode__10095 = this;
  var idx__10096 = hash >>> shift & 31;
  var node__10097 = this__10094.arr[idx__10096];
  if(node__10097 == null) {
    var editable__10098 = cljs.core.edit_and_set.call(null, inode__10095, edit, idx__10096, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__10098.cnt = editable__10098.cnt + 1;
    return editable__10098
  }else {
    var n__10099 = node__10097.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__10099 === node__10097) {
      return inode__10095
    }else {
      return cljs.core.edit_and_set.call(null, inode__10095, edit, idx__10096, n__10099)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__10100 = this;
  var inode__10101 = this;
  return cljs.core.create_array_node_seq.call(null, this__10100.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10102 = this;
  var inode__10103 = this;
  var idx__10104 = hash >>> shift & 31;
  var node__10105 = this__10102.arr[idx__10104];
  if(node__10105 == null) {
    return inode__10103
  }else {
    var n__10106 = node__10105.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__10106 === node__10105) {
      return inode__10103
    }else {
      if(n__10106 == null) {
        if(this__10102.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__10103, edit, idx__10104)
        }else {
          var editable__10107 = cljs.core.edit_and_set.call(null, inode__10103, edit, idx__10104, n__10106);
          editable__10107.cnt = editable__10107.cnt - 1;
          return editable__10107
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__10103, edit, idx__10104, n__10106)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__10108 = this;
  var inode__10109 = this;
  if(e === this__10108.edit) {
    return inode__10109
  }else {
    return new cljs.core.ArrayNode(e, this__10108.cnt, this__10108.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__10110 = this;
  var inode__10111 = this;
  var len__10112 = this__10110.arr.length;
  var i__10113 = 0;
  var init__10114 = init;
  while(true) {
    if(i__10113 < len__10112) {
      var node__10115 = this__10110.arr[i__10113];
      if(!(node__10115 == null)) {
        var init__10116 = node__10115.kv_reduce(f, init__10114);
        if(cljs.core.reduced_QMARK_.call(null, init__10116)) {
          return cljs.core.deref.call(null, init__10116)
        }else {
          var G__10135 = i__10113 + 1;
          var G__10136 = init__10116;
          i__10113 = G__10135;
          init__10114 = G__10136;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__10114
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10117 = this;
  var inode__10118 = this;
  var idx__10119 = hash >>> shift & 31;
  var node__10120 = this__10117.arr[idx__10119];
  if(!(node__10120 == null)) {
    return node__10120.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__10121 = this;
  var inode__10122 = this;
  var idx__10123 = hash >>> shift & 31;
  var node__10124 = this__10121.arr[idx__10123];
  if(!(node__10124 == null)) {
    var n__10125 = node__10124.inode_without(shift + 5, hash, key);
    if(n__10125 === node__10124) {
      return inode__10122
    }else {
      if(n__10125 == null) {
        if(this__10121.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__10122, null, idx__10123)
        }else {
          return new cljs.core.ArrayNode(null, this__10121.cnt - 1, cljs.core.clone_and_set.call(null, this__10121.arr, idx__10123, n__10125))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__10121.cnt, cljs.core.clone_and_set.call(null, this__10121.arr, idx__10123, n__10125))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__10122
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10126 = this;
  var inode__10127 = this;
  var idx__10128 = hash >>> shift & 31;
  var node__10129 = this__10126.arr[idx__10128];
  if(node__10129 == null) {
    return new cljs.core.ArrayNode(null, this__10126.cnt + 1, cljs.core.clone_and_set.call(null, this__10126.arr, idx__10128, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__10130 = node__10129.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__10130 === node__10129) {
      return inode__10127
    }else {
      return new cljs.core.ArrayNode(null, this__10126.cnt, cljs.core.clone_and_set.call(null, this__10126.arr, idx__10128, n__10130))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10131 = this;
  var inode__10132 = this;
  var idx__10133 = hash >>> shift & 31;
  var node__10134 = this__10131.arr[idx__10133];
  if(!(node__10134 == null)) {
    return node__10134.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__10139 = 2 * cnt;
  var i__10140 = 0;
  while(true) {
    if(i__10140 < lim__10139) {
      if(cljs.core.key_test.call(null, key, arr[i__10140])) {
        return i__10140
      }else {
        var G__10141 = i__10140 + 2;
        i__10140 = G__10141;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10142 = this;
  var inode__10143 = this;
  if(hash === this__10142.collision_hash) {
    var idx__10144 = cljs.core.hash_collision_node_find_index.call(null, this__10142.arr, this__10142.cnt, key);
    if(idx__10144 === -1) {
      if(this__10142.arr.length > 2 * this__10142.cnt) {
        var editable__10145 = cljs.core.edit_and_set.call(null, inode__10143, edit, 2 * this__10142.cnt, key, 2 * this__10142.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__10145.cnt = editable__10145.cnt + 1;
        return editable__10145
      }else {
        var len__10146 = this__10142.arr.length;
        var new_arr__10147 = cljs.core.make_array.call(null, len__10146 + 2);
        cljs.core.array_copy.call(null, this__10142.arr, 0, new_arr__10147, 0, len__10146);
        new_arr__10147[len__10146] = key;
        new_arr__10147[len__10146 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__10143.ensure_editable_array(edit, this__10142.cnt + 1, new_arr__10147)
      }
    }else {
      if(this__10142.arr[idx__10144 + 1] === val) {
        return inode__10143
      }else {
        return cljs.core.edit_and_set.call(null, inode__10143, edit, idx__10144 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__10142.collision_hash >>> shift & 31), [null, inode__10143, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__10148 = this;
  var inode__10149 = this;
  return cljs.core.create_inode_seq.call(null, this__10148.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10150 = this;
  var inode__10151 = this;
  var idx__10152 = cljs.core.hash_collision_node_find_index.call(null, this__10150.arr, this__10150.cnt, key);
  if(idx__10152 === -1) {
    return inode__10151
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__10150.cnt === 1) {
      return null
    }else {
      var editable__10153 = inode__10151.ensure_editable(edit);
      var earr__10154 = editable__10153.arr;
      earr__10154[idx__10152] = earr__10154[2 * this__10150.cnt - 2];
      earr__10154[idx__10152 + 1] = earr__10154[2 * this__10150.cnt - 1];
      earr__10154[2 * this__10150.cnt - 1] = null;
      earr__10154[2 * this__10150.cnt - 2] = null;
      editable__10153.cnt = editable__10153.cnt - 1;
      return editable__10153
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__10155 = this;
  var inode__10156 = this;
  if(e === this__10155.edit) {
    return inode__10156
  }else {
    var new_arr__10157 = cljs.core.make_array.call(null, 2 * (this__10155.cnt + 1));
    cljs.core.array_copy.call(null, this__10155.arr, 0, new_arr__10157, 0, 2 * this__10155.cnt);
    return new cljs.core.HashCollisionNode(e, this__10155.collision_hash, this__10155.cnt, new_arr__10157)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__10158 = this;
  var inode__10159 = this;
  return cljs.core.inode_kv_reduce.call(null, this__10158.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10160 = this;
  var inode__10161 = this;
  var idx__10162 = cljs.core.hash_collision_node_find_index.call(null, this__10160.arr, this__10160.cnt, key);
  if(idx__10162 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__10160.arr[idx__10162])) {
      return cljs.core.PersistentVector.fromArray([this__10160.arr[idx__10162], this__10160.arr[idx__10162 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__10163 = this;
  var inode__10164 = this;
  var idx__10165 = cljs.core.hash_collision_node_find_index.call(null, this__10163.arr, this__10163.cnt, key);
  if(idx__10165 === -1) {
    return inode__10164
  }else {
    if(this__10163.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__10163.collision_hash, this__10163.cnt - 1, cljs.core.remove_pair.call(null, this__10163.arr, cljs.core.quot.call(null, idx__10165, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10166 = this;
  var inode__10167 = this;
  if(hash === this__10166.collision_hash) {
    var idx__10168 = cljs.core.hash_collision_node_find_index.call(null, this__10166.arr, this__10166.cnt, key);
    if(idx__10168 === -1) {
      var len__10169 = this__10166.arr.length;
      var new_arr__10170 = cljs.core.make_array.call(null, len__10169 + 2);
      cljs.core.array_copy.call(null, this__10166.arr, 0, new_arr__10170, 0, len__10169);
      new_arr__10170[len__10169] = key;
      new_arr__10170[len__10169 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__10166.collision_hash, this__10166.cnt + 1, new_arr__10170)
    }else {
      if(cljs.core._EQ_.call(null, this__10166.arr[idx__10168], val)) {
        return inode__10167
      }else {
        return new cljs.core.HashCollisionNode(null, this__10166.collision_hash, this__10166.cnt, cljs.core.clone_and_set.call(null, this__10166.arr, idx__10168 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__10166.collision_hash >>> shift & 31), [null, inode__10167])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10171 = this;
  var inode__10172 = this;
  var idx__10173 = cljs.core.hash_collision_node_find_index.call(null, this__10171.arr, this__10171.cnt, key);
  if(idx__10173 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__10171.arr[idx__10173])) {
      return this__10171.arr[idx__10173 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__10174 = this;
  var inode__10175 = this;
  if(e === this__10174.edit) {
    this__10174.arr = array;
    this__10174.cnt = count;
    return inode__10175
  }else {
    return new cljs.core.HashCollisionNode(this__10174.edit, this__10174.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__10180 = cljs.core.hash.call(null, key1);
    if(key1hash__10180 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__10180, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___10181 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__10180, key1, val1, added_leaf_QMARK___10181).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___10181)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__10182 = cljs.core.hash.call(null, key1);
    if(key1hash__10182 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__10182, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___10183 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__10182, key1, val1, added_leaf_QMARK___10183).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___10183)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10184 = this;
  var h__2173__auto____10185 = this__10184.__hash;
  if(!(h__2173__auto____10185 == null)) {
    return h__2173__auto____10185
  }else {
    var h__2173__auto____10186 = cljs.core.hash_coll.call(null, coll);
    this__10184.__hash = h__2173__auto____10186;
    return h__2173__auto____10186
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10187 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__10188 = this;
  var this__10189 = this;
  return cljs.core.pr_str.call(null, this__10189)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10190 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10191 = this;
  if(this__10191.s == null) {
    return cljs.core.PersistentVector.fromArray([this__10191.nodes[this__10191.i], this__10191.nodes[this__10191.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__10191.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10192 = this;
  if(this__10192.s == null) {
    return cljs.core.create_inode_seq.call(null, this__10192.nodes, this__10192.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__10192.nodes, this__10192.i, cljs.core.next.call(null, this__10192.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10193 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10194 = this;
  return new cljs.core.NodeSeq(meta, this__10194.nodes, this__10194.i, this__10194.s, this__10194.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10195 = this;
  return this__10195.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10196 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10196.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__10203 = nodes.length;
      var j__10204 = i;
      while(true) {
        if(j__10204 < len__10203) {
          if(!(nodes[j__10204] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__10204, null, null)
          }else {
            var temp__3971__auto____10205 = nodes[j__10204 + 1];
            if(cljs.core.truth_(temp__3971__auto____10205)) {
              var node__10206 = temp__3971__auto____10205;
              var temp__3971__auto____10207 = node__10206.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____10207)) {
                var node_seq__10208 = temp__3971__auto____10207;
                return new cljs.core.NodeSeq(null, nodes, j__10204 + 2, node_seq__10208, null)
              }else {
                var G__10209 = j__10204 + 2;
                j__10204 = G__10209;
                continue
              }
            }else {
              var G__10210 = j__10204 + 2;
              j__10204 = G__10210;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10211 = this;
  var h__2173__auto____10212 = this__10211.__hash;
  if(!(h__2173__auto____10212 == null)) {
    return h__2173__auto____10212
  }else {
    var h__2173__auto____10213 = cljs.core.hash_coll.call(null, coll);
    this__10211.__hash = h__2173__auto____10213;
    return h__2173__auto____10213
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10214 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__10215 = this;
  var this__10216 = this;
  return cljs.core.pr_str.call(null, this__10216)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10217 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10218 = this;
  return cljs.core.first.call(null, this__10218.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10219 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__10219.nodes, this__10219.i, cljs.core.next.call(null, this__10219.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10220 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10221 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__10221.nodes, this__10221.i, this__10221.s, this__10221.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10222 = this;
  return this__10222.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10223 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10223.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__10230 = nodes.length;
      var j__10231 = i;
      while(true) {
        if(j__10231 < len__10230) {
          var temp__3971__auto____10232 = nodes[j__10231];
          if(cljs.core.truth_(temp__3971__auto____10232)) {
            var nj__10233 = temp__3971__auto____10232;
            var temp__3971__auto____10234 = nj__10233.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____10234)) {
              var ns__10235 = temp__3971__auto____10234;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__10231 + 1, ns__10235, null)
            }else {
              var G__10236 = j__10231 + 1;
              j__10231 = G__10236;
              continue
            }
          }else {
            var G__10237 = j__10231 + 1;
            j__10231 = G__10237;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
void 0;
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10240 = this;
  return new cljs.core.TransientHashMap({}, this__10240.root, this__10240.cnt, this__10240.has_nil_QMARK_, this__10240.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10241 = this;
  var h__2173__auto____10242 = this__10241.__hash;
  if(!(h__2173__auto____10242 == null)) {
    return h__2173__auto____10242
  }else {
    var h__2173__auto____10243 = cljs.core.hash_imap.call(null, coll);
    this__10241.__hash = h__2173__auto____10243;
    return h__2173__auto____10243
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10244 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10245 = this;
  if(k == null) {
    if(this__10245.has_nil_QMARK_) {
      return this__10245.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__10245.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__10245.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10246 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____10247 = this__10246.has_nil_QMARK_;
      if(and__3822__auto____10247) {
        return v === this__10246.nil_val
      }else {
        return and__3822__auto____10247
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__10246.meta, this__10246.has_nil_QMARK_ ? this__10246.cnt : this__10246.cnt + 1, this__10246.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___10248 = new cljs.core.Box(false);
    var new_root__10249 = (this__10246.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__10246.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___10248);
    if(new_root__10249 === this__10246.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__10246.meta, added_leaf_QMARK___10248.val ? this__10246.cnt + 1 : this__10246.cnt, new_root__10249, this__10246.has_nil_QMARK_, this__10246.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10250 = this;
  if(k == null) {
    return this__10250.has_nil_QMARK_
  }else {
    if(this__10250.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__10250.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__10273 = null;
  var G__10273__2 = function(this_sym10251, k) {
    var this__10253 = this;
    var this_sym10251__10254 = this;
    var coll__10255 = this_sym10251__10254;
    return coll__10255.cljs$core$ILookup$_lookup$arity$2(coll__10255, k)
  };
  var G__10273__3 = function(this_sym10252, k, not_found) {
    var this__10253 = this;
    var this_sym10252__10256 = this;
    var coll__10257 = this_sym10252__10256;
    return coll__10257.cljs$core$ILookup$_lookup$arity$3(coll__10257, k, not_found)
  };
  G__10273 = function(this_sym10252, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10273__2.call(this, this_sym10252, k);
      case 3:
        return G__10273__3.call(this, this_sym10252, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10273
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym10238, args10239) {
  var this__10258 = this;
  return this_sym10238.call.apply(this_sym10238, [this_sym10238].concat(args10239.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10259 = this;
  var init__10260 = this__10259.has_nil_QMARK_ ? f.call(null, init, null, this__10259.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__10260)) {
    return cljs.core.deref.call(null, init__10260)
  }else {
    if(!(this__10259.root == null)) {
      return this__10259.root.kv_reduce(f, init__10260)
    }else {
      if("\ufdd0'else") {
        return init__10260
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10261 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__10262 = this;
  var this__10263 = this;
  return cljs.core.pr_str.call(null, this__10263)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10264 = this;
  if(this__10264.cnt > 0) {
    var s__10265 = !(this__10264.root == null) ? this__10264.root.inode_seq() : null;
    if(this__10264.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__10264.nil_val], true), s__10265)
    }else {
      return s__10265
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10266 = this;
  return this__10266.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10267 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10268 = this;
  return new cljs.core.PersistentHashMap(meta, this__10268.cnt, this__10268.root, this__10268.has_nil_QMARK_, this__10268.nil_val, this__10268.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10269 = this;
  return this__10269.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10270 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__10270.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10271 = this;
  if(k == null) {
    if(this__10271.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__10271.meta, this__10271.cnt - 1, this__10271.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__10271.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__10272 = this__10271.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__10272 === this__10271.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__10271.meta, this__10271.cnt - 1, new_root__10272, this__10271.has_nil_QMARK_, this__10271.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__10274 = ks.length;
  var i__10275 = 0;
  var out__10276 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__10275 < len__10274) {
      var G__10277 = i__10275 + 1;
      var G__10278 = cljs.core.assoc_BANG_.call(null, out__10276, ks[i__10275], vs[i__10275]);
      i__10275 = G__10277;
      out__10276 = G__10278;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10276)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__10279 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10280 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__10281 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10282 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__10283 = this;
  if(k == null) {
    if(this__10283.has_nil_QMARK_) {
      return this__10283.nil_val
    }else {
      return null
    }
  }else {
    if(this__10283.root == null) {
      return null
    }else {
      return this__10283.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__10284 = this;
  if(k == null) {
    if(this__10284.has_nil_QMARK_) {
      return this__10284.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__10284.root == null) {
      return not_found
    }else {
      return this__10284.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10285 = this;
  if(this__10285.edit) {
    return this__10285.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__10286 = this;
  var tcoll__10287 = this;
  if(this__10286.edit) {
    if(function() {
      var G__10288__10289 = o;
      if(G__10288__10289) {
        if(function() {
          var or__3824__auto____10290 = G__10288__10289.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____10290) {
            return or__3824__auto____10290
          }else {
            return G__10288__10289.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__10288__10289.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10288__10289)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10288__10289)
      }
    }()) {
      return tcoll__10287.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__10291 = cljs.core.seq.call(null, o);
      var tcoll__10292 = tcoll__10287;
      while(true) {
        var temp__3971__auto____10293 = cljs.core.first.call(null, es__10291);
        if(cljs.core.truth_(temp__3971__auto____10293)) {
          var e__10294 = temp__3971__auto____10293;
          var G__10305 = cljs.core.next.call(null, es__10291);
          var G__10306 = tcoll__10292.assoc_BANG_(cljs.core.key.call(null, e__10294), cljs.core.val.call(null, e__10294));
          es__10291 = G__10305;
          tcoll__10292 = G__10306;
          continue
        }else {
          return tcoll__10292
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__10295 = this;
  var tcoll__10296 = this;
  if(this__10295.edit) {
    if(k == null) {
      if(this__10295.nil_val === v) {
      }else {
        this__10295.nil_val = v
      }
      if(this__10295.has_nil_QMARK_) {
      }else {
        this__10295.count = this__10295.count + 1;
        this__10295.has_nil_QMARK_ = true
      }
      return tcoll__10296
    }else {
      var added_leaf_QMARK___10297 = new cljs.core.Box(false);
      var node__10298 = (this__10295.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__10295.root).inode_assoc_BANG_(this__10295.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___10297);
      if(node__10298 === this__10295.root) {
      }else {
        this__10295.root = node__10298
      }
      if(added_leaf_QMARK___10297.val) {
        this__10295.count = this__10295.count + 1
      }else {
      }
      return tcoll__10296
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__10299 = this;
  var tcoll__10300 = this;
  if(this__10299.edit) {
    if(k == null) {
      if(this__10299.has_nil_QMARK_) {
        this__10299.has_nil_QMARK_ = false;
        this__10299.nil_val = null;
        this__10299.count = this__10299.count - 1;
        return tcoll__10300
      }else {
        return tcoll__10300
      }
    }else {
      if(this__10299.root == null) {
        return tcoll__10300
      }else {
        var removed_leaf_QMARK___10301 = new cljs.core.Box(false);
        var node__10302 = this__10299.root.inode_without_BANG_(this__10299.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___10301);
        if(node__10302 === this__10299.root) {
        }else {
          this__10299.root = node__10302
        }
        if(cljs.core.truth_(removed_leaf_QMARK___10301[0])) {
          this__10299.count = this__10299.count - 1
        }else {
        }
        return tcoll__10300
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__10303 = this;
  var tcoll__10304 = this;
  if(this__10303.edit) {
    this__10303.edit = null;
    return new cljs.core.PersistentHashMap(null, this__10303.count, this__10303.root, this__10303.has_nil_QMARK_, this__10303.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__10309 = node;
  var stack__10310 = stack;
  while(true) {
    if(!(t__10309 == null)) {
      var G__10311 = ascending_QMARK_ ? t__10309.left : t__10309.right;
      var G__10312 = cljs.core.conj.call(null, stack__10310, t__10309);
      t__10309 = G__10311;
      stack__10310 = G__10312;
      continue
    }else {
      return stack__10310
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10313 = this;
  var h__2173__auto____10314 = this__10313.__hash;
  if(!(h__2173__auto____10314 == null)) {
    return h__2173__auto____10314
  }else {
    var h__2173__auto____10315 = cljs.core.hash_coll.call(null, coll);
    this__10313.__hash = h__2173__auto____10315;
    return h__2173__auto____10315
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10316 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__10317 = this;
  var this__10318 = this;
  return cljs.core.pr_str.call(null, this__10318)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10319 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10320 = this;
  if(this__10320.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__10320.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__10321 = this;
  return cljs.core.peek.call(null, this__10321.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__10322 = this;
  var t__10323 = cljs.core.first.call(null, this__10322.stack);
  var next_stack__10324 = cljs.core.tree_map_seq_push.call(null, this__10322.ascending_QMARK_ ? t__10323.right : t__10323.left, cljs.core.next.call(null, this__10322.stack), this__10322.ascending_QMARK_);
  if(!(next_stack__10324 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__10324, this__10322.ascending_QMARK_, this__10322.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10325 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10326 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__10326.stack, this__10326.ascending_QMARK_, this__10326.cnt, this__10326.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10327 = this;
  return this__10327.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
void 0;
void 0;
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____10329 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____10329) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____10329
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____10331 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____10331) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____10331
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__10335 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__10335)) {
    return cljs.core.deref.call(null, init__10335)
  }else {
    var init__10336 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__10335) : init__10335;
    if(cljs.core.reduced_QMARK_.call(null, init__10336)) {
      return cljs.core.deref.call(null, init__10336)
    }else {
      var init__10337 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__10336) : init__10336;
      if(cljs.core.reduced_QMARK_.call(null, init__10337)) {
        return cljs.core.deref.call(null, init__10337)
      }else {
        return init__10337
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10340 = this;
  var h__2173__auto____10341 = this__10340.__hash;
  if(!(h__2173__auto____10341 == null)) {
    return h__2173__auto____10341
  }else {
    var h__2173__auto____10342 = cljs.core.hash_coll.call(null, coll);
    this__10340.__hash = h__2173__auto____10342;
    return h__2173__auto____10342
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__10343 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__10344 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__10345 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__10345.key, this__10345.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__10393 = null;
  var G__10393__2 = function(this_sym10346, k) {
    var this__10348 = this;
    var this_sym10346__10349 = this;
    var node__10350 = this_sym10346__10349;
    return node__10350.cljs$core$ILookup$_lookup$arity$2(node__10350, k)
  };
  var G__10393__3 = function(this_sym10347, k, not_found) {
    var this__10348 = this;
    var this_sym10347__10351 = this;
    var node__10352 = this_sym10347__10351;
    return node__10352.cljs$core$ILookup$_lookup$arity$3(node__10352, k, not_found)
  };
  G__10393 = function(this_sym10347, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10393__2.call(this, this_sym10347, k);
      case 3:
        return G__10393__3.call(this, this_sym10347, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10393
}();
cljs.core.BlackNode.prototype.apply = function(this_sym10338, args10339) {
  var this__10353 = this;
  return this_sym10338.call.apply(this_sym10338, [this_sym10338].concat(args10339.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__10354 = this;
  return cljs.core.PersistentVector.fromArray([this__10354.key, this__10354.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__10355 = this;
  return this__10355.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__10356 = this;
  return this__10356.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__10357 = this;
  var node__10358 = this;
  return ins.balance_right(node__10358)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__10359 = this;
  var node__10360 = this;
  return new cljs.core.RedNode(this__10359.key, this__10359.val, this__10359.left, this__10359.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__10361 = this;
  var node__10362 = this;
  return cljs.core.balance_right_del.call(null, this__10361.key, this__10361.val, this__10361.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__10363 = this;
  var node__10364 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__10365 = this;
  var node__10366 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__10366, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__10367 = this;
  var node__10368 = this;
  return cljs.core.balance_left_del.call(null, this__10367.key, this__10367.val, del, this__10367.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__10369 = this;
  var node__10370 = this;
  return ins.balance_left(node__10370)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__10371 = this;
  var node__10372 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__10372, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__10394 = null;
  var G__10394__0 = function() {
    var this__10373 = this;
    var this__10375 = this;
    return cljs.core.pr_str.call(null, this__10375)
  };
  G__10394 = function() {
    switch(arguments.length) {
      case 0:
        return G__10394__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10394
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__10376 = this;
  var node__10377 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__10377, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__10378 = this;
  var node__10379 = this;
  return node__10379
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__10380 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__10381 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__10382 = this;
  return cljs.core.list.call(null, this__10382.key, this__10382.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__10383 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__10384 = this;
  return this__10384.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__10385 = this;
  return cljs.core.PersistentVector.fromArray([this__10385.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__10386 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__10386.key, this__10386.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10387 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__10388 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__10388.key, this__10388.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__10389 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__10390 = this;
  if(n === 0) {
    return this__10390.key
  }else {
    if(n === 1) {
      return this__10390.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__10391 = this;
  if(n === 0) {
    return this__10391.key
  }else {
    if(n === 1) {
      return this__10391.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__10392 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10397 = this;
  var h__2173__auto____10398 = this__10397.__hash;
  if(!(h__2173__auto____10398 == null)) {
    return h__2173__auto____10398
  }else {
    var h__2173__auto____10399 = cljs.core.hash_coll.call(null, coll);
    this__10397.__hash = h__2173__auto____10399;
    return h__2173__auto____10399
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__10400 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__10401 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__10402 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__10402.key, this__10402.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__10450 = null;
  var G__10450__2 = function(this_sym10403, k) {
    var this__10405 = this;
    var this_sym10403__10406 = this;
    var node__10407 = this_sym10403__10406;
    return node__10407.cljs$core$ILookup$_lookup$arity$2(node__10407, k)
  };
  var G__10450__3 = function(this_sym10404, k, not_found) {
    var this__10405 = this;
    var this_sym10404__10408 = this;
    var node__10409 = this_sym10404__10408;
    return node__10409.cljs$core$ILookup$_lookup$arity$3(node__10409, k, not_found)
  };
  G__10450 = function(this_sym10404, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10450__2.call(this, this_sym10404, k);
      case 3:
        return G__10450__3.call(this, this_sym10404, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10450
}();
cljs.core.RedNode.prototype.apply = function(this_sym10395, args10396) {
  var this__10410 = this;
  return this_sym10395.call.apply(this_sym10395, [this_sym10395].concat(args10396.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__10411 = this;
  return cljs.core.PersistentVector.fromArray([this__10411.key, this__10411.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__10412 = this;
  return this__10412.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__10413 = this;
  return this__10413.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__10414 = this;
  var node__10415 = this;
  return new cljs.core.RedNode(this__10414.key, this__10414.val, this__10414.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__10416 = this;
  var node__10417 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__10418 = this;
  var node__10419 = this;
  return new cljs.core.RedNode(this__10418.key, this__10418.val, this__10418.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__10420 = this;
  var node__10421 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__10422 = this;
  var node__10423 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__10423, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__10424 = this;
  var node__10425 = this;
  return new cljs.core.RedNode(this__10424.key, this__10424.val, del, this__10424.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__10426 = this;
  var node__10427 = this;
  return new cljs.core.RedNode(this__10426.key, this__10426.val, ins, this__10426.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__10428 = this;
  var node__10429 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10428.left)) {
    return new cljs.core.RedNode(this__10428.key, this__10428.val, this__10428.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__10428.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10428.right)) {
      return new cljs.core.RedNode(this__10428.right.key, this__10428.right.val, new cljs.core.BlackNode(this__10428.key, this__10428.val, this__10428.left, this__10428.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__10428.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__10429, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__10451 = null;
  var G__10451__0 = function() {
    var this__10430 = this;
    var this__10432 = this;
    return cljs.core.pr_str.call(null, this__10432)
  };
  G__10451 = function() {
    switch(arguments.length) {
      case 0:
        return G__10451__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10451
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__10433 = this;
  var node__10434 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10433.right)) {
    return new cljs.core.RedNode(this__10433.key, this__10433.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__10433.left, null), this__10433.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10433.left)) {
      return new cljs.core.RedNode(this__10433.left.key, this__10433.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__10433.left.left, null), new cljs.core.BlackNode(this__10433.key, this__10433.val, this__10433.left.right, this__10433.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__10434, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__10435 = this;
  var node__10436 = this;
  return new cljs.core.BlackNode(this__10435.key, this__10435.val, this__10435.left, this__10435.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__10437 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__10438 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__10439 = this;
  return cljs.core.list.call(null, this__10439.key, this__10439.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__10440 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__10441 = this;
  return this__10441.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__10442 = this;
  return cljs.core.PersistentVector.fromArray([this__10442.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__10443 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__10443.key, this__10443.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10444 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__10445 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__10445.key, this__10445.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__10446 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__10447 = this;
  if(n === 0) {
    return this__10447.key
  }else {
    if(n === 1) {
      return this__10447.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__10448 = this;
  if(n === 0) {
    return this__10448.key
  }else {
    if(n === 1) {
      return this__10448.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__10449 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__10455 = comp.call(null, k, tree.key);
    if(c__10455 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__10455 < 0) {
        var ins__10456 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__10456 == null)) {
          return tree.add_left(ins__10456)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__10457 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__10457 == null)) {
            return tree.add_right(ins__10457)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__10460 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__10460)) {
            return new cljs.core.RedNode(app__10460.key, app__10460.val, new cljs.core.RedNode(left.key, left.val, left.left, app__10460.left, null), new cljs.core.RedNode(right.key, right.val, app__10460.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__10460, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__10461 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__10461)) {
              return new cljs.core.RedNode(app__10461.key, app__10461.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__10461.left, null), new cljs.core.BlackNode(right.key, right.val, app__10461.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__10461, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__10467 = comp.call(null, k, tree.key);
    if(c__10467 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__10467 < 0) {
        var del__10468 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____10469 = !(del__10468 == null);
          if(or__3824__auto____10469) {
            return or__3824__auto____10469
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__10468, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__10468, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__10470 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____10471 = !(del__10470 == null);
            if(or__3824__auto____10471) {
              return or__3824__auto____10471
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__10470)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__10470, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__10474 = tree.key;
  var c__10475 = comp.call(null, k, tk__10474);
  if(c__10475 === 0) {
    return tree.replace(tk__10474, v, tree.left, tree.right)
  }else {
    if(c__10475 < 0) {
      return tree.replace(tk__10474, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__10474, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
void 0;
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10478 = this;
  var h__2173__auto____10479 = this__10478.__hash;
  if(!(h__2173__auto____10479 == null)) {
    return h__2173__auto____10479
  }else {
    var h__2173__auto____10480 = cljs.core.hash_imap.call(null, coll);
    this__10478.__hash = h__2173__auto____10480;
    return h__2173__auto____10480
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10481 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10482 = this;
  var n__10483 = coll.entry_at(k);
  if(!(n__10483 == null)) {
    return n__10483.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10484 = this;
  var found__10485 = [null];
  var t__10486 = cljs.core.tree_map_add.call(null, this__10484.comp, this__10484.tree, k, v, found__10485);
  if(t__10486 == null) {
    var found_node__10487 = cljs.core.nth.call(null, found__10485, 0);
    if(cljs.core._EQ_.call(null, v, found_node__10487.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__10484.comp, cljs.core.tree_map_replace.call(null, this__10484.comp, this__10484.tree, k, v), this__10484.cnt, this__10484.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__10484.comp, t__10486.blacken(), this__10484.cnt + 1, this__10484.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10488 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__10522 = null;
  var G__10522__2 = function(this_sym10489, k) {
    var this__10491 = this;
    var this_sym10489__10492 = this;
    var coll__10493 = this_sym10489__10492;
    return coll__10493.cljs$core$ILookup$_lookup$arity$2(coll__10493, k)
  };
  var G__10522__3 = function(this_sym10490, k, not_found) {
    var this__10491 = this;
    var this_sym10490__10494 = this;
    var coll__10495 = this_sym10490__10494;
    return coll__10495.cljs$core$ILookup$_lookup$arity$3(coll__10495, k, not_found)
  };
  G__10522 = function(this_sym10490, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10522__2.call(this, this_sym10490, k);
      case 3:
        return G__10522__3.call(this, this_sym10490, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10522
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym10476, args10477) {
  var this__10496 = this;
  return this_sym10476.call.apply(this_sym10476, [this_sym10476].concat(args10477.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10497 = this;
  if(!(this__10497.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__10497.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10498 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10499 = this;
  if(this__10499.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10499.tree, false, this__10499.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__10500 = this;
  var this__10501 = this;
  return cljs.core.pr_str.call(null, this__10501)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__10502 = this;
  var coll__10503 = this;
  var t__10504 = this__10502.tree;
  while(true) {
    if(!(t__10504 == null)) {
      var c__10505 = this__10502.comp.call(null, k, t__10504.key);
      if(c__10505 === 0) {
        return t__10504
      }else {
        if(c__10505 < 0) {
          var G__10523 = t__10504.left;
          t__10504 = G__10523;
          continue
        }else {
          if("\ufdd0'else") {
            var G__10524 = t__10504.right;
            t__10504 = G__10524;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10506 = this;
  if(this__10506.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10506.tree, ascending_QMARK_, this__10506.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10507 = this;
  if(this__10507.cnt > 0) {
    var stack__10508 = null;
    var t__10509 = this__10507.tree;
    while(true) {
      if(!(t__10509 == null)) {
        var c__10510 = this__10507.comp.call(null, k, t__10509.key);
        if(c__10510 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__10508, t__10509), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__10510 < 0) {
              var G__10525 = cljs.core.conj.call(null, stack__10508, t__10509);
              var G__10526 = t__10509.left;
              stack__10508 = G__10525;
              t__10509 = G__10526;
              continue
            }else {
              var G__10527 = stack__10508;
              var G__10528 = t__10509.right;
              stack__10508 = G__10527;
              t__10509 = G__10528;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__10510 > 0) {
                var G__10529 = cljs.core.conj.call(null, stack__10508, t__10509);
                var G__10530 = t__10509.right;
                stack__10508 = G__10529;
                t__10509 = G__10530;
                continue
              }else {
                var G__10531 = stack__10508;
                var G__10532 = t__10509.left;
                stack__10508 = G__10531;
                t__10509 = G__10532;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__10508 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__10508, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10511 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10512 = this;
  return this__10512.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10513 = this;
  if(this__10513.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10513.tree, true, this__10513.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10514 = this;
  return this__10514.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10515 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10516 = this;
  return new cljs.core.PersistentTreeMap(this__10516.comp, this__10516.tree, this__10516.cnt, meta, this__10516.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10517 = this;
  return this__10517.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10518 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__10518.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10519 = this;
  var found__10520 = [null];
  var t__10521 = cljs.core.tree_map_remove.call(null, this__10519.comp, this__10519.tree, k, found__10520);
  if(t__10521 == null) {
    if(cljs.core.nth.call(null, found__10520, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__10519.comp, null, 0, this__10519.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__10519.comp, t__10521.blacken(), this__10519.cnt - 1, this__10519.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__10535 = cljs.core.seq.call(null, keyvals);
    var out__10536 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__10535) {
        var G__10537 = cljs.core.nnext.call(null, in__10535);
        var G__10538 = cljs.core.assoc_BANG_.call(null, out__10536, cljs.core.first.call(null, in__10535), cljs.core.second.call(null, in__10535));
        in__10535 = G__10537;
        out__10536 = G__10538;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__10536)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__10539) {
    var keyvals = cljs.core.seq(arglist__10539);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__10540) {
    var keyvals = cljs.core.seq(arglist__10540);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__10543 = cljs.core.seq.call(null, keyvals);
    var out__10544 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__10543) {
        var G__10545 = cljs.core.nnext.call(null, in__10543);
        var G__10546 = cljs.core.assoc.call(null, out__10544, cljs.core.first.call(null, in__10543), cljs.core.second.call(null, in__10543));
        in__10543 = G__10545;
        out__10544 = G__10546;
        continue
      }else {
        return out__10544
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__10547) {
    var keyvals = cljs.core.seq(arglist__10547);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__10550 = cljs.core.seq.call(null, keyvals);
    var out__10551 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__10550) {
        var G__10552 = cljs.core.nnext.call(null, in__10550);
        var G__10553 = cljs.core.assoc.call(null, out__10551, cljs.core.first.call(null, in__10550), cljs.core.second.call(null, in__10550));
        in__10550 = G__10552;
        out__10551 = G__10553;
        continue
      }else {
        return out__10551
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__10554) {
    var comparator = cljs.core.first(arglist__10554);
    var keyvals = cljs.core.rest(arglist__10554);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__10555_SHARP_, p2__10556_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____10558 = p1__10555_SHARP_;
          if(cljs.core.truth_(or__3824__auto____10558)) {
            return or__3824__auto____10558
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__10556_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__10559) {
    var maps = cljs.core.seq(arglist__10559);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__10567 = function(m, e) {
        var k__10565 = cljs.core.first.call(null, e);
        var v__10566 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__10565)) {
          return cljs.core.assoc.call(null, m, k__10565, f.call(null, cljs.core._lookup.call(null, m, k__10565, null), v__10566))
        }else {
          return cljs.core.assoc.call(null, m, k__10565, v__10566)
        }
      };
      var merge2__10569 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__10567, function() {
          var or__3824__auto____10568 = m1;
          if(cljs.core.truth_(or__3824__auto____10568)) {
            return or__3824__auto____10568
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__10569, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__10570) {
    var f = cljs.core.first(arglist__10570);
    var maps = cljs.core.rest(arglist__10570);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__10575 = cljs.core.ObjMap.EMPTY;
  var keys__10576 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__10576) {
      var key__10577 = cljs.core.first.call(null, keys__10576);
      var entry__10578 = cljs.core._lookup.call(null, map, key__10577, "\ufdd0'user/not-found");
      var G__10579 = cljs.core.not_EQ_.call(null, entry__10578, "\ufdd0'user/not-found") ? cljs.core.assoc.call(null, ret__10575, key__10577, entry__10578) : ret__10575;
      var G__10580 = cljs.core.next.call(null, keys__10576);
      ret__10575 = G__10579;
      keys__10576 = G__10580;
      continue
    }else {
      return ret__10575
    }
    break
  }
};
void 0;
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10584 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__10584.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10585 = this;
  var h__2173__auto____10586 = this__10585.__hash;
  if(!(h__2173__auto____10586 == null)) {
    return h__2173__auto____10586
  }else {
    var h__2173__auto____10587 = cljs.core.hash_iset.call(null, coll);
    this__10585.__hash = h__2173__auto____10587;
    return h__2173__auto____10587
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10588 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10589 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10589.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__10610 = null;
  var G__10610__2 = function(this_sym10590, k) {
    var this__10592 = this;
    var this_sym10590__10593 = this;
    var coll__10594 = this_sym10590__10593;
    return coll__10594.cljs$core$ILookup$_lookup$arity$2(coll__10594, k)
  };
  var G__10610__3 = function(this_sym10591, k, not_found) {
    var this__10592 = this;
    var this_sym10591__10595 = this;
    var coll__10596 = this_sym10591__10595;
    return coll__10596.cljs$core$ILookup$_lookup$arity$3(coll__10596, k, not_found)
  };
  G__10610 = function(this_sym10591, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10610__2.call(this, this_sym10591, k);
      case 3:
        return G__10610__3.call(this, this_sym10591, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10610
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym10582, args10583) {
  var this__10597 = this;
  return this_sym10582.call.apply(this_sym10582, [this_sym10582].concat(args10583.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10598 = this;
  return new cljs.core.PersistentHashSet(this__10598.meta, cljs.core.assoc.call(null, this__10598.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__10599 = this;
  var this__10600 = this;
  return cljs.core.pr_str.call(null, this__10600)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10601 = this;
  return cljs.core.keys.call(null, this__10601.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10602 = this;
  return new cljs.core.PersistentHashSet(this__10602.meta, cljs.core.dissoc.call(null, this__10602.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10603 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10604 = this;
  var and__3822__auto____10605 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____10605) {
    var and__3822__auto____10606 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____10606) {
      return cljs.core.every_QMARK_.call(null, function(p1__10581_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10581_SHARP_)
      }, other)
    }else {
      return and__3822__auto____10606
    }
  }else {
    return and__3822__auto____10605
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10607 = this;
  return new cljs.core.PersistentHashSet(meta, this__10607.hash_map, this__10607.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10608 = this;
  return this__10608.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10609 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__10609.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__10628 = null;
  var G__10628__2 = function(this_sym10614, k) {
    var this__10616 = this;
    var this_sym10614__10617 = this;
    var tcoll__10618 = this_sym10614__10617;
    if(cljs.core._lookup.call(null, this__10616.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__10628__3 = function(this_sym10615, k, not_found) {
    var this__10616 = this;
    var this_sym10615__10619 = this;
    var tcoll__10620 = this_sym10615__10619;
    if(cljs.core._lookup.call(null, this__10616.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__10628 = function(this_sym10615, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10628__2.call(this, this_sym10615, k);
      case 3:
        return G__10628__3.call(this, this_sym10615, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10628
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym10612, args10613) {
  var this__10621 = this;
  return this_sym10612.call.apply(this_sym10612, [this_sym10612].concat(args10613.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__10622 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__10623 = this;
  if(cljs.core._lookup.call(null, this__10623.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__10624 = this;
  return cljs.core.count.call(null, this__10624.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__10625 = this;
  this__10625.transient_map = cljs.core.dissoc_BANG_.call(null, this__10625.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10626 = this;
  this__10626.transient_map = cljs.core.assoc_BANG_.call(null, this__10626.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10627 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__10627.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10631 = this;
  var h__2173__auto____10632 = this__10631.__hash;
  if(!(h__2173__auto____10632 == null)) {
    return h__2173__auto____10632
  }else {
    var h__2173__auto____10633 = cljs.core.hash_iset.call(null, coll);
    this__10631.__hash = h__2173__auto____10633;
    return h__2173__auto____10633
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10634 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10635 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10635.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__10661 = null;
  var G__10661__2 = function(this_sym10636, k) {
    var this__10638 = this;
    var this_sym10636__10639 = this;
    var coll__10640 = this_sym10636__10639;
    return coll__10640.cljs$core$ILookup$_lookup$arity$2(coll__10640, k)
  };
  var G__10661__3 = function(this_sym10637, k, not_found) {
    var this__10638 = this;
    var this_sym10637__10641 = this;
    var coll__10642 = this_sym10637__10641;
    return coll__10642.cljs$core$ILookup$_lookup$arity$3(coll__10642, k, not_found)
  };
  G__10661 = function(this_sym10637, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10661__2.call(this, this_sym10637, k);
      case 3:
        return G__10661__3.call(this, this_sym10637, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10661
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym10629, args10630) {
  var this__10643 = this;
  return this_sym10629.call.apply(this_sym10629, [this_sym10629].concat(args10630.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10644 = this;
  return new cljs.core.PersistentTreeSet(this__10644.meta, cljs.core.assoc.call(null, this__10644.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10645 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__10645.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__10646 = this;
  var this__10647 = this;
  return cljs.core.pr_str.call(null, this__10647)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10648 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__10648.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10649 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__10649.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10650 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10651 = this;
  return cljs.core._comparator.call(null, this__10651.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10652 = this;
  return cljs.core.keys.call(null, this__10652.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10653 = this;
  return new cljs.core.PersistentTreeSet(this__10653.meta, cljs.core.dissoc.call(null, this__10653.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10654 = this;
  return cljs.core.count.call(null, this__10654.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10655 = this;
  var and__3822__auto____10656 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____10656) {
    var and__3822__auto____10657 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____10657) {
      return cljs.core.every_QMARK_.call(null, function(p1__10611_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10611_SHARP_)
      }, other)
    }else {
      return and__3822__auto____10657
    }
  }else {
    return and__3822__auto____10656
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10658 = this;
  return new cljs.core.PersistentTreeSet(meta, this__10658.tree_map, this__10658.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10659 = this;
  return this__10659.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10660 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__10660.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.set = function set(coll) {
  var in__10664 = cljs.core.seq.call(null, coll);
  var out__10665 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(cljs.core.seq.call(null, in__10664)) {
      var G__10666 = cljs.core.next.call(null, in__10664);
      var G__10667 = cljs.core.conj_BANG_.call(null, out__10665, cljs.core.first.call(null, in__10664));
      in__10664 = G__10666;
      out__10665 = G__10667;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10665)
    }
    break
  }
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__10668) {
    var keys = cljs.core.seq(arglist__10668);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__10670) {
    var comparator = cljs.core.first(arglist__10670);
    var keys = cljs.core.rest(arglist__10670);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__10676 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____10677 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____10677)) {
        var e__10678 = temp__3971__auto____10677;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__10678))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__10676, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__10669_SHARP_) {
      var temp__3971__auto____10679 = cljs.core.find.call(null, smap, p1__10669_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____10679)) {
        var e__10680 = temp__3971__auto____10679;
        return cljs.core.second.call(null, e__10680)
      }else {
        return p1__10669_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__10710 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__10703, seen) {
        while(true) {
          var vec__10704__10705 = p__10703;
          var f__10706 = cljs.core.nth.call(null, vec__10704__10705, 0, null);
          var xs__10707 = vec__10704__10705;
          var temp__3974__auto____10708 = cljs.core.seq.call(null, xs__10707);
          if(temp__3974__auto____10708) {
            var s__10709 = temp__3974__auto____10708;
            if(cljs.core.contains_QMARK_.call(null, seen, f__10706)) {
              var G__10711 = cljs.core.rest.call(null, s__10709);
              var G__10712 = seen;
              p__10703 = G__10711;
              seen = G__10712;
              continue
            }else {
              return cljs.core.cons.call(null, f__10706, step.call(null, cljs.core.rest.call(null, s__10709), cljs.core.conj.call(null, seen, f__10706)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__10710.call(null, coll, cljs.core.set([]))
};
cljs.core.butlast = function butlast(s) {
  var ret__10715 = cljs.core.PersistentVector.EMPTY;
  var s__10716 = s;
  while(true) {
    if(cljs.core.next.call(null, s__10716)) {
      var G__10717 = cljs.core.conj.call(null, ret__10715, cljs.core.first.call(null, s__10716));
      var G__10718 = cljs.core.next.call(null, s__10716);
      ret__10715 = G__10717;
      s__10716 = G__10718;
      continue
    }else {
      return cljs.core.seq.call(null, ret__10715)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____10721 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____10721) {
        return or__3824__auto____10721
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__10722 = x.lastIndexOf("/");
      if(i__10722 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__10722 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____10725 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____10725) {
      return or__3824__auto____10725
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__10726 = x.lastIndexOf("/");
    if(i__10726 > -1) {
      return cljs.core.subs.call(null, x, 2, i__10726)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__10733 = cljs.core.ObjMap.EMPTY;
  var ks__10734 = cljs.core.seq.call(null, keys);
  var vs__10735 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____10736 = ks__10734;
      if(and__3822__auto____10736) {
        return vs__10735
      }else {
        return and__3822__auto____10736
      }
    }()) {
      var G__10737 = cljs.core.assoc.call(null, map__10733, cljs.core.first.call(null, ks__10734), cljs.core.first.call(null, vs__10735));
      var G__10738 = cljs.core.next.call(null, ks__10734);
      var G__10739 = cljs.core.next.call(null, vs__10735);
      map__10733 = G__10737;
      ks__10734 = G__10738;
      vs__10735 = G__10739;
      continue
    }else {
      return map__10733
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__10742__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10727_SHARP_, p2__10728_SHARP_) {
        return max_key.call(null, k, p1__10727_SHARP_, p2__10728_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__10742 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10742__delegate.call(this, k, x, y, more)
    };
    G__10742.cljs$lang$maxFixedArity = 3;
    G__10742.cljs$lang$applyTo = function(arglist__10743) {
      var k = cljs.core.first(arglist__10743);
      var x = cljs.core.first(cljs.core.next(arglist__10743));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10743)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10743)));
      return G__10742__delegate(k, x, y, more)
    };
    G__10742.cljs$lang$arity$variadic = G__10742__delegate;
    return G__10742
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__10744__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10740_SHARP_, p2__10741_SHARP_) {
        return min_key.call(null, k, p1__10740_SHARP_, p2__10741_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__10744 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10744__delegate.call(this, k, x, y, more)
    };
    G__10744.cljs$lang$maxFixedArity = 3;
    G__10744.cljs$lang$applyTo = function(arglist__10745) {
      var k = cljs.core.first(arglist__10745);
      var x = cljs.core.first(cljs.core.next(arglist__10745));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10745)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10745)));
      return G__10744__delegate(k, x, y, more)
    };
    G__10744.cljs$lang$arity$variadic = G__10744__delegate;
    return G__10744
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10748 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10748) {
        var s__10749 = temp__3974__auto____10748;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__10749), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__10749)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10752 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10752) {
      var s__10753 = temp__3974__auto____10752;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__10753)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__10753), take_while.call(null, pred, cljs.core.rest.call(null, s__10753)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__10755 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__10755.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__10767 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.set([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____10768 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____10768)) {
        var vec__10769__10770 = temp__3974__auto____10768;
        var e__10771 = cljs.core.nth.call(null, vec__10769__10770, 0, null);
        var s__10772 = vec__10769__10770;
        if(cljs.core.truth_(include__10767.call(null, e__10771))) {
          return s__10772
        }else {
          return cljs.core.next.call(null, s__10772)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__10767, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____10773 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____10773)) {
      var vec__10774__10775 = temp__3974__auto____10773;
      var e__10776 = cljs.core.nth.call(null, vec__10774__10775, 0, null);
      var s__10777 = vec__10774__10775;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__10776)) ? s__10777 : cljs.core.next.call(null, s__10777))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__10789 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.set([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____10790 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____10790)) {
        var vec__10791__10792 = temp__3974__auto____10790;
        var e__10793 = cljs.core.nth.call(null, vec__10791__10792, 0, null);
        var s__10794 = vec__10791__10792;
        if(cljs.core.truth_(include__10789.call(null, e__10793))) {
          return s__10794
        }else {
          return cljs.core.next.call(null, s__10794)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__10789, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____10795 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____10795)) {
      var vec__10796__10797 = temp__3974__auto____10795;
      var e__10798 = cljs.core.nth.call(null, vec__10796__10797, 0, null);
      var s__10799 = vec__10796__10797;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__10798)) ? s__10799 : cljs.core.next.call(null, s__10799))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__10800 = this;
  var h__2173__auto____10801 = this__10800.__hash;
  if(!(h__2173__auto____10801 == null)) {
    return h__2173__auto____10801
  }else {
    var h__2173__auto____10802 = cljs.core.hash_coll.call(null, rng);
    this__10800.__hash = h__2173__auto____10802;
    return h__2173__auto____10802
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__10803 = this;
  if(this__10803.step > 0) {
    if(this__10803.start + this__10803.step < this__10803.end) {
      return new cljs.core.Range(this__10803.meta, this__10803.start + this__10803.step, this__10803.end, this__10803.step, null)
    }else {
      return null
    }
  }else {
    if(this__10803.start + this__10803.step > this__10803.end) {
      return new cljs.core.Range(this__10803.meta, this__10803.start + this__10803.step, this__10803.end, this__10803.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__10804 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__10805 = this;
  var this__10806 = this;
  return cljs.core.pr_str.call(null, this__10806)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__10807 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__10808 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__10809 = this;
  if(this__10809.step > 0) {
    if(this__10809.start < this__10809.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__10809.start > this__10809.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__10810 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__10810.end - this__10810.start) / this__10810.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__10811 = this;
  return this__10811.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__10812 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__10812.meta, this__10812.start + this__10812.step, this__10812.end, this__10812.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__10813 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__10814 = this;
  return new cljs.core.Range(meta, this__10814.start, this__10814.end, this__10814.step, this__10814.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__10815 = this;
  return this__10815.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__10816 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__10816.start + n * this__10816.step
  }else {
    if(function() {
      var and__3822__auto____10817 = this__10816.start > this__10816.end;
      if(and__3822__auto____10817) {
        return this__10816.step === 0
      }else {
        return and__3822__auto____10817
      }
    }()) {
      return this__10816.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__10818 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__10818.start + n * this__10818.step
  }else {
    if(function() {
      var and__3822__auto____10819 = this__10818.start > this__10818.end;
      if(and__3822__auto____10819) {
        return this__10818.step === 0
      }else {
        return and__3822__auto____10819
      }
    }()) {
      return this__10818.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__10820 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10820.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10823 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10823) {
      var s__10824 = temp__3974__auto____10823;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__10824), take_nth.call(null, n, cljs.core.drop.call(null, n, s__10824)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10831 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10831) {
      var s__10832 = temp__3974__auto____10831;
      var fst__10833 = cljs.core.first.call(null, s__10832);
      var fv__10834 = f.call(null, fst__10833);
      var run__10835 = cljs.core.cons.call(null, fst__10833, cljs.core.take_while.call(null, function(p1__10825_SHARP_) {
        return cljs.core._EQ_.call(null, fv__10834, f.call(null, p1__10825_SHARP_))
      }, cljs.core.next.call(null, s__10832)));
      return cljs.core.cons.call(null, run__10835, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__10835), s__10832))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____10850 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____10850) {
        var s__10851 = temp__3971__auto____10850;
        return reductions.call(null, f, cljs.core.first.call(null, s__10851), cljs.core.rest.call(null, s__10851))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10852 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10852) {
        var s__10853 = temp__3974__auto____10852;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__10853)), cljs.core.rest.call(null, s__10853))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__10856 = null;
      var G__10856__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__10856__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__10856__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__10856__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__10856__4 = function() {
        var G__10857__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__10857 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10857__delegate.call(this, x, y, z, args)
        };
        G__10857.cljs$lang$maxFixedArity = 3;
        G__10857.cljs$lang$applyTo = function(arglist__10858) {
          var x = cljs.core.first(arglist__10858);
          var y = cljs.core.first(cljs.core.next(arglist__10858));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10858)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10858)));
          return G__10857__delegate(x, y, z, args)
        };
        G__10857.cljs$lang$arity$variadic = G__10857__delegate;
        return G__10857
      }();
      G__10856 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10856__0.call(this);
          case 1:
            return G__10856__1.call(this, x);
          case 2:
            return G__10856__2.call(this, x, y);
          case 3:
            return G__10856__3.call(this, x, y, z);
          default:
            return G__10856__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10856.cljs$lang$maxFixedArity = 3;
      G__10856.cljs$lang$applyTo = G__10856__4.cljs$lang$applyTo;
      return G__10856
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__10859 = null;
      var G__10859__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__10859__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__10859__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__10859__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__10859__4 = function() {
        var G__10860__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__10860 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10860__delegate.call(this, x, y, z, args)
        };
        G__10860.cljs$lang$maxFixedArity = 3;
        G__10860.cljs$lang$applyTo = function(arglist__10861) {
          var x = cljs.core.first(arglist__10861);
          var y = cljs.core.first(cljs.core.next(arglist__10861));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10861)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10861)));
          return G__10860__delegate(x, y, z, args)
        };
        G__10860.cljs$lang$arity$variadic = G__10860__delegate;
        return G__10860
      }();
      G__10859 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10859__0.call(this);
          case 1:
            return G__10859__1.call(this, x);
          case 2:
            return G__10859__2.call(this, x, y);
          case 3:
            return G__10859__3.call(this, x, y, z);
          default:
            return G__10859__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10859.cljs$lang$maxFixedArity = 3;
      G__10859.cljs$lang$applyTo = G__10859__4.cljs$lang$applyTo;
      return G__10859
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__10862 = null;
      var G__10862__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__10862__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__10862__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__10862__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__10862__4 = function() {
        var G__10863__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__10863 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10863__delegate.call(this, x, y, z, args)
        };
        G__10863.cljs$lang$maxFixedArity = 3;
        G__10863.cljs$lang$applyTo = function(arglist__10864) {
          var x = cljs.core.first(arglist__10864);
          var y = cljs.core.first(cljs.core.next(arglist__10864));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10864)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10864)));
          return G__10863__delegate(x, y, z, args)
        };
        G__10863.cljs$lang$arity$variadic = G__10863__delegate;
        return G__10863
      }();
      G__10862 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10862__0.call(this);
          case 1:
            return G__10862__1.call(this, x);
          case 2:
            return G__10862__2.call(this, x, y);
          case 3:
            return G__10862__3.call(this, x, y, z);
          default:
            return G__10862__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10862.cljs$lang$maxFixedArity = 3;
      G__10862.cljs$lang$applyTo = G__10862__4.cljs$lang$applyTo;
      return G__10862
    }()
  };
  var juxt__4 = function() {
    var G__10865__delegate = function(f, g, h, fs) {
      var fs__10855 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__10866 = null;
        var G__10866__0 = function() {
          return cljs.core.reduce.call(null, function(p1__10836_SHARP_, p2__10837_SHARP_) {
            return cljs.core.conj.call(null, p1__10836_SHARP_, p2__10837_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__10855)
        };
        var G__10866__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__10838_SHARP_, p2__10839_SHARP_) {
            return cljs.core.conj.call(null, p1__10838_SHARP_, p2__10839_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__10855)
        };
        var G__10866__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__10840_SHARP_, p2__10841_SHARP_) {
            return cljs.core.conj.call(null, p1__10840_SHARP_, p2__10841_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__10855)
        };
        var G__10866__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__10842_SHARP_, p2__10843_SHARP_) {
            return cljs.core.conj.call(null, p1__10842_SHARP_, p2__10843_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__10855)
        };
        var G__10866__4 = function() {
          var G__10867__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__10844_SHARP_, p2__10845_SHARP_) {
              return cljs.core.conj.call(null, p1__10844_SHARP_, cljs.core.apply.call(null, p2__10845_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__10855)
          };
          var G__10867 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__10867__delegate.call(this, x, y, z, args)
          };
          G__10867.cljs$lang$maxFixedArity = 3;
          G__10867.cljs$lang$applyTo = function(arglist__10868) {
            var x = cljs.core.first(arglist__10868);
            var y = cljs.core.first(cljs.core.next(arglist__10868));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10868)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10868)));
            return G__10867__delegate(x, y, z, args)
          };
          G__10867.cljs$lang$arity$variadic = G__10867__delegate;
          return G__10867
        }();
        G__10866 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__10866__0.call(this);
            case 1:
              return G__10866__1.call(this, x);
            case 2:
              return G__10866__2.call(this, x, y);
            case 3:
              return G__10866__3.call(this, x, y, z);
            default:
              return G__10866__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__10866.cljs$lang$maxFixedArity = 3;
        G__10866.cljs$lang$applyTo = G__10866__4.cljs$lang$applyTo;
        return G__10866
      }()
    };
    var G__10865 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10865__delegate.call(this, f, g, h, fs)
    };
    G__10865.cljs$lang$maxFixedArity = 3;
    G__10865.cljs$lang$applyTo = function(arglist__10869) {
      var f = cljs.core.first(arglist__10869);
      var g = cljs.core.first(cljs.core.next(arglist__10869));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10869)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10869)));
      return G__10865__delegate(f, g, h, fs)
    };
    G__10865.cljs$lang$arity$variadic = G__10865__delegate;
    return G__10865
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__10872 = cljs.core.next.call(null, coll);
        coll = G__10872;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____10871 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____10871) {
          return n > 0
        }else {
          return and__3822__auto____10871
        }
      }())) {
        var G__10873 = n - 1;
        var G__10874 = cljs.core.next.call(null, coll);
        n = G__10873;
        coll = G__10874;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__10876 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__10876), s)) {
    if(cljs.core.count.call(null, matches__10876) === 1) {
      return cljs.core.first.call(null, matches__10876)
    }else {
      return cljs.core.vec.call(null, matches__10876)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__10878 = re.exec(s);
  if(matches__10878 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__10878) === 1) {
      return cljs.core.first.call(null, matches__10878)
    }else {
      return cljs.core.vec.call(null, matches__10878)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__10883 = cljs.core.re_find.call(null, re, s);
  var match_idx__10884 = s.search(re);
  var match_str__10885 = cljs.core.coll_QMARK_.call(null, match_data__10883) ? cljs.core.first.call(null, match_data__10883) : match_data__10883;
  var post_match__10886 = cljs.core.subs.call(null, s, match_idx__10884 + cljs.core.count.call(null, match_str__10885));
  if(cljs.core.truth_(match_data__10883)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__10883, re_seq.call(null, re, post_match__10886))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__10893__10894 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___10895 = cljs.core.nth.call(null, vec__10893__10894, 0, null);
  var flags__10896 = cljs.core.nth.call(null, vec__10893__10894, 1, null);
  var pattern__10897 = cljs.core.nth.call(null, vec__10893__10894, 2, null);
  return new RegExp(pattern__10897, flags__10896)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__10887_SHARP_) {
    return print_one.call(null, p1__10887_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____10907 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____10907)) {
            var and__3822__auto____10911 = function() {
              var G__10908__10909 = obj;
              if(G__10908__10909) {
                if(function() {
                  var or__3824__auto____10910 = G__10908__10909.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____10910) {
                    return or__3824__auto____10910
                  }else {
                    return G__10908__10909.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__10908__10909.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10908__10909)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10908__10909)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____10911)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____10911
            }
          }else {
            return and__3822__auto____10907
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____10912 = !(obj == null);
          if(and__3822__auto____10912) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____10912
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__10913__10914 = obj;
          if(G__10913__10914) {
            if(function() {
              var or__3824__auto____10915 = G__10913__10914.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____10915) {
                return or__3824__auto____10915
              }else {
                return G__10913__10914.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__10913__10914.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__10913__10914)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__10913__10914)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var first_obj__10930 = cljs.core.first.call(null, objs);
  var sb__10931 = new goog.string.StringBuffer;
  var G__10932__10933 = cljs.core.seq.call(null, objs);
  if(G__10932__10933) {
    var obj__10934 = cljs.core.first.call(null, G__10932__10933);
    var G__10932__10935 = G__10932__10933;
    while(true) {
      if(obj__10934 === first_obj__10930) {
      }else {
        sb__10931.append(" ")
      }
      var G__10936__10937 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__10934, opts));
      if(G__10936__10937) {
        var string__10938 = cljs.core.first.call(null, G__10936__10937);
        var G__10936__10939 = G__10936__10937;
        while(true) {
          sb__10931.append(string__10938);
          var temp__3974__auto____10940 = cljs.core.next.call(null, G__10936__10939);
          if(temp__3974__auto____10940) {
            var G__10936__10941 = temp__3974__auto____10940;
            var G__10944 = cljs.core.first.call(null, G__10936__10941);
            var G__10945 = G__10936__10941;
            string__10938 = G__10944;
            G__10936__10939 = G__10945;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____10942 = cljs.core.next.call(null, G__10932__10935);
      if(temp__3974__auto____10942) {
        var G__10932__10943 = temp__3974__auto____10942;
        var G__10946 = cljs.core.first.call(null, G__10932__10943);
        var G__10947 = G__10932__10943;
        obj__10934 = G__10946;
        G__10932__10935 = G__10947;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__10931
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__10949 = cljs.core.pr_sb.call(null, objs, opts);
  sb__10949.append("\n");
  return[cljs.core.str(sb__10949)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var first_obj__10963 = cljs.core.first.call(null, objs);
  var G__10964__10965 = cljs.core.seq.call(null, objs);
  if(G__10964__10965) {
    var obj__10966 = cljs.core.first.call(null, G__10964__10965);
    var G__10964__10967 = G__10964__10965;
    while(true) {
      if(obj__10966 === first_obj__10963) {
      }else {
        cljs.core.string_print.call(null, " ")
      }
      var G__10968__10969 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__10966, opts));
      if(G__10968__10969) {
        var string__10970 = cljs.core.first.call(null, G__10968__10969);
        var G__10968__10971 = G__10968__10969;
        while(true) {
          cljs.core.string_print.call(null, string__10970);
          var temp__3974__auto____10972 = cljs.core.next.call(null, G__10968__10971);
          if(temp__3974__auto____10972) {
            var G__10968__10973 = temp__3974__auto____10972;
            var G__10976 = cljs.core.first.call(null, G__10968__10973);
            var G__10977 = G__10968__10973;
            string__10970 = G__10976;
            G__10968__10971 = G__10977;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____10974 = cljs.core.next.call(null, G__10964__10967);
      if(temp__3974__auto____10974) {
        var G__10964__10975 = temp__3974__auto____10974;
        var G__10978 = cljs.core.first.call(null, G__10964__10975);
        var G__10979 = G__10964__10975;
        obj__10966 = G__10978;
        G__10964__10967 = G__10979;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__10980) {
    var objs = cljs.core.seq(arglist__10980);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__10981) {
    var objs = cljs.core.seq(arglist__10981);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__10982) {
    var objs = cljs.core.seq(arglist__10982);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__10983) {
    var objs = cljs.core.seq(arglist__10983);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__10984) {
    var objs = cljs.core.seq(arglist__10984);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__10985) {
    var objs = cljs.core.seq(arglist__10985);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__10986) {
    var objs = cljs.core.seq(arglist__10986);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__10987) {
    var objs = cljs.core.seq(arglist__10987);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10988 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10988, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10989 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10989, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10990 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10990, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____10991 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____10991)) {
        var nspc__10992 = temp__3974__auto____10991;
        return[cljs.core.str(nspc__10992), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____10993 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____10993)) {
          var nspc__10994 = temp__3974__auto____10993;
          return[cljs.core.str(nspc__10994), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10995 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10995, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__10997 = function(n, len) {
    var ns__10996 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__10996) < len) {
        var G__10999 = [cljs.core.str("0"), cljs.core.str(ns__10996)].join("");
        ns__10996 = G__10999;
        continue
      }else {
        return ns__10996
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__10997.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__10997.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__10997.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__10997.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__10997.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__10997.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10998 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10998, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11000 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__11001 = this;
  var G__11002__11003 = cljs.core.seq.call(null, this__11001.watches);
  if(G__11002__11003) {
    var G__11005__11007 = cljs.core.first.call(null, G__11002__11003);
    var vec__11006__11008 = G__11005__11007;
    var key__11009 = cljs.core.nth.call(null, vec__11006__11008, 0, null);
    var f__11010 = cljs.core.nth.call(null, vec__11006__11008, 1, null);
    var G__11002__11011 = G__11002__11003;
    var G__11005__11012 = G__11005__11007;
    var G__11002__11013 = G__11002__11011;
    while(true) {
      var vec__11014__11015 = G__11005__11012;
      var key__11016 = cljs.core.nth.call(null, vec__11014__11015, 0, null);
      var f__11017 = cljs.core.nth.call(null, vec__11014__11015, 1, null);
      var G__11002__11018 = G__11002__11013;
      f__11017.call(null, key__11016, this$, oldval, newval);
      var temp__3974__auto____11019 = cljs.core.next.call(null, G__11002__11018);
      if(temp__3974__auto____11019) {
        var G__11002__11020 = temp__3974__auto____11019;
        var G__11027 = cljs.core.first.call(null, G__11002__11020);
        var G__11028 = G__11002__11020;
        G__11005__11012 = G__11027;
        G__11002__11013 = G__11028;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__11021 = this;
  return this$.watches = cljs.core.assoc.call(null, this__11021.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__11022 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__11022.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__11023 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__11023.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__11024 = this;
  return this__11024.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__11025 = this;
  return this__11025.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__11026 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__11040__delegate = function(x, p__11029) {
      var map__11035__11036 = p__11029;
      var map__11035__11037 = cljs.core.seq_QMARK_.call(null, map__11035__11036) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11035__11036) : map__11035__11036;
      var validator__11038 = cljs.core._lookup.call(null, map__11035__11037, "\ufdd0'validator", null);
      var meta__11039 = cljs.core._lookup.call(null, map__11035__11037, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__11039, validator__11038, null)
    };
    var G__11040 = function(x, var_args) {
      var p__11029 = null;
      if(goog.isDef(var_args)) {
        p__11029 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11040__delegate.call(this, x, p__11029)
    };
    G__11040.cljs$lang$maxFixedArity = 1;
    G__11040.cljs$lang$applyTo = function(arglist__11041) {
      var x = cljs.core.first(arglist__11041);
      var p__11029 = cljs.core.rest(arglist__11041);
      return G__11040__delegate(x, p__11029)
    };
    G__11040.cljs$lang$arity$variadic = G__11040__delegate;
    return G__11040
  }();
  atom = function(x, var_args) {
    var p__11029 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____11045 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____11045)) {
    var validate__11046 = temp__3974__auto____11045;
    if(cljs.core.truth_(validate__11046.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6394))))].join(""));
    }
  }else {
  }
  var old_value__11047 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__11047, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__11048__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__11048 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__11048__delegate.call(this, a, f, x, y, z, more)
    };
    G__11048.cljs$lang$maxFixedArity = 5;
    G__11048.cljs$lang$applyTo = function(arglist__11049) {
      var a = cljs.core.first(arglist__11049);
      var f = cljs.core.first(cljs.core.next(arglist__11049));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11049)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11049))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11049)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11049)))));
      return G__11048__delegate(a, f, x, y, z, more)
    };
    G__11048.cljs$lang$arity$variadic = G__11048__delegate;
    return G__11048
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__11050) {
    var iref = cljs.core.first(arglist__11050);
    var f = cljs.core.first(cljs.core.next(arglist__11050));
    var args = cljs.core.rest(cljs.core.next(arglist__11050));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__11051 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__11051.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__11052 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__11052.state, function(p__11053) {
    var curr_state__11054 = p__11053;
    var curr_state__11055 = cljs.core.seq_QMARK_.call(null, curr_state__11054) ? cljs.core.apply.call(null, cljs.core.hash_map, curr_state__11054) : curr_state__11054;
    var done__11056 = cljs.core._lookup.call(null, curr_state__11055, "\ufdd0'done", null);
    if(cljs.core.truth_(done__11056)) {
      return curr_state__11055
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__11052.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__11077__11078 = options;
    var map__11077__11079 = cljs.core.seq_QMARK_.call(null, map__11077__11078) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11077__11078) : map__11077__11078;
    var keywordize_keys__11080 = cljs.core._lookup.call(null, map__11077__11079, "\ufdd0'keywordize-keys", null);
    var keyfn__11081 = cljs.core.truth_(keywordize_keys__11080) ? cljs.core.keyword : cljs.core.str;
    var f__11096 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2447__auto____11095 = function iter__11089(s__11090) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__11090__11093 = s__11090;
                    while(true) {
                      if(cljs.core.seq.call(null, s__11090__11093)) {
                        var k__11094 = cljs.core.first.call(null, s__11090__11093);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__11081.call(null, k__11094), thisfn.call(null, x[k__11094])], true), iter__11089.call(null, cljs.core.rest.call(null, s__11090__11093)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2447__auto____11095.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__11096.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__11097) {
    var x = cljs.core.first(arglist__11097);
    var options = cljs.core.rest(arglist__11097);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__11102 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__11106__delegate = function(args) {
      var temp__3971__auto____11103 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__11102), args, null);
      if(cljs.core.truth_(temp__3971__auto____11103)) {
        var v__11104 = temp__3971__auto____11103;
        return v__11104
      }else {
        var ret__11105 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__11102, cljs.core.assoc, args, ret__11105);
        return ret__11105
      }
    };
    var G__11106 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__11106__delegate.call(this, args)
    };
    G__11106.cljs$lang$maxFixedArity = 0;
    G__11106.cljs$lang$applyTo = function(arglist__11107) {
      var args = cljs.core.seq(arglist__11107);
      return G__11106__delegate(args)
    };
    G__11106.cljs$lang$arity$variadic = G__11106__delegate;
    return G__11106
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__11109 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__11109)) {
        var G__11110 = ret__11109;
        f = G__11110;
        continue
      }else {
        return ret__11109
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__11111__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__11111 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11111__delegate.call(this, f, args)
    };
    G__11111.cljs$lang$maxFixedArity = 1;
    G__11111.cljs$lang$applyTo = function(arglist__11112) {
      var f = cljs.core.first(arglist__11112);
      var args = cljs.core.rest(arglist__11112);
      return G__11111__delegate(f, args)
    };
    G__11111.cljs$lang$arity$variadic = G__11111__delegate;
    return G__11111
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__11114 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__11114, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__11114, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____11123 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____11123) {
      return or__3824__auto____11123
    }else {
      var or__3824__auto____11124 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____11124) {
        return or__3824__auto____11124
      }else {
        var and__3822__auto____11125 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____11125) {
          var and__3822__auto____11126 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____11126) {
            var and__3822__auto____11127 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____11127) {
              var ret__11128 = true;
              var i__11129 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____11130 = cljs.core.not.call(null, ret__11128);
                  if(or__3824__auto____11130) {
                    return or__3824__auto____11130
                  }else {
                    return i__11129 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__11128
                }else {
                  var G__11131 = isa_QMARK_.call(null, h, child.call(null, i__11129), parent.call(null, i__11129));
                  var G__11132 = i__11129 + 1;
                  ret__11128 = G__11131;
                  i__11129 = G__11132;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____11127
            }
          }else {
            return and__3822__auto____11126
          }
        }else {
          return and__3822__auto____11125
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6678))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6682))))].join(""));
    }
    var tp__11141 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__11142 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__11143 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__11144 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.set([])), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____11145 = cljs.core.contains_QMARK_.call(null, tp__11141.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__11143.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__11143.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__11141, tag, cljs.core.set([])), parent)), "\ufdd0'ancestors":tf__11144.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__11142, parent, ta__11143), "\ufdd0'descendants":tf__11144.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, 
      h), parent, ta__11143, tag, td__11142)})
    }();
    if(cljs.core.truth_(or__3824__auto____11145)) {
      return or__3824__auto____11145
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__11150 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__11151 = cljs.core.truth_(parentMap__11150.call(null, tag)) ? cljs.core.disj.call(null, parentMap__11150.call(null, tag), parent) : cljs.core.set([]);
    var newParents__11152 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__11151)) ? cljs.core.assoc.call(null, parentMap__11150, tag, childsParents__11151) : cljs.core.dissoc.call(null, parentMap__11150, tag);
    var deriv_seq__11153 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__11133_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__11133_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__11133_SHARP_), cljs.core.second.call(null, p1__11133_SHARP_)))
    }, cljs.core.seq.call(null, newParents__11152)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__11150.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__11134_SHARP_, p2__11135_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__11134_SHARP_, p2__11135_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__11153))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__11161 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____11163 = cljs.core.truth_(function() {
    var and__3822__auto____11162 = xprefs__11161;
    if(cljs.core.truth_(and__3822__auto____11162)) {
      return xprefs__11161.call(null, y)
    }else {
      return and__3822__auto____11162
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____11163)) {
    return or__3824__auto____11163
  }else {
    var or__3824__auto____11165 = function() {
      var ps__11164 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__11164) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__11164), prefer_table))) {
          }else {
          }
          var G__11168 = cljs.core.rest.call(null, ps__11164);
          ps__11164 = G__11168;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____11165)) {
      return or__3824__auto____11165
    }else {
      var or__3824__auto____11167 = function() {
        var ps__11166 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__11166) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__11166), y, prefer_table))) {
            }else {
            }
            var G__11169 = cljs.core.rest.call(null, ps__11166);
            ps__11166 = G__11169;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____11167)) {
        return or__3824__auto____11167
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____11171 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____11171)) {
    return or__3824__auto____11171
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__11189 = cljs.core.reduce.call(null, function(be, p__11181) {
    var vec__11182__11183 = p__11181;
    var k__11184 = cljs.core.nth.call(null, vec__11182__11183, 0, null);
    var ___11185 = cljs.core.nth.call(null, vec__11182__11183, 1, null);
    var e__11186 = vec__11182__11183;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__11184)) {
      var be2__11188 = cljs.core.truth_(function() {
        var or__3824__auto____11187 = be == null;
        if(or__3824__auto____11187) {
          return or__3824__auto____11187
        }else {
          return cljs.core.dominates.call(null, k__11184, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__11186 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__11188), k__11184, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__11184), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__11188)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__11188
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__11189)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__11189));
      return cljs.core.second.call(null, best_entry__11189)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
void 0;
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____11193 = mf;
    if(and__3822__auto____11193) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____11193
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    return function() {
      var or__3824__auto____11194 = cljs.core._reset[goog.typeOf(mf)];
      if(or__3824__auto____11194) {
        return or__3824__auto____11194
      }else {
        var or__3824__auto____11195 = cljs.core._reset["_"];
        if(or__3824__auto____11195) {
          return or__3824__auto____11195
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____11199 = mf;
    if(and__3822__auto____11199) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____11199
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    return function() {
      var or__3824__auto____11200 = cljs.core._add_method[goog.typeOf(mf)];
      if(or__3824__auto____11200) {
        return or__3824__auto____11200
      }else {
        var or__3824__auto____11201 = cljs.core._add_method["_"];
        if(or__3824__auto____11201) {
          return or__3824__auto____11201
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____11205 = mf;
    if(and__3822__auto____11205) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____11205
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    return function() {
      var or__3824__auto____11206 = cljs.core._remove_method[goog.typeOf(mf)];
      if(or__3824__auto____11206) {
        return or__3824__auto____11206
      }else {
        var or__3824__auto____11207 = cljs.core._remove_method["_"];
        if(or__3824__auto____11207) {
          return or__3824__auto____11207
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____11211 = mf;
    if(and__3822__auto____11211) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____11211
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    return function() {
      var or__3824__auto____11212 = cljs.core._prefer_method[goog.typeOf(mf)];
      if(or__3824__auto____11212) {
        return or__3824__auto____11212
      }else {
        var or__3824__auto____11213 = cljs.core._prefer_method["_"];
        if(or__3824__auto____11213) {
          return or__3824__auto____11213
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____11217 = mf;
    if(and__3822__auto____11217) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____11217
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    return function() {
      var or__3824__auto____11218 = cljs.core._get_method[goog.typeOf(mf)];
      if(or__3824__auto____11218) {
        return or__3824__auto____11218
      }else {
        var or__3824__auto____11219 = cljs.core._get_method["_"];
        if(or__3824__auto____11219) {
          return or__3824__auto____11219
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____11223 = mf;
    if(and__3822__auto____11223) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____11223
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    return function() {
      var or__3824__auto____11224 = cljs.core._methods[goog.typeOf(mf)];
      if(or__3824__auto____11224) {
        return or__3824__auto____11224
      }else {
        var or__3824__auto____11225 = cljs.core._methods["_"];
        if(or__3824__auto____11225) {
          return or__3824__auto____11225
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____11229 = mf;
    if(and__3822__auto____11229) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____11229
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    return function() {
      var or__3824__auto____11230 = cljs.core._prefers[goog.typeOf(mf)];
      if(or__3824__auto____11230) {
        return or__3824__auto____11230
      }else {
        var or__3824__auto____11231 = cljs.core._prefers["_"];
        if(or__3824__auto____11231) {
          return or__3824__auto____11231
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____11235 = mf;
    if(and__3822__auto____11235) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____11235
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    return function() {
      var or__3824__auto____11236 = cljs.core._dispatch[goog.typeOf(mf)];
      if(or__3824__auto____11236) {
        return or__3824__auto____11236
      }else {
        var or__3824__auto____11237 = cljs.core._dispatch["_"];
        if(or__3824__auto____11237) {
          return or__3824__auto____11237
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
void 0;
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__11240 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__11241 = cljs.core._get_method.call(null, mf, dispatch_val__11240);
  if(cljs.core.truth_(target_fn__11241)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__11240)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__11241, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11242 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__11243 = this;
  cljs.core.swap_BANG_.call(null, this__11243.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11243.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11243.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11243.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__11244 = this;
  cljs.core.swap_BANG_.call(null, this__11244.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__11244.method_cache, this__11244.method_table, this__11244.cached_hierarchy, this__11244.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__11245 = this;
  cljs.core.swap_BANG_.call(null, this__11245.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__11245.method_cache, this__11245.method_table, this__11245.cached_hierarchy, this__11245.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__11246 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__11246.cached_hierarchy), cljs.core.deref.call(null, this__11246.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__11246.method_cache, this__11246.method_table, this__11246.cached_hierarchy, this__11246.hierarchy)
  }
  var temp__3971__auto____11247 = cljs.core.deref.call(null, this__11246.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____11247)) {
    var target_fn__11248 = temp__3971__auto____11247;
    return target_fn__11248
  }else {
    var temp__3971__auto____11249 = cljs.core.find_and_cache_best_method.call(null, this__11246.name, dispatch_val, this__11246.hierarchy, this__11246.method_table, this__11246.prefer_table, this__11246.method_cache, this__11246.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____11249)) {
      var target_fn__11250 = temp__3971__auto____11249;
      return target_fn__11250
    }else {
      return cljs.core.deref.call(null, this__11246.method_table).call(null, this__11246.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__11251 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__11251.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__11251.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__11251.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.set([])), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__11251.method_cache, this__11251.method_table, this__11251.cached_hierarchy, this__11251.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__11252 = this;
  return cljs.core.deref.call(null, this__11252.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__11253 = this;
  return cljs.core.deref.call(null, this__11253.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__11254 = this;
  return cljs.core.do_dispatch.call(null, mf, this__11254.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__11256__delegate = function(_, args) {
    var self__11255 = this;
    return cljs.core._dispatch.call(null, self__11255, args)
  };
  var G__11256 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__11256__delegate.call(this, _, args)
  };
  G__11256.cljs$lang$maxFixedArity = 1;
  G__11256.cljs$lang$applyTo = function(arglist__11257) {
    var _ = cljs.core.first(arglist__11257);
    var args = cljs.core.rest(arglist__11257);
    return G__11256__delegate(_, args)
  };
  G__11256.cljs$lang$arity$variadic = G__11256__delegate;
  return G__11256
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__11258 = this;
  return cljs.core._dispatch.call(null, self__11258, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2290__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11259 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_11261, _) {
  var this__11260 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__11260.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__11262 = this;
  return this__11262.uuid === other.uuid
};
cljs.core.UUID.prototype.toString = function() {
  var this__11263 = this;
  var this__11264 = this;
  return cljs.core.pr_str.call(null, this__11264)
};
cljs.core.UUID;
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("pacman.util");
goog.require("cljs.core");
goog.require("goog.string.format");
goog.require("goog.string");
pacman.util.round_half_down = function round_half_down(n) {
  return Math.ceil.call(null, n - 0.5)
};
pacman.util.sign = function sign(n) {
  if(0 < n) {
    return 1
  }else {
    if(n < 0) {
      return-1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
pacman.util.dissoc_in = function dissoc_in(m, p__7523) {
  var vec__7531__7532 = p__7523;
  var k__7533 = cljs.core.nth.call(null, vec__7531__7532, 0, null);
  var ks__7534 = cljs.core.nthnext.call(null, vec__7531__7532, 1);
  if(cljs.core.truth_(ks__7534)) {
    var temp__3971__auto____7535 = cljs.core._lookup.call(null, m, k__7533, null);
    if(cljs.core.truth_(temp__3971__auto____7535)) {
      var nested__7536 = temp__3971__auto____7535;
      var updated__7537 = dissoc_in.call(null, nested__7536, ks__7534);
      if(cljs.core.seq.call(null, updated__7537)) {
        return cljs.core.assoc.call(null, m, k__7533, updated__7537)
      }else {
        return cljs.core.dissoc.call(null, m, k__7533)
      }
    }else {
      return m
    }
  }else {
    return cljs.core.dissoc.call(null, m, k__7533)
  }
};
pacman.util.now = function now() {
  return(new Date).getTime()
};
pacman.util.format = goog.string.format;
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.dependentDisposables_;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  if(!this.dependentDisposables_) {
    this.dependentDisposables_ = []
  }
  this.dependentDisposables_.push(disposable)
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.dependentDisposables_) {
    goog.disposeAll.apply(null, this.dependentDisposables_)
  }
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if(goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable)
    }else {
      goog.dispose(disposable)
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for(var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isDocumentModeCache_ = {};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.isDocumentModeCache_[documentMode] || (goog.userAgent.isDocumentModeCache_[documentMode] = goog.userAgent.IE && document.documentMode && document.documentMode >= documentMode)
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true
  }catch(e) {
  }
  return false
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      if(!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.ASSUME_GOOD_GC = false;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = {count_:0, remaining_:0}
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = {count_:0, remaining_:0};
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = [];
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.getProxy();
      proxy.src = src;
      listenerObj = new goog.events.Listener;
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = []
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.key, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.key, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(!listenerArray[i].removed && listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = [];
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0
      }
      evt.dispose()
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = goog.userAgent.WEBKIT ? !opt_cancel : !!opt_cancel;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver
};
goog.debug.getFunctionName = function(fn) {
  if(goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn]
  }
  if(goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if(name) {
      goog.debug.fnNameCache_[fn] = name;
      return name
    }
  }
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.logToProfilers = function(msg) {
  if(goog.global["console"]) {
    if(goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg)
    }else {
      if(goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg)
      }
    }
  }
  if(goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg)
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.Replacer;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object)
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp()
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if(!this.xhr_) {
      return null
    }
    if("response" in this.xhr_) {
      return this.xhr_.response
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer
        }
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("goog.debug.RelativeTimeProvider");
goog.debug.RelativeTimeProvider = function() {
  this.relativeTimeStart_ = goog.now()
};
goog.debug.RelativeTimeProvider.defaultInstance_ = new goog.debug.RelativeTimeProvider;
goog.debug.RelativeTimeProvider.prototype.set = function(timeStamp) {
  this.relativeTimeStart_ = timeStamp
};
goog.debug.RelativeTimeProvider.prototype.reset = function() {
  this.set(goog.now())
};
goog.debug.RelativeTimeProvider.prototype.get = function() {
  return this.relativeTimeStart_
};
goog.debug.RelativeTimeProvider.getDefaultInstance = function() {
  return goog.debug.RelativeTimeProvider.defaultInstance_
};
goog.provide("goog.debug.Formatter");
goog.provide("goog.debug.HtmlFormatter");
goog.provide("goog.debug.TextFormatter");
goog.require("goog.debug.RelativeTimeProvider");
goog.require("goog.string");
goog.debug.Formatter = function(opt_prefix) {
  this.prefix_ = opt_prefix || "";
  this.startTimeProvider_ = goog.debug.RelativeTimeProvider.getDefaultInstance()
};
goog.debug.Formatter.prototype.showAbsoluteTime = true;
goog.debug.Formatter.prototype.showRelativeTime = true;
goog.debug.Formatter.prototype.showLoggerName = true;
goog.debug.Formatter.prototype.showExceptionText = false;
goog.debug.Formatter.prototype.showSeverityLevel = false;
goog.debug.Formatter.prototype.formatRecord = goog.abstractMethod;
goog.debug.Formatter.prototype.setStartTimeProvider = function(provider) {
  this.startTimeProvider_ = provider
};
goog.debug.Formatter.prototype.getStartTimeProvider = function() {
  return this.startTimeProvider_
};
goog.debug.Formatter.prototype.resetRelativeTimeStart = function() {
  this.startTimeProvider_.reset()
};
goog.debug.Formatter.getDateTimeStamp_ = function(logRecord) {
  var time = new Date(logRecord.getMillis());
  return goog.debug.Formatter.getTwoDigitString_(time.getFullYear() - 2E3) + goog.debug.Formatter.getTwoDigitString_(time.getMonth() + 1) + goog.debug.Formatter.getTwoDigitString_(time.getDate()) + " " + goog.debug.Formatter.getTwoDigitString_(time.getHours()) + ":" + goog.debug.Formatter.getTwoDigitString_(time.getMinutes()) + ":" + goog.debug.Formatter.getTwoDigitString_(time.getSeconds()) + "." + goog.debug.Formatter.getTwoDigitString_(Math.floor(time.getMilliseconds() / 10))
};
goog.debug.Formatter.getTwoDigitString_ = function(n) {
  if(n < 10) {
    return"0" + n
  }
  return String(n)
};
goog.debug.Formatter.getRelativeTime_ = function(logRecord, relativeTimeStart) {
  var ms = logRecord.getMillis() - relativeTimeStart;
  var sec = ms / 1E3;
  var str = sec.toFixed(3);
  var spacesToPrepend = 0;
  if(sec < 1) {
    spacesToPrepend = 2
  }else {
    while(sec < 100) {
      spacesToPrepend++;
      sec *= 10
    }
  }
  while(spacesToPrepend-- > 0) {
    str = " " + str
  }
  return str
};
goog.debug.HtmlFormatter = function(opt_prefix) {
  goog.debug.Formatter.call(this, opt_prefix)
};
goog.inherits(goog.debug.HtmlFormatter, goog.debug.Formatter);
goog.debug.HtmlFormatter.prototype.showExceptionText = true;
goog.debug.HtmlFormatter.prototype.formatRecord = function(logRecord) {
  var className;
  switch(logRecord.getLevel().value) {
    case goog.debug.Logger.Level.SHOUT.value:
      className = "dbg-sh";
      break;
    case goog.debug.Logger.Level.SEVERE.value:
      className = "dbg-sev";
      break;
    case goog.debug.Logger.Level.WARNING.value:
      className = "dbg-w";
      break;
    case goog.debug.Logger.Level.INFO.value:
      className = "dbg-i";
      break;
    case goog.debug.Logger.Level.FINE.value:
    ;
    default:
      className = "dbg-f";
      break
  }
  var sb = [];
  sb.push(this.prefix_, " ");
  if(this.showAbsoluteTime) {
    sb.push("[", goog.debug.Formatter.getDateTimeStamp_(logRecord), "] ")
  }
  if(this.showRelativeTime) {
    sb.push("[", goog.string.whitespaceEscape(goog.debug.Formatter.getRelativeTime_(logRecord, this.startTimeProvider_.get())), "s] ")
  }
  if(this.showLoggerName) {
    sb.push("[", goog.string.htmlEscape(logRecord.getLoggerName()), "] ")
  }
  sb.push('<span class="', className, '">', goog.string.newLineToBr(goog.string.whitespaceEscape(goog.string.htmlEscape(logRecord.getMessage()))));
  if(this.showExceptionText && logRecord.getException()) {
    sb.push("<br>", goog.string.newLineToBr(goog.string.whitespaceEscape(logRecord.getExceptionText() || "")))
  }
  sb.push("</span><br>");
  return sb.join("")
};
goog.debug.TextFormatter = function(opt_prefix) {
  goog.debug.Formatter.call(this, opt_prefix)
};
goog.inherits(goog.debug.TextFormatter, goog.debug.Formatter);
goog.debug.TextFormatter.prototype.formatRecord = function(logRecord) {
  var sb = [];
  sb.push(this.prefix_, " ");
  if(this.showAbsoluteTime) {
    sb.push("[", goog.debug.Formatter.getDateTimeStamp_(logRecord), "] ")
  }
  if(this.showRelativeTime) {
    sb.push("[", goog.debug.Formatter.getRelativeTime_(logRecord, this.startTimeProvider_.get()), "s] ")
  }
  if(this.showLoggerName) {
    sb.push("[", logRecord.getLoggerName(), "] ")
  }
  if(this.showSeverityLevel) {
    sb.push("[", logRecord.getLevel().name, "] ")
  }
  sb.push(logRecord.getMessage(), "\n");
  if(this.showExceptionText && logRecord.getException()) {
    sb.push(logRecord.getExceptionText(), "\n")
  }
  return sb.join("")
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.debug.Logger");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.channels_ = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while(length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength))
  }
  return s
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.debug.Logger.getLogger("goog.net.xpc");
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.setIgnoreCase(opt_ignoreCase == null ? opt_uri.getIgnoreCase() : opt_ignoreCase);
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQuery(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.queryData_ = new goog.Uri.QueryData(null, this, this.ignoreCase_)
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  if(this.cachedToString_) {
    return this.cachedToString_
  }
  var out = [];
  if(this.scheme_) {
    out.push(goog.Uri.encodeSpecialChars_(this.scheme_, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  if(this.domain_) {
    out.push("//");
    if(this.userInfo_) {
      out.push(goog.Uri.encodeSpecialChars_(this.userInfo_, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.Uri.encodeString_(this.domain_));
    if(this.port_ != null) {
      out.push(":", String(this.getPort()))
    }
  }
  if(this.path_) {
    if(this.hasDomain() && this.path_.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(this.path_, this.path_.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_))
  }
  var query = String(this.queryData_);
  if(query) {
    out.push("?", query)
  }
  if(this.fragment_) {
    out.push("#", goog.Uri.encodeSpecialChars_(this.fragment_, goog.Uri.reDisallowedInFragment_))
  }
  return this.cachedToString_ = out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQuery(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return goog.Uri.create(this.scheme_, this.userInfo_, this.domain_, this.port_, this.path_, this.queryData_.clone(), this.fragment_, this.ignoreCase_)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.uri_ = this;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, this, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeString_ = function(unescapedPart) {
  if(goog.isString(unescapedPart)) {
    return encodeURIComponent(unescapedPart)
  }
  return null
};
goog.Uri.encodeSpecialRegExp_ = /^[a-zA-Z0-9\-_.!~*'():\/;?]*$/;
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  var ret = null;
  if(goog.isString(unescapedPart)) {
    ret = unescapedPart;
    if(!goog.Uri.encodeSpecialRegExp_.test(ret)) {
      ret = encodeURI(unescapedPart)
    }
    if(ret.search(extra) >= 0) {
      ret = ret.replace(extra, goog.Uri.encodeChar_)
    }
  }
  return ret
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.uri_ = opt_uri || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("&");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("=");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  return goog.Uri.QueryData.createFromKeysValues(keys, goog.structs.getValues(map), opt_uri, opt_ignoreCase)
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, opt_uri, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.decodedQuery_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(!this.containsKey(key)) {
    this.keyMap_.set(key, value)
  }else {
    var current = this.keyMap_.get(key);
    if(goog.isArray(current)) {
      current.push(value)
    }else {
      this.keyMap_.set(key, [current, value])
    }
  }
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  if(this.keyMap_) {
    this.keyMap_.clear()
  }
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        rv.push(keys[i])
      }
    }else {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv;
  if(opt_key) {
    var key = this.getKeyName_(opt_key);
    if(this.containsKey(key)) {
      var value = this.keyMap_.get(key);
      if(goog.isArray(value)) {
        return value
      }else {
        rv = [];
        rv.push(value)
      }
    }else {
      rv = []
    }
  }else {
    var vals = this.keyMap_.getValues();
    rv = [];
    for(var i = 0;i < vals.length;i++) {
      var val = vals[i];
      if(goog.isArray(val)) {
        goog.array.extend(rv, val)
      }else {
        rv.push(val)
      }
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  this.keyMap_.set(key, value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      return val[0]
    }else {
      return val
    }
  }else {
    return opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  if(values.length > 0) {
    this.keyMap_.set(key, values);
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var count = 0;
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        if(count > 0) {
          sb.push("&")
        }
        sb.push(encodedKey);
        if(val[j] !== "") {
          sb.push("=", goog.string.urlEncode(val[j]))
        }
        count++
      }
    }else {
      if(count > 0) {
        sb.push("&")
      }
      sb.push(encodedKey);
      if(val !== "") {
        sb.push("=", goog.string.urlEncode(val))
      }
      count++
    }
  }
  return this.encodedQuery_ = sb.join("")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  if(!this.decodedQuery_) {
    this.decodedQuery_ = goog.Uri.decodeOrEmpty_(this.toString())
  }
  return this.decodedQuery_
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  delete this.decodedQuery_;
  delete this.encodedQuery_;
  if(this.uri_) {
    delete this.uri_.cachedToString_
  }
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  if(this.decodedQuery_) {
    rv.decodedQuery_ = this.decodedQuery_
  }
  if(this.encodedQuery_) {
    rv.encodedQuery_ = this.encodedQuery_
  }
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone()
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key, map) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.add(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x)
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return goog.style.getSizeWithDisplay_(element)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var size = goog.style.getSizeWithDisplay_(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return size
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top)
  }
  return new goog.math.Size(offsetWidth, offsetHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if(opt_className) {
    outerDiv.className = opt_className
  }
  outerDiv.style.cssText = "visiblity:hidden;overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width
};
goog.provide("pacman.core");
goog.require("cljs.core");
pacman.core.hz = 60;
pacman.core.cols = 28;
pacman.core.rows = 36;
pacman.core.tile_size = 8;
pacman.core.world_width = pacman.core.cols * pacman.core.tile_size;
pacman.core.world_height = pacman.core.rows * pacman.core.tile_size;
pacman.core.seconds__GT_ticks = function seconds__GT_ticks(seconds) {
  return Math.round.call(null, seconds * pacman.core.hz)
};
pacman.core.ticks__GT_seconds = function ticks__GT_seconds(ticks) {
  return ticks / pacman.core.hz
};
pacman.core.col__GT_x = function col__GT_x(col) {
  return col * pacman.core.tile_size
};
pacman.core.row__GT_y = function row__GT_y(row) {
  return row * pacman.core.tile_size
};
pacman.core.x__GT_col = function x__GT_col(x) {
  return x / pacman.core.tile_size
};
pacman.core.y__GT_row = function y__GT_row(y) {
  return y / pacman.core.tile_size
};
pacman.core.direction__GT_x = function direction__GT_x(direction) {
  return cljs.core._lookup.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'east", "\ufdd0'west"], {"\ufdd0'east":1, "\ufdd0'west":-1}), direction, 0)
};
pacman.core.direction__GT_y = function direction__GT_y(direction) {
  return cljs.core._lookup.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'south", "\ufdd0'north"], {"\ufdd0'south":1, "\ufdd0'north":-1}), direction, 0)
};
pacman.core.intersects_QMARK_ = function intersects_QMARK_(ax, ay, aw, ah, bx, by, bw, bh) {
  return!function() {
    var or__3824__auto____5889 = ax > bx + bw;
    if(or__3824__auto____5889) {
      return or__3824__auto____5889
    }else {
      var or__3824__auto____5890 = bx > ax + aw;
      if(or__3824__auto____5890) {
        return or__3824__auto____5890
      }else {
        var or__3824__auto____5891 = ay > by + bh;
        if(or__3824__auto____5891) {
          return or__3824__auto____5891
        }else {
          return by > ay + ah
        }
      }
    }
  }()
};
void 0;
pacman.core.Sprite = {};
pacman.core.boundary = function boundary(this$) {
  if(function() {
    var and__3822__auto____5895 = this$;
    if(and__3822__auto____5895) {
      return this$.pacman$core$Sprite$boundary$arity$1
    }else {
      return and__3822__auto____5895
    }
  }()) {
    return this$.pacman$core$Sprite$boundary$arity$1(this$)
  }else {
    return function() {
      var or__3824__auto____5896 = pacman.core.boundary[goog.typeOf(this$)];
      if(or__3824__auto____5896) {
        return or__3824__auto____5896
      }else {
        var or__3824__auto____5897 = pacman.core.boundary["_"];
        if(or__3824__auto____5897) {
          return or__3824__auto____5897
        }else {
          throw cljs.core.missing_protocol.call(null, "Sprite.boundary", this$);
        }
      }
    }().call(null, this$)
  }
};
pacman.core.draw_sprite_BANG_ = function draw_sprite_BANG_(this$, ctx) {
  if(function() {
    var and__3822__auto____5901 = this$;
    if(and__3822__auto____5901) {
      return this$.pacman$core$Sprite$draw_sprite_BANG_$arity$2
    }else {
      return and__3822__auto____5901
    }
  }()) {
    return this$.pacman$core$Sprite$draw_sprite_BANG_$arity$2(this$, ctx)
  }else {
    return function() {
      var or__3824__auto____5902 = pacman.core.draw_sprite_BANG_[goog.typeOf(this$)];
      if(or__3824__auto____5902) {
        return or__3824__auto____5902
      }else {
        var or__3824__auto____5903 = pacman.core.draw_sprite_BANG_["_"];
        if(or__3824__auto____5903) {
          return or__3824__auto____5903
        }else {
          throw cljs.core.missing_protocol.call(null, "Sprite.draw-sprite!", this$);
        }
      }
    }().call(null, this$, ctx)
  }
};
void 0;
pacman.core.invalidate_region = function invalidate_region(state, x, y, w, h) {
  return cljs.core.update_in.call(null, state, cljs.core.PersistentVector.fromArray(["\ufdd0'invalidated"], true), cljs.core.conj, cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'y", "\ufdd0'w", "\ufdd0'h"], {"\ufdd0'x":x, "\ufdd0'y":y, "\ufdd0'w":w, "\ufdd0'h":h}))
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__11416 = s;
      var limit__11417 = limit;
      var parts__11418 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__11417, 1)) {
          return cljs.core.conj.call(null, parts__11418, s__11416)
        }else {
          var temp__3971__auto____11419 = cljs.core.re_find.call(null, re, s__11416);
          if(cljs.core.truth_(temp__3971__auto____11419)) {
            var m__11420 = temp__3971__auto____11419;
            var index__11421 = s__11416.indexOf(m__11420);
            var G__11422 = s__11416.substring(index__11421 + cljs.core.count.call(null, m__11420));
            var G__11423 = limit__11417 - 1;
            var G__11424 = cljs.core.conj.call(null, parts__11418, s__11416.substring(0, index__11421));
            s__11416 = G__11422;
            limit__11417 = G__11423;
            parts__11418 = G__11424;
            continue
          }else {
            return cljs.core.conj.call(null, parts__11418, s__11416)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__11428 = s.length;
  while(true) {
    if(index__11428 === 0) {
      return""
    }else {
      var ch__11429 = cljs.core._lookup.call(null, s, index__11428 - 1, null);
      if(function() {
        var or__3824__auto____11430 = cljs.core._EQ_.call(null, ch__11429, "\n");
        if(or__3824__auto____11430) {
          return or__3824__auto____11430
        }else {
          return cljs.core._EQ_.call(null, ch__11429, "\r")
        }
      }()) {
        var G__11431 = index__11428 - 1;
        index__11428 = G__11431;
        continue
      }else {
        return s.substring(0, index__11428)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__11435 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____11436 = cljs.core.not.call(null, s__11435);
    if(or__3824__auto____11436) {
      return or__3824__auto____11436
    }else {
      var or__3824__auto____11437 = cljs.core._EQ_.call(null, "", s__11435);
      if(or__3824__auto____11437) {
        return or__3824__auto____11437
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__11435)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__11444 = new goog.string.StringBuffer;
  var length__11445 = s.length;
  var index__11446 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__11445, index__11446)) {
      return buffer__11444.toString()
    }else {
      var ch__11447 = s.charAt(index__11446);
      var temp__3971__auto____11448 = cljs.core._lookup.call(null, cmap, ch__11447, null);
      if(cljs.core.truth_(temp__3971__auto____11448)) {
        var replacement__11449 = temp__3971__auto____11448;
        buffer__11444.append([cljs.core.str(replacement__11449)].join(""))
      }else {
        buffer__11444.append(ch__11447)
      }
      var G__11450 = index__11446 + 1;
      index__11446 = G__11450;
      continue
    }
    break
  }
};
goog.provide("pacman.util.canvas");
goog.require("cljs.core");
goog.require("clojure.string");
pacman.util.canvas.context = function context(element) {
  return element.getContext("2d")
};
pacman.util.canvas.with_state_STAR_ = function with_state_STAR_(ctx, body) {
  ctx.save();
  try {
    return body.call(null)
  }finally {
    ctx.restore()
  }
};
pacman.util.canvas.keyword__GT_property = function keyword__GT_property(k) {
  var words__21706 = clojure.string.split.call(null, cljs.core.name.call(null, k), /-/);
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.first.call(null, words__21706), cljs.core.map.call(null, clojure.string.capitalize, cljs.core.rest.call(null, words__21706)))
};
pacman.util.canvas.set_property_BANG_ = function set_property_BANG_(ctx, k, v) {
  return ctx[pacman.util.canvas.keyword__GT_property.call(null, k)] = v
};
pacman.util.canvas.set_properties_BANG_ = function set_properties_BANG_(ctx, m) {
  var G__21726__21727 = cljs.core.seq.call(null, m);
  if(G__21726__21727) {
    var G__21729__21731 = cljs.core.first.call(null, G__21726__21727);
    var vec__21730__21732 = G__21729__21731;
    var k__21733 = cljs.core.nth.call(null, vec__21730__21732, 0, null);
    var v__21734 = cljs.core.nth.call(null, vec__21730__21732, 1, null);
    var G__21726__21735 = G__21726__21727;
    var G__21729__21736 = G__21729__21731;
    var G__21726__21737 = G__21726__21735;
    while(true) {
      var vec__21738__21739 = G__21729__21736;
      var k__21740 = cljs.core.nth.call(null, vec__21738__21739, 0, null);
      var v__21741 = cljs.core.nth.call(null, vec__21738__21739, 1, null);
      var G__21726__21742 = G__21726__21737;
      pacman.util.canvas.set_property_BANG_.call(null, ctx, k__21740, v__21741);
      var temp__3974__auto____21743 = cljs.core.next.call(null, G__21726__21742);
      if(temp__3974__auto____21743) {
        var G__21726__21744 = temp__3974__auto____21743;
        var G__21745 = cljs.core.first.call(null, G__21726__21744);
        var G__21746 = G__21726__21744;
        G__21729__21736 = G__21745;
        G__21726__21737 = G__21746;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
pacman.util.canvas.with_properties_STAR_ = function with_properties_STAR_(ctx, props, body) {
  return pacman.util.canvas.with_state_STAR_.call(null, ctx, function() {
    pacman.util.canvas.set_properties_BANG_.call(null, ctx, props);
    return body.call(null)
  })
};
pacman.util.canvas.with_path_STAR_ = function with_path_STAR_(ctx, body) {
  ctx.beginPath();
  try {
    return body.call(null)
  }finally {
    ctx.closePath()
  }
};
pacman.util.canvas.move_BANG_ = function move_BANG_(ctx, x, y) {
  ctx.moveTo(x, y);
  return ctx
};
pacman.util.canvas.arc_BANG_ = function() {
  var arc_BANG_ = null;
  var arc_BANG___6 = function(ctx, x, y, radius, start_angle, end_angle) {
    return arc_BANG_.call(null, ctx, x, y, radius, start_angle, end_angle, null)
  };
  var arc_BANG___7 = function(ctx, x, y, radius, start_angle, end_angle, anticlockwise_QMARK_) {
    ctx.arc(x, y, radius, start_angle, end_angle, anticlockwise_QMARK_);
    return ctx
  };
  arc_BANG_ = function(ctx, x, y, radius, start_angle, end_angle, anticlockwise_QMARK_) {
    switch(arguments.length) {
      case 6:
        return arc_BANG___6.call(this, ctx, x, y, radius, start_angle, end_angle);
      case 7:
        return arc_BANG___7.call(this, ctx, x, y, radius, start_angle, end_angle, anticlockwise_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  arc_BANG_.cljs$lang$arity$6 = arc_BANG___6;
  arc_BANG_.cljs$lang$arity$7 = arc_BANG___7;
  return arc_BANG_
}();
pacman.util.canvas.circle_BANG_ = function circle_BANG_(ctx, x, y, radius) {
  return pacman.util.canvas.arc_BANG_.call(null, ctx, x, y, radius, 0, 2 * Math.PI)
};
pacman.util.canvas.fill_BANG_ = function fill_BANG_(ctx) {
  ctx.fill();
  return ctx
};
pacman.util.canvas.stroke_BANG_ = function stroke_BANG_(ctx) {
  ctx.stroke();
  return ctx
};
pacman.util.canvas.clear_rect_BANG_ = function clear_rect_BANG_(ctx, x, y, w, h) {
  ctx.clearRect(x, y, w, h);
  return ctx
};
pacman.util.canvas.fill_rect_BANG_ = function fill_rect_BANG_(ctx, x, y, w, h) {
  ctx.fillRect(x, y, w, h);
  return ctx
};
pacman.util.canvas.draw_image_BANG_ = function() {
  var draw_image_BANG_ = null;
  var draw_image_BANG___4 = function(ctx, image, x, y) {
    ctx.drawImage(image, x, y);
    return ctx
  };
  var draw_image_BANG___6 = function(ctx, image, x, y, w, h) {
    ctx.drawImage(image, x, y, w, h);
    return ctx
  };
  var draw_image_BANG___10 = function(ctx, image, sx, sy, sw, sh, dx, dy, dw, dh) {
    ctx.drawImage(image, sx, sy, sw, sh, dx, dy, dw, dh);
    return ctx
  };
  draw_image_BANG_ = function(ctx, image, sx, sy, sw, sh, dx, dy, dw, dh) {
    switch(arguments.length) {
      case 4:
        return draw_image_BANG___4.call(this, ctx, image, sx, sy);
      case 6:
        return draw_image_BANG___6.call(this, ctx, image, sx, sy, sw, sh);
      case 10:
        return draw_image_BANG___10.call(this, ctx, image, sx, sy, sw, sh, dx, dy, dw, dh)
    }
    throw"Invalid arity: " + arguments.length;
  };
  draw_image_BANG_.cljs$lang$arity$4 = draw_image_BANG___4;
  draw_image_BANG_.cljs$lang$arity$6 = draw_image_BANG___6;
  draw_image_BANG_.cljs$lang$arity$10 = draw_image_BANG___10;
  return draw_image_BANG_
}();
pacman.util.canvas.scale_BANG_ = function scale_BANG_(ctx, x, y) {
  ctx.scale(x, y);
  return ctx
};
goog.provide("pacman.maze");
goog.require("cljs.core");
goog.require("pacman.core");
goog.require("pacman.util.canvas");
pacman.maze.tile_map = cljs.core.PersistentVector.fromArray(["############################", "############################", "############################", "############################", "#............##............#", "#.####.#####.##.#####.####.#", "#o####.#####.##.#####.####o#", "#.####.#####.##.#####.####.#", "#..........................#", "#.####.##.########.##.####.#", "#.####.##.########.##.####.#", "#......##....##....##......#", "######.##### ## #####.######", "######.##### ## #####.######", 
"######.##          ##.######", "######.## ######## ##.######", "######.## ######## ##.######", "      .   ########   .      ", "######.## ######## ##.######", "######.## ######## ##.######", "######.##          ##.######", "######.## ######## ##.######", "######.## ######## ##.######", "#............##............#", "#.####.#####.##.#####.####.#", "#.####.#####.##.#####.####.#", "#o..##.......  .......##..o#", "###.##.##.########.##.##.###", "###.##.##.########.##.##.###", "#......##....##....##......#", 
"#.##########.##.##########.#", "#.##########.##.##########.#", "#..........................#", "############################", "############################", "############################"], true);
pacman.maze.traversable_QMARK_ = function traversable_QMARK_(col, row) {
  return cljs.core.not_EQ_.call(null, "#", cljs.core.get_in.call(null, pacman.maze.tile_map, cljs.core.PersistentVector.fromArray([row, col], true)))
};
pacman.maze.dot_diameter = cljs.core.ObjMap.fromObject(["\ufdd0'dot", "\ufdd0'energiser"], {"\ufdd0'dot":pacman.core.tile_size * 0.25, "\ufdd0'energiser":pacman.core.tile_size * 0.75});
pacman.maze.dot_colour = cljs.core.ObjMap.fromObject(["\ufdd0'dot", "\ufdd0'energiser"], {"\ufdd0'dot":"#FFCCCC", "\ufdd0'energiser":"#FFB6AD"});
pacman.maze.init_dots = function init_dots() {
  var types__6926 = cljs.core.PersistentArrayMap.fromArrays([".", "o"], ["\ufdd0'dot", "\ufdd0'energiser"]);
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.keep_indexed.call(null, function(row, chars) {
    var dots__6929 = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.keep_indexed.call(null, function(col, c) {
      var temp__3971__auto____6927 = types__6926.call(null, c);
      if(cljs.core.truth_(temp__3971__auto____6927)) {
        var type__6928 = temp__3971__auto____6927;
        return cljs.core.PersistentVector.fromArray([col, type__6928], true)
      }else {
        return null
      }
    }, chars));
    if(!cljs.core.empty_QMARK_.call(null, dots__6929)) {
      return cljs.core.PersistentVector.fromArray([row, dots__6929], true)
    }else {
      return null
    }
  }, pacman.maze.tile_map))
};
pacman.maze.invalidated_dots = function invalidated_dots(dots, invalidated_regions) {
  return cljs.core.into.call(null, cljs.core.set([]), function() {
    var iter__2447__auto____7143 = function iter__7037(s__7038) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__7038__7093 = s__7038;
        while(true) {
          if(cljs.core.seq.call(null, s__7038__7093)) {
            var map__7094__7095 = cljs.core.first.call(null, s__7038__7093);
            var map__7094__7096 = cljs.core.seq_QMARK_.call(null, map__7094__7095) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7094__7095) : map__7094__7095;
            var rx__7097 = cljs.core._lookup.call(null, map__7094__7096, "\ufdd0'x", null);
            var ry__7098 = cljs.core._lookup.call(null, map__7094__7096, "\ufdd0'y", null);
            var rw__7099 = cljs.core._lookup.call(null, map__7094__7096, "\ufdd0'w", null);
            var rh__7100 = cljs.core._lookup.call(null, map__7094__7096, "\ufdd0'h", null);
            var iterys__2445__auto____7141 = function(s__7038__7093, map__7094__7095, map__7094__7096, rx__7097, ry__7098, rw__7099, rh__7100) {
              return function iter__7039(s__7040) {
                return new cljs.core.LazySeq(null, false, function(s__7038__7093, map__7094__7095, map__7094__7096, rx__7097, ry__7098, rw__7099, rh__7100) {
                  return function() {
                    var s__7040__7121 = s__7040;
                    while(true) {
                      if(cljs.core.seq.call(null, s__7040__7121)) {
                        var row__7122 = cljs.core.first.call(null, s__7040__7121);
                        var iterys__2445__auto____7139 = function(s__7040__7121, s__7038__7093, row__7122, map__7094__7095, map__7094__7096, rx__7097, ry__7098, rw__7099, rh__7100) {
                          return function iter__7041(s__7042) {
                            return new cljs.core.LazySeq(null, false, function(s__7040__7121, s__7038__7093, row__7122, map__7094__7095, map__7094__7096, rx__7097, ry__7098, rw__7099, rh__7100) {
                              return function() {
                                var s__7042__7131 = s__7042;
                                while(true) {
                                  if(cljs.core.seq.call(null, s__7042__7131)) {
                                    var col__7132 = cljs.core.first.call(null, s__7042__7131);
                                    var type__7133 = cljs.core.get_in.call(null, dots, cljs.core.PersistentVector.fromArray([row__7122, col__7132], true));
                                    if(cljs.core.truth_(function() {
                                      var and__3822__auto____7134 = type__7133;
                                      if(cljs.core.truth_(and__3822__auto____7134)) {
                                        var diameter__7135 = pacman.maze.dot_diameter.call(null, type__7133);
                                        var radius__7136 = diameter__7135 / 2;
                                        var x__7137 = pacman.core.col__GT_x.call(null, col__7132 + 0.5) - radius__7136;
                                        var y__7138 = pacman.core.row__GT_y.call(null, row__7122 + 0.5) - radius__7136;
                                        return pacman.core.intersects_QMARK_.call(null, rx__7097, ry__7098, rw__7099, rh__7100, x__7137, y__7138, diameter__7135, diameter__7135)
                                      }else {
                                        return and__3822__auto____7134
                                      }
                                    }())) {
                                      return cljs.core.cons.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'row", "\ufdd0'col", "\ufdd0'type"], {"\ufdd0'row":row__7122, "\ufdd0'col":col__7132, "\ufdd0'type":type__7133}), iter__7041.call(null, cljs.core.rest.call(null, s__7042__7131)))
                                    }else {
                                      var G__7144 = cljs.core.rest.call(null, s__7042__7131);
                                      s__7042__7131 = G__7144;
                                      continue
                                    }
                                  }else {
                                    return null
                                  }
                                  break
                                }
                              }
                            }(s__7040__7121, s__7038__7093, row__7122, map__7094__7095, map__7094__7096, rx__7097, ry__7098, rw__7099, rh__7100), null)
                          }
                        }(s__7040__7121, s__7038__7093, row__7122, map__7094__7095, map__7094__7096, rx__7097, ry__7098, rw__7099, rh__7100);
                        var fs__2446__auto____7140 = cljs.core.seq.call(null, iterys__2445__auto____7139.call(null, cljs.core.range.call(null, Math.floor.call(null, pacman.core.x__GT_col.call(null, rx__7097)), Math.floor.call(null, pacman.core.x__GT_col.call(null, rx__7097 + rw__7099)) + 1)));
                        if(fs__2446__auto____7140) {
                          return cljs.core.concat.call(null, fs__2446__auto____7140, iter__7039.call(null, cljs.core.rest.call(null, s__7040__7121)))
                        }else {
                          var G__7145 = cljs.core.rest.call(null, s__7040__7121);
                          s__7040__7121 = G__7145;
                          continue
                        }
                      }else {
                        return null
                      }
                      break
                    }
                  }
                }(s__7038__7093, map__7094__7095, map__7094__7096, rx__7097, ry__7098, rw__7099, rh__7100), null)
              }
            }(s__7038__7093, map__7094__7095, map__7094__7096, rx__7097, ry__7098, rw__7099, rh__7100);
            var fs__2446__auto____7142 = cljs.core.seq.call(null, iterys__2445__auto____7141.call(null, cljs.core.range.call(null, Math.floor.call(null, pacman.core.y__GT_row.call(null, ry__7098)), Math.floor.call(null, pacman.core.y__GT_row.call(null, ry__7098 + rh__7100)) + 1)));
            if(fs__2446__auto____7142) {
              return cljs.core.concat.call(null, fs__2446__auto____7142, iter__7037.call(null, cljs.core.rest.call(null, s__7038__7093)))
            }else {
              var G__7146 = cljs.core.rest.call(null, s__7038__7093);
              s__7038__7093 = G__7146;
              continue
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2447__auto____7143.call(null, invalidated_regions)
  }())
};
pacman.maze.draw_dot_BANG_ = function draw_dot_BANG_(ctx, type, col, row) {
  return pacman.util.canvas.with_properties_STAR_.call(null, ctx, cljs.core.ObjMap.fromObject(["\ufdd0'fill-style"], {"\ufdd0'fill-style":pacman.maze.dot_colour.call(null, type)}), function() {
    return pacman.util.canvas.with_path_STAR_.call(null, ctx, function() {
      return pacman.util.canvas.fill_BANG_.call(null, pacman.util.canvas.circle_BANG_.call(null, ctx, pacman.core.col__GT_x.call(null, col + 0.5), pacman.core.row__GT_y.call(null, row + 0.5), pacman.maze.dot_diameter.call(null, type) / 2))
    })
  })
};
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper()
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow()
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || ""
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.debug.Logger");
goog.require("goog.json");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.base(this);
  this.services_ = {}
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.debug.Logger.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if(opt_connectCb) {
    opt_connectCb()
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload}
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if(!service) {
    return
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if(goog.isDefAndNotNull(decodedPayload)) {
    service.callback(decodedPayload)
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if(service) {
    return service
  }else {
    if(this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload}
    }
  }
  this.logger.warning('Unknown service name "' + serviceName + '"');
  return null
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if(objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload)
    }catch(err) {
      this.logger.warning("Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null
    }
  }else {
    if(!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload)
    }
  }
  return payload
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  goog.dispose(this.logger);
  delete this.logger;
  delete this.services_;
  delete this.defaultService_
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
void 0;
clojure.browser.event.EventType = {};
clojure.browser.event.event_types = function event_types(this$) {
  if(function() {
    var and__3822__auto____11397 = this$;
    if(and__3822__auto____11397) {
      return this$.clojure$browser$event$EventType$event_types$arity$1
    }else {
      return and__3822__auto____11397
    }
  }()) {
    return this$.clojure$browser$event$EventType$event_types$arity$1(this$)
  }else {
    return function() {
      var or__3824__auto____11398 = clojure.browser.event.event_types[goog.typeOf(this$)];
      if(or__3824__auto____11398) {
        return or__3824__auto____11398
      }else {
        var or__3824__auto____11399 = clojure.browser.event.event_types["_"];
        if(or__3824__auto____11399) {
          return or__3824__auto____11399
        }else {
          throw cljs.core.missing_protocol.call(null, "EventType.event-types", this$);
        }
      }
    }().call(null, this$)
  }
};
void 0;
Element.prototype.clojure$browser$event$EventType$ = true;
Element.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11400) {
    var vec__11401__11402 = p__11400;
    var k__11403 = cljs.core.nth.call(null, vec__11401__11402, 0, null);
    var v__11404 = cljs.core.nth.call(null, vec__11401__11402, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11403.toLowerCase()), v__11404], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
goog.events.EventTarget.prototype.clojure$browser$event$EventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11405) {
    var vec__11406__11407 = p__11405;
    var k__11408 = cljs.core.nth.call(null, vec__11406__11407, 0, null);
    var v__11409 = cljs.core.nth.call(null, vec__11406__11407, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11408.toLowerCase()), v__11409], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false)
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen.cljs$lang$arity$3 = listen__3;
  listen.cljs$lang$arity$4 = listen__4;
  return listen
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false)
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once.cljs$lang$arity$3 = listen_once__3;
  listen_once.cljs$lang$arity$4 = listen_once__4;
  return listen_once
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false)
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten.cljs$lang$arity$3 = unlisten__3;
  unlisten.cljs$lang$arity$4 = unlisten__4;
  return unlisten
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key)
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event)
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e)
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount()
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null
};
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = []
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg"
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack"
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  if(this.isDisposed()) {
    return
  }
  goog.net.xpc.logger.fine("transport connect called");
  if(!this.initialized_) {
    goog.net.xpc.logger.fine("initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true
  }
  this.checkForeignFramesReady_()
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name]
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.net.xpc.logger.finest("constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr
};
goog.net.xpc.IframePollingTransport.prototype.innerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("innerPeerReconnect called");
  this.channel_.name = goog.net.xpc.getRandomString(10);
  goog.net.xpc.logger.finest("switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name)
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("outerPeerReconnect called");
  var frames = this.channel_.peerWindowObject_.frames;
  var length = frames.length;
  for(var i = 0;i < length;i++) {
    var frameName;
    try {
      if(frames[i] && frames[i].name) {
        frameName = frames[i].name
      }
    }catch(e) {
    }
    if(!frameName) {
      continue
    }
    var message = frameName.split("_");
    if(message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.net.xpc.logger.finest("deconstructSenderFrames called");
  if(this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null
  }
  if(this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if(!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.net.xpc.logger.finest("foreign frames not (yet) present");
    if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !this.reconnectFrame_) {
      this.innerPeerReconnect_()
    }else {
      if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
        this.outerPeerReconnect_()
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100)
  }else {
    goog.net.xpc.logger.fine("foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getMsgFrameName_()], goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getAckFrameName_()], goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_()
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.net.xpc.logger.finest("checking for receive frame: " + frameName);
  try {
    var winObj = this.channel_.peerWindowObject_.frames[frameName];
    if(!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false
    }
  }catch(e) {
    return false
  }
  return true
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.channel_.peerWindowObject_.frames;
  if(!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if(!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this)
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.net.xpc.logger.fine("local frames not (yet) present")
  }else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.net.xpc.logger.fine("local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.net.xpc.logger.fine("SETUP sent")
    }, this), 100)
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if(this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected_();
    if(this.deliveryQueue_) {
      goog.net.xpc.logger.fine("delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for(var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.deliver_(m.service, m.payload)
      }
      delete this.deliveryQueue_
    }
  }else {
    goog.net.xpc.logger.finest("checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_)
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.net.xpc.logger.finest("msg received: " + raw);
  if(raw == goog.net.xpc.SETUP) {
    if(!this.ackSender_) {
      return
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.net.xpc.logger.finest("SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if(pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame)
      }else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if(part0 == 1) {
          this.parts_ = []
        }
        this.parts_.push(frame);
        if(part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_
        }
      }
    }else {
      goog.net.xpc.logger.warning("received msg, but channel is not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.net.xpc.logger.finest("ack received: " + msgStr);
  if(msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected()) {
      if(!this.waitForAck_) {
        goog.net.xpc.logger.warning("got unexpected ack");
        return
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if(seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_()
      }else {
        goog.net.xpc.logger.warning("got ack with wrong sequence")
      }
    }else {
      goog.net.xpc.logger.warning("received ack, but channel not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if(this.waitForAck_ || !this.sendQueue_.length) {
    return
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.net.xpc.logger.finest("msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if(!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.net.xpc.logger.finest("queued delivery")
  }else {
    this.channel_.deliver_(service, payload)
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if(!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame)
  }else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while(pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_
    }
  }
  this.sendNextFrame_()
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var rcvd = false;
  try {
    for(var i = 0, l = goog.net.xpc.IframePollingTransport.receivers_.length;i < l;i++) {
      rcvd = rcvd || goog.net.xpc.IframePollingTransport.receivers_[i].receive()
    }
  }catch(e) {
    goog.net.xpc.logger.info("receive_() failed: " + e);
    goog.net.xpc.IframePollingTransport.receivers_[i].transport_.channel_.notifyTransportError_();
    if(!goog.net.xpc.IframePollingTransport.receivers_.length) {
      return
    }
  }
  var now = goog.now();
  if(rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t)
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.net.xpc.logger.fine("starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if(goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_)
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_)
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if(goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url
    }else {
      this.sendFrame_.location.replace(url)
    }
  }catch(e) {
    goog.net.xpc.logger.severe("sending failed", e)
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if(loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if(payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload))
    }
    return true
  }else {
    return false
  }
};
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this)
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.iframeElm_ = this.channel_.iframeElement_;
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this)
  }else {
    this.attemptSetup_()
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if(!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement
    }
    if(this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(retry) {
    if(!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this)
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected_()
  }else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if(!this.recursive_ && this.queue_.length == 0) {
    this.channel_.deliver_(serviceName, payload)
  }else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if(this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1)
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while(this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.deliver_(msg.serviceName, msg.payload)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_()
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if(goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if(!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_()
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while(goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.net.xpc.logger.finest("iframe removed")
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_()
  }
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if(!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP)
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if(!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  }else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if(!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0}
    }
    if(goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if(fragmentInfo.received != fragmentInfo.expected) {
      return
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr]
  }
  goog.net.xpc.channels_[channelName].deliver_(service, decodeURIComponent(payload))
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if(payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected_()
  }else {
    if(payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected_()
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if(goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for(var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr)
    }
  }else {
    this.send_(service, encodedPayload)
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if(goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    div.innerHTML = '<iframe onload="this.xpcOnload()"></iframe>';
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_
  }else {
    var ifr = this.getWindow().document.createElement("iframe");
    if(goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr})
    }else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_)
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if(this.peerIframeId_) {
    url += "," + this.peerIframeId_
  }
  url += "|" + service;
  if(opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.net.xpc.logger.finest("msg sent: " + url)
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.net.xpc.logger.finest("iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0)
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerHostname_ = peerHostname || "*"
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if(!goog.isNumber(value)) {
    value = 0
  }
  if(value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if(!goog.isString(data)) {
    return false
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if(headDelim == -1 || serviceDelim == -1) {
    return false
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.net.xpc.logger.fine("messageReceived: channel=" + channelName + ", service=" + service + ", payload=" + payload);
  var channel = goog.net.xpc.channels_[channelName];
  if(channel) {
    channel.deliver_(service, payload, msgEvt.getBrowserEvent().origin);
    return true
  }
  for(var staleChannelName in goog.net.xpc.channels_) {
    var staleChannel = goog.net.xpc.channels_[staleChannelName];
    if(staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && payload == goog.net.xpc.SETUP) {
      goog.net.xpc.logger.fine("changing channel name to " + channelName);
      staleChannel.name = channelName;
      delete goog.net.xpc.channels_[staleChannelName];
      goog.net.xpc.channels_[channelName] = staleChannel;
      staleChannel.deliver_(service, payload);
      return true
    }
  }
  goog.net.xpc.logger.info('channel name mismatch; message ignored"');
  return false
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  switch(payload) {
    case goog.net.xpc.SETUP:
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      break;
    case goog.net.xpc.SETUP_ACK_:
      this.channel_.notifyConnected_();
      break
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.connectWithRetries_()
};
goog.net.xpc.NativeMessagingTransport.prototype.connectWithRetries_ = function() {
  if(this.channel_.isConnected() || this.isDisposed()) {
    return
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  this.getWindow().setTimeout(goog.bind(this.connectWithRetries_, this), 100)
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.peerWindowObject_;
  if(!win) {
    goog.net.xpc.logger.fine("send(): window not ready");
    return
  }
  var obj = win.postMessage ? win : win.document;
  this.send = function(service, payload) {
    goog.net.xpc.logger.fine("send(): payload=" + payload + " to hostname=" + this.peerHostname_);
    obj.postMessage(this.channel_.name + "|" + service + ":" + payload, this.peerHostname_)
  };
  this.send(service, payload)
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if(value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
    }
  }
  delete this.send
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.reflect");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var isSupported = false;
  try {
    var oldOpener = window.opener;
    window.opener = {};
    isSupported = goog.reflect.canAccessProperty(window, "opener");
    window.opener = oldOpener
  }catch(e) {
  }
  return isSupported
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if(listenWindow["nix_setup_complete"]) {
    return
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport = transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth = auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken = m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap = New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " = wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting global setup: " + e)
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.attemptOuterSetup_()
  }else {
    this.attemptInnerSetup_()
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  var innerFrame = this.channel_.iframeElement_;
  try {
    innerFrame.contentWindow.opener = this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_);
    this.localSetupCompleted_ = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  try {
    var opener = this.getWindow().opener;
    if(opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if(remoteAuthToken != this.remoteAuthToken_) {
        goog.net.xpc.logger.severe("Invalid auth token from other party");
        return
      }
      this.nixChannel_["CreateChannel"](this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
    return
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if(typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.net.xpc.logger.severe("Invalid NIX channel given to createChannel_")
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if(remoteAuthToken != this.remoteAuthToken_) {
    goog.net.xpc.logger.severe("Invalid auth token from other party");
    return
  }
  this.channel_.notifyConnected_()
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  function deliveryHandler() {
    this.channel_.deliver_(serviceName, payload)
  }
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1)
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if(typeof this.nixChannel_ !== "unknown") {
    goog.net.xpc.logger.severe("NIX channel not connected")
  }
  this.nixChannel_["SendMessage"](service, payload)
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.nixChannel_ = null
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Disposable");
goog.require("goog.Uri");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.json");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.base(this);
  for(var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if(uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels_[this.name] = this;
  goog.events.listen(window, "unload", goog.net.xpc.CrossPageChannel.disposeAll_);
  goog.net.xpc.logger.info("CrossPageChannel created: " + this.name)
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if(goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING
  }else {
    if(goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD
    }else {
      if(goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY
      }else {
        if(goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported()) {
          transportType = goog.net.xpc.TransportTypes.NIX
        }else {
          transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING
        }
      }
    }
  }
  return transportType
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if(this.transport_) {
    return
  }
  if(!this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    this.cfg_[goog.net.xpc.CfgFields.TRANSPORT] = this.determineTransportType_()
  }
  switch(this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME], this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break
  }
  if(this.transport_) {
    goog.net.xpc.logger.info("Transport created: " + this.transport_.getName())
  }else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType()
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName()
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]
  }
  return peerCfg
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4)
  }
  var iframeElm = goog.dom.createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if(opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm)
  }else {
    iframeElm.style.width = iframeElm.style.height = "100%"
  }
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if(goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri)
  }
  if(opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()))
  }
  if(goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    this.deferConnect_ = true;
    window.setTimeout(goog.bind(function() {
      this.deferConnect_ = false;
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")");
      if(this.connectDeferred_) {
        this.connect(this.connectCb_)
      }
    }, this), 1)
  }else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")")
  }
  return iframeElm
};
goog.net.xpc.CrossPageChannel.prototype.deferConnect_ = false;
goog.net.xpc.CrossPageChannel.prototype.connectDeferred_ = false;
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if(this.deferConnect_) {
    goog.net.xpc.logger.info("connect() deferred");
    this.connectDeferred_ = true;
    return
  }
  this.connectDeferred_ = false;
  goog.net.xpc.logger.info("connect()");
  if(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID])
  }
  if(this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if(!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]]
    }
    this.setPeerWindowObject(winObj)
  }
  if(!this.peerWindowObject_) {
    if(window == top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    }else {
      this.setPeerWindowObject(window.parent)
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while(this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()()
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  if(!this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  this.transport_.dispose();
  this.transport_ = null;
  this.connectCb_ = null;
  this.connectDeferred_ = false;
  this.deferredDeliveries_.length = 0;
  goog.net.xpc.logger.info('Channel "' + this.name + '" closed')
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = function() {
  if(this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.net.xpc.logger.info('Channel "' + this.name + '" connected');
  this.connectCb_()
};
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError_ = function() {
  goog.net.xpc.logger.info("Transport Error");
  this.close()
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if(!this.isConnected()) {
    goog.net.xpc.logger.severe("Can't send. Channel not connected.");
    return
  }
  if(Boolean(this.peerWindowObject_.closed)) {
    goog.net.xpc.logger.severe("Peer has disappeared.");
    this.close();
    return
  }
  if(goog.isObject(payload)) {
    payload = goog.json.serialize(payload)
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload)
};
goog.net.xpc.CrossPageChannel.prototype.deliver_ = function(serviceName, payload, opt_origin) {
  if(this.connectDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.deliver_, this, serviceName, payload, opt_origin));
    return
  }
  if(!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.net.xpc.logger.warning('Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return
  }
  if(this.isDisposed()) {
    goog.net.xpc.logger.warning("CrossPageChannel::deliver_(): Disposed.")
  }else {
    if(!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload)
    }else {
      if(this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload)
      }else {
        goog.net.xpc.logger.info("CrossPageChannel::deliver_(): Not connected.")
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name
  }
  return name.replace(/[%:|]/g, encodeURIComponent)
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1)
  }else {
    return name
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME]
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels_[this.name];
  this.deferredDeliveries_.length = 0
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for(var name in goog.net.xpc.channels_) {
    var ch = goog.net.xpc.channels_[name];
    if(ch) {
      ch.dispose()
    }
  }
};
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.json");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11285) {
  var vec__11286__11287 = p__11285;
  var k__11288 = cljs.core.nth.call(null, vec__11286__11287, 0, null);
  var v__11289 = cljs.core.nth.call(null, vec__11286__11287, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11288.toLowerCase()), v__11289], true)
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
void 0;
clojure.browser.net.IConnection = {};
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if(function() {
      var and__3822__auto____11302 = this$;
      if(and__3822__auto____11302) {
        return this$.clojure$browser$net$IConnection$connect$arity$1
      }else {
        return and__3822__auto____11302
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$)
    }else {
      return function() {
        var or__3824__auto____11303 = clojure.browser.net.connect[goog.typeOf(this$)];
        if(or__3824__auto____11303) {
          return or__3824__auto____11303
        }else {
          var or__3824__auto____11304 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11304) {
            return or__3824__auto____11304
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var connect__2 = function(this$, opt1) {
    if(function() {
      var and__3822__auto____11305 = this$;
      if(and__3822__auto____11305) {
        return this$.clojure$browser$net$IConnection$connect$arity$2
      }else {
        return and__3822__auto____11305
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1)
    }else {
      return function() {
        var or__3824__auto____11306 = clojure.browser.net.connect[goog.typeOf(this$)];
        if(or__3824__auto____11306) {
          return or__3824__auto____11306
        }else {
          var or__3824__auto____11307 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11307) {
            return or__3824__auto____11307
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1)
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if(function() {
      var and__3822__auto____11308 = this$;
      if(and__3822__auto____11308) {
        return this$.clojure$browser$net$IConnection$connect$arity$3
      }else {
        return and__3822__auto____11308
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2)
    }else {
      return function() {
        var or__3824__auto____11309 = clojure.browser.net.connect[goog.typeOf(this$)];
        if(or__3824__auto____11309) {
          return or__3824__auto____11309
        }else {
          var or__3824__auto____11310 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11310) {
            return or__3824__auto____11310
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2)
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if(function() {
      var and__3822__auto____11311 = this$;
      if(and__3822__auto____11311) {
        return this$.clojure$browser$net$IConnection$connect$arity$4
      }else {
        return and__3822__auto____11311
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3)
    }else {
      return function() {
        var or__3824__auto____11312 = clojure.browser.net.connect[goog.typeOf(this$)];
        if(or__3824__auto____11312) {
          return or__3824__auto____11312
        }else {
          var or__3824__auto____11313 = clojure.browser.net.connect["_"];
          if(or__3824__auto____11313) {
            return or__3824__auto____11313
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3)
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3)
    }
    throw"Invalid arity: " + arguments.length;
  };
  connect.cljs$lang$arity$1 = connect__1;
  connect.cljs$lang$arity$2 = connect__2;
  connect.cljs$lang$arity$3 = connect__3;
  connect.cljs$lang$arity$4 = connect__4;
  return connect
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if(function() {
      var and__3822__auto____11329 = this$;
      if(and__3822__auto____11329) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2
      }else {
        return and__3822__auto____11329
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt)
    }else {
      return function() {
        var or__3824__auto____11330 = clojure.browser.net.transmit[goog.typeOf(this$)];
        if(or__3824__auto____11330) {
          return or__3824__auto____11330
        }else {
          var or__3824__auto____11331 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11331) {
            return or__3824__auto____11331
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt)
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if(function() {
      var and__3822__auto____11332 = this$;
      if(and__3822__auto____11332) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3
      }else {
        return and__3822__auto____11332
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2)
    }else {
      return function() {
        var or__3824__auto____11333 = clojure.browser.net.transmit[goog.typeOf(this$)];
        if(or__3824__auto____11333) {
          return or__3824__auto____11333
        }else {
          var or__3824__auto____11334 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11334) {
            return or__3824__auto____11334
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2)
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if(function() {
      var and__3822__auto____11335 = this$;
      if(and__3822__auto____11335) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4
      }else {
        return and__3822__auto____11335
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3)
    }else {
      return function() {
        var or__3824__auto____11336 = clojure.browser.net.transmit[goog.typeOf(this$)];
        if(or__3824__auto____11336) {
          return or__3824__auto____11336
        }else {
          var or__3824__auto____11337 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11337) {
            return or__3824__auto____11337
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3)
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if(function() {
      var and__3822__auto____11338 = this$;
      if(and__3822__auto____11338) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5
      }else {
        return and__3822__auto____11338
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4)
    }else {
      return function() {
        var or__3824__auto____11339 = clojure.browser.net.transmit[goog.typeOf(this$)];
        if(or__3824__auto____11339) {
          return or__3824__auto____11339
        }else {
          var or__3824__auto____11340 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11340) {
            return or__3824__auto____11340
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4)
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if(function() {
      var and__3822__auto____11341 = this$;
      if(and__3822__auto____11341) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6
      }else {
        return and__3822__auto____11341
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5)
    }else {
      return function() {
        var or__3824__auto____11342 = clojure.browser.net.transmit[goog.typeOf(this$)];
        if(or__3824__auto____11342) {
          return or__3824__auto____11342
        }else {
          var or__3824__auto____11343 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____11343) {
            return or__3824__auto____11343
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5)
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5)
    }
    throw"Invalid arity: " + arguments.length;
  };
  transmit.cljs$lang$arity$2 = transmit__2;
  transmit.cljs$lang$arity$3 = transmit__3;
  transmit.cljs$lang$arity$4 = transmit__4;
  transmit.cljs$lang$arity$5 = transmit__5;
  transmit.cljs$lang$arity$6 = transmit__6;
  return transmit
}();
clojure.browser.net.close = function close(this$) {
  if(function() {
    var and__3822__auto____11347 = this$;
    if(and__3822__auto____11347) {
      return this$.clojure$browser$net$IConnection$close$arity$1
    }else {
      return and__3822__auto____11347
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$)
  }else {
    return function() {
      var or__3824__auto____11348 = clojure.browser.net.close[goog.typeOf(this$)];
      if(or__3824__auto____11348) {
        return or__3824__auto____11348
      }else {
        var or__3824__auto____11349 = clojure.browser.net.close["_"];
        if(or__3824__auto____11349) {
          return or__3824__auto____11349
        }else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$)
  }
};
void 0;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11350) {
    var vec__11351__11352 = p__11350;
    var k__11353 = cljs.core.nth.call(null, vec__11351__11352, 0, null);
    var v__11354 = cljs.core.nth.call(null, vec__11351__11352, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11353.toLowerCase()), v__11354], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))))
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  return clojure.browser.net.transmit.call(null, this$, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  this$.setTimeoutInterval(timeout);
  return this$.send(uri, method, content, headers)
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__11355) {
  var vec__11356__11357 = p__11355;
  var k__11358 = cljs.core.nth.call(null, vec__11356__11357, 0, null);
  var v__11359 = cljs.core.nth.call(null, vec__11356__11357, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__11358.toLowerCase()), v__11359], true)
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo
};
void 0;
clojure.browser.net.ICrossPageChannel = {};
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if(function() {
      var and__3822__auto____11366 = this$;
      if(and__3822__auto____11366) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3
      }else {
        return and__3822__auto____11366
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn)
    }else {
      return function() {
        var or__3824__auto____11367 = clojure.browser.net.register_service[goog.typeOf(this$)];
        if(or__3824__auto____11367) {
          return or__3824__auto____11367
        }else {
          var or__3824__auto____11368 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____11368) {
            return or__3824__auto____11368
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn)
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if(function() {
      var and__3822__auto____11369 = this$;
      if(and__3822__auto____11369) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4
      }else {
        return and__3822__auto____11369
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_)
    }else {
      return function() {
        var or__3824__auto____11370 = clojure.browser.net.register_service[goog.typeOf(this$)];
        if(or__3824__auto____11370) {
          return or__3824__auto____11370
        }else {
          var or__3824__auto____11371 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____11371) {
            return or__3824__auto____11371
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_)
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  register_service.cljs$lang$arity$3 = register_service__3;
  register_service.cljs$lang$arity$4 = register_service__4;
  return register_service
}();
void 0;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  return clojure.browser.net.connect.call(null, this$, null)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  return clojure.browser.net.connect.call(null, this$, on_connect_fn, config_iframe_fn, document.body)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  this$.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  return this$.send(cljs.core.name.call(null, service_name), payload)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  return this$.close(cljs.core.List.EMPTY)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  return clojure.browser.net.register_service.call(null, this$, service_name, fn, false)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  return this$.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_)
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__3974__auto____11383 = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if(cljs.core.truth_(temp__3974__auto____11383)) {
      var config__11384 = temp__3974__auto____11383;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config__11384))
    }else {
      return null
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__11385) {
      var vec__11386__11387 = p__11385;
      var k__11388 = cljs.core.nth.call(null, vec__11386__11387, 0, null);
      var v__11389 = cljs.core.nth.call(null, vec__11386__11387, 1, null);
      var temp__3971__auto____11390 = cljs.core._lookup.call(null, clojure.browser.net.xpc_config_fields, k__11388, null);
      if(cljs.core.truth_(temp__3971__auto____11390)) {
        var field__11391 = temp__3971__auto____11390;
        var G__11392__11393 = sum;
        G__11392__11393[field__11391] = v__11389;
        return G__11392__11393
      }else {
        return sum
      }
    }, {}, config))
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config)
    }
    throw"Invalid arity: " + arguments.length;
  };
  xpc_connection.cljs$lang$arity$0 = xpc_connection__0;
  xpc_connection.cljs$lang$arity$1 = xpc_connection__1;
  return xpc_connection
}();
goog.provide("pacman.pacman");
goog.require("cljs.core");
goog.require("pacman.util");
goog.require("pacman.core");
goog.require("pacman.util.canvas");
goog.require("pacman.maze");
pacman.pacman.animate = function animate(p__7147) {
  var p__7159 = p__7147;
  var p__7160 = cljs.core.seq_QMARK_.call(null, p__7159) ? cljs.core.apply.call(null, cljs.core.hash_map, p__7159) : p__7159;
  var was_opening_QMARK___7161 = cljs.core._lookup.call(null, p__7160, "\ufdd0'opening?", null);
  var prev_open__7162 = cljs.core._lookup.call(null, p__7160, "\ufdd0'open", null);
  var max_opening__7163 = 0.4;
  var increment__7164 = max_opening__7163 / pacman.core.seconds__GT_ticks.call(null, 0.08);
  var open__7165 = cljs.core.truth_(was_opening_QMARK___7161) ? max_opening__7163 < prev_open__7162 + increment__7164 ? max_opening__7163 : prev_open__7162 + increment__7164 : 0 > prev_open__7162 - increment__7164 ? 0 : prev_open__7162 - increment__7164;
  var opening_QMARK___7169 = function() {
    var or__3824__auto____7167 = function() {
      var and__3822__auto____7166 = was_opening_QMARK___7161;
      if(cljs.core.truth_(and__3822__auto____7166)) {
        return open__7165 < max_opening__7163
      }else {
        return and__3822__auto____7166
      }
    }();
    if(cljs.core.truth_(or__3824__auto____7167)) {
      return or__3824__auto____7167
    }else {
      var and__3822__auto____7168 = cljs.core.not.call(null, was_opening_QMARK___7161);
      if(and__3822__auto____7168) {
        return open__7165 <= 0
      }else {
        return and__3822__auto____7168
      }
    }
  }();
  return cljs.core.assoc.call(null, p__7160, "\ufdd0'open", open__7165, "\ufdd0'opening?", opening_QMARK___7169)
};
pacman.pacman.speed = function speed(level, frightened_QMARK_) {
  return 60 / pacman.core.hz * (cljs.core.truth_(frightened_QMARK_) ? cljs.core._EQ_.call(null, level, 1) ? 0.9 : level < 5 ? 0.95 : "\ufdd0'else" ? 1 : null : cljs.core._EQ_.call(null, level, 1) ? 0.8 : function() {
    var or__3824__auto____7171 = level < 5;
    if(or__3824__auto____7171) {
      return or__3824__auto____7171
    }else {
      return 20 < level
    }
  }() ? 0.9 : "\ufdd0'else" ? 1 : null)
};
pacman.pacman.tile_centre = function tile_centre(col, row) {
  return cljs.core.ObjMap.fromObject(["\ufdd0'col", "\ufdd0'row"], {"\ufdd0'col":Math.floor.call(null, col) + 0.5, "\ufdd0'row":Math.floor.call(null, row) + 0.5})
};
pacman.pacman.tile_beyond = function tile_beyond(col, row, direction) {
  return cljs.core.ObjMap.fromObject(["\ufdd0'col", "\ufdd0'row"], {"\ufdd0'col":Math.round.call(null, col) + (pacman.core.direction__GT_x.call(null, direction) - 1) / 2, "\ufdd0'row":Math.round.call(null, row) + (pacman.core.direction__GT_y.call(null, direction) - 1) / 2})
};
pacman.pacman.move = function move(x, y, direction, speed) {
  var dx__7196 = pacman.core.direction__GT_x.call(null, direction);
  var dy__7197 = pacman.core.direction__GT_y.call(null, direction);
  var moving_horizontally_QMARK___7198 = dy__7197 === 0;
  var moving_vertically_QMARK___7199 = dx__7196 === 0;
  var new_x__7200 = x + speed * dx__7196;
  var new_y__7201 = y + speed * dy__7197;
  var new_col__7202 = pacman.core.x__GT_col.call(null, new_x__7200);
  var new_row__7203 = pacman.core.y__GT_row.call(null, new_y__7201);
  var tile_centre__7204 = pacman.pacman.tile_centre.call(null, new_col__7202, new_row__7203);
  var tile_centre_x__7205 = pacman.core.col__GT_x.call(null, (new cljs.core.Keyword("\ufdd0'col")).call(null, tile_centre__7204));
  var tile_centre_y__7206 = pacman.core.row__GT_y.call(null, (new cljs.core.Keyword("\ufdd0'row")).call(null, tile_centre__7204));
  var next_tile__7207 = pacman.pacman.tile_beyond.call(null, new_col__7202, new_row__7203, direction);
  var temp__3971__auto____7211 = cljs.core.truth_(pacman.maze.traversable_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'col")).call(null, next_tile__7207), (new cljs.core.Keyword("\ufdd0'row")).call(null, next_tile__7207))) ? cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'y"], {"\ufdd0'x":new_x__7200, "\ufdd0'y":new_y__7201}) : function() {
    var centred_x__7208 = moving_horizontally_QMARK___7198 ? tile_centre_x__7205 : x;
    var centred_y__7209 = moving_vertically_QMARK___7199 ? tile_centre_y__7206 : y;
    if(function() {
      var or__3824__auto____7210 = cljs.core.not_EQ_.call(null, x, centred_x__7208);
      if(or__3824__auto____7210) {
        return or__3824__auto____7210
      }else {
        return cljs.core.not_EQ_.call(null, y, centred_y__7209)
      }
    }()) {
      return cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'y"], {"\ufdd0'x":centred_x__7208, "\ufdd0'y":centred_y__7209})
    }else {
      return null
    }
  }();
  if(cljs.core.truth_(temp__3971__auto____7211)) {
    var new_pos__7212 = temp__3971__auto____7211;
    var map__7213__7214 = new_pos__7212;
    var map__7213__7215 = cljs.core.seq_QMARK_.call(null, map__7213__7214) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7213__7214) : map__7213__7214;
    var y__7216 = cljs.core._lookup.call(null, map__7213__7215, "\ufdd0'y", null);
    var x__7217 = cljs.core._lookup.call(null, map__7213__7215, "\ufdd0'x", null);
    var min_offset__7218 = function(p1__7172_SHARP_) {
      return pacman.util.sign.call(null, p1__7172_SHARP_) * (speed < Math.abs.call(null, p1__7172_SHARP_) ? speed : Math.abs.call(null, p1__7172_SHARP_))
    };
    return cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'y"], {"\ufdd0'x":x__7217 + (moving_horizontally_QMARK___7198 ? 0 : min_offset__7218.call(null, tile_centre_x__7205 - x__7217)), "\ufdd0'y":y__7216 + (moving_vertically_QMARK___7199 ? 0 : min_offset__7218.call(null, tile_centre_y__7206 - y__7216))})
  }else {
    return null
  }
};
pacman.pacman.update = function update(p__7220, new_direction) {
  var state__7242 = p__7220;
  var state__7243 = cljs.core.seq_QMARK_.call(null, state__7242) ? cljs.core.apply.call(null, cljs.core.hash_map, state__7242) : state__7242;
  var pacman__7244 = cljs.core._lookup.call(null, state__7243, "\ufdd0'pacman", null);
  var pacman__7245 = cljs.core.seq_QMARK_.call(null, pacman__7244) ? cljs.core.apply.call(null, cljs.core.hash_map, pacman__7244) : pacman__7244;
  var direction__7246 = cljs.core._lookup.call(null, pacman__7245, "\ufdd0'direction", null);
  var y__7247 = cljs.core._lookup.call(null, pacman__7245, "\ufdd0'y", null);
  var x__7248 = cljs.core._lookup.call(null, pacman__7245, "\ufdd0'x", null);
  var speed__7249 = pacman.pacman.speed.call(null, (new cljs.core.Keyword("\ufdd0'level")).call(null, state__7243), false);
  var try_move__7252 = function(direction) {
    var temp__3971__auto____7250 = pacman.pacman.move.call(null, x__7248, y__7247, direction, speed__7249);
    if(cljs.core.truth_(temp__3971__auto____7250)) {
      var pos__7251 = temp__3971__auto____7250;
      return pacman.pacman.animate.call(null, cljs.core.assoc.call(null, cljs.core.merge.call(null, pacman__7245, pos__7251), "\ufdd0'direction", direction))
    }else {
      return null
    }
  };
  var temp__3971__auto____7254 = function() {
    var or__3824__auto____7253 = cljs.core.truth_(new_direction) ? try_move__7252.call(null, new_direction) : null;
    if(cljs.core.truth_(or__3824__auto____7253)) {
      return or__3824__auto____7253
    }else {
      return try_move__7252.call(null, direction__7246)
    }
  }();
  if(cljs.core.truth_(temp__3971__auto____7254)) {
    var moved__7255 = temp__3971__auto____7254;
    var map__7256__7257 = pacman.core.boundary.call(null, pacman__7245);
    var map__7256__7258 = cljs.core.seq_QMARK_.call(null, map__7256__7257) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7256__7257) : map__7256__7257;
    var old_x__7259 = cljs.core._lookup.call(null, map__7256__7258, "\ufdd0'x", null);
    var old_y__7260 = cljs.core._lookup.call(null, map__7256__7258, "\ufdd0'y", null);
    var w__7261 = cljs.core._lookup.call(null, map__7256__7258, "\ufdd0'w", null);
    var h__7262 = cljs.core._lookup.call(null, map__7256__7258, "\ufdd0'h", null);
    return cljs.core.assoc.call(null, pacman.core.invalidate_region.call(null, state__7243, old_x__7259 - 1, old_y__7260 - 1, w__7261 + 2, h__7262 + 2), "\ufdd0'pacman", cljs.core.assoc.call(null, moved__7255, "\ufdd0'invalidated?", true))
  }else {
    return state__7243
  }
};
pacman.pacman.angle = cljs.core.zipmap.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'east", "\ufdd0'south", "\ufdd0'west", "\ufdd0'north"], true), cljs.core.iterate.call(null, function(p1__7219_SHARP_) {
  return Math.PI / 2 + p1__7219_SHARP_
}, 0));
pacman.pacman.draw_BANG_ = function draw_BANG_(ctx, centre_x, centre_y, offset_x, offset_y, radius, direction, open) {
  var angle__7265 = pacman.pacman.angle.call(null, direction);
  var open_angle__7266 = Math.PI * open;
  return pacman.util.canvas.with_properties_STAR_.call(null, ctx, cljs.core.ObjMap.fromObject(["\ufdd0'fill-style"], {"\ufdd0'fill-style":"yellow"}), function() {
    pacman.util.canvas.with_path_STAR_.call(null, ctx, function() {
      return pacman.util.canvas.arc_BANG_.call(null, pacman.util.canvas.move_BANG_.call(null, ctx, centre_x + offset_x, centre_y + offset_y), centre_x, centre_y, radius, angle__7265 + open_angle__7266, angle__7265 + (2 * Math.PI - open_angle__7266))
    });
    return pacman.util.canvas.fill_BANG_.call(null, ctx)
  })
};
var diameter__7267 = 1.5 * pacman.core.tile_size;
var radius__7268 = diameter__7267 / 2;
var centre_offset__7269 = radius__7268 / 4;
pacman.pacman.Pacman = function(x, y, direction, opening_QMARK_, open, __meta, __extmap) {
  this.x = x;
  this.y = y;
  this.direction = direction;
  this.opening_QMARK_ = opening_QMARK_;
  this.open = open;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054858;
  if(arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
pacman.pacman.Pacman.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2299__auto__) {
  var this__7273 = this;
  var h__2173__auto____7274 = this__7273.__hash;
  if(!(h__2173__auto____7274 == null)) {
    return h__2173__auto____7274
  }else {
    var h__2173__auto____7275 = cljs.core.hash_imap.call(null, this__2299__auto__);
    this__7273.__hash = h__2173__auto____7275;
    return h__2173__auto____7275
  }
};
pacman.pacman.Pacman.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2304__auto__, k__2305__auto__) {
  var this__7276 = this;
  return this__2304__auto__.cljs$core$ILookup$_lookup$arity$3(this__2304__auto__, k__2305__auto__, null)
};
pacman.pacman.Pacman.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2306__auto__, k7271, else__2307__auto__) {
  var this__7277 = this;
  if(k7271 === "\ufdd0'x") {
    return this__7277.x
  }else {
    if(k7271 === "\ufdd0'y") {
      return this__7277.y
    }else {
      if(k7271 === "\ufdd0'direction") {
        return this__7277.direction
      }else {
        if(k7271 === "\ufdd0'opening?") {
          return this__7277.opening_QMARK_
        }else {
          if(k7271 === "\ufdd0'open") {
            return this__7277.open
          }else {
            if("\ufdd0'else") {
              return cljs.core._lookup.call(null, this__7277.__extmap, k7271, else__2307__auto__)
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
pacman.pacman.Pacman.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2311__auto__, k__2312__auto__, G__7270) {
  var this__7278 = this;
  var pred__7279__7282 = cljs.core.identical_QMARK_;
  var expr__7280__7283 = k__2312__auto__;
  if(pred__7279__7282.call(null, "\ufdd0'x", expr__7280__7283)) {
    return new pacman.pacman.Pacman(G__7270, this__7278.y, this__7278.direction, this__7278.opening_QMARK_, this__7278.open, this__7278.__meta, this__7278.__extmap, null)
  }else {
    if(pred__7279__7282.call(null, "\ufdd0'y", expr__7280__7283)) {
      return new pacman.pacman.Pacman(this__7278.x, G__7270, this__7278.direction, this__7278.opening_QMARK_, this__7278.open, this__7278.__meta, this__7278.__extmap, null)
    }else {
      if(pred__7279__7282.call(null, "\ufdd0'direction", expr__7280__7283)) {
        return new pacman.pacman.Pacman(this__7278.x, this__7278.y, G__7270, this__7278.opening_QMARK_, this__7278.open, this__7278.__meta, this__7278.__extmap, null)
      }else {
        if(pred__7279__7282.call(null, "\ufdd0'opening?", expr__7280__7283)) {
          return new pacman.pacman.Pacman(this__7278.x, this__7278.y, this__7278.direction, G__7270, this__7278.open, this__7278.__meta, this__7278.__extmap, null)
        }else {
          if(pred__7279__7282.call(null, "\ufdd0'open", expr__7280__7283)) {
            return new pacman.pacman.Pacman(this__7278.x, this__7278.y, this__7278.direction, this__7278.opening_QMARK_, G__7270, this__7278.__meta, this__7278.__extmap, null)
          }else {
            return new pacman.pacman.Pacman(this__7278.x, this__7278.y, this__7278.direction, this__7278.opening_QMARK_, this__7278.open, this__7278.__meta, cljs.core.assoc.call(null, this__7278.__extmap, k__2312__auto__, G__7270), null)
          }
        }
      }
    }
  }
};
pacman.pacman.Pacman.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2309__auto__, entry__2310__auto__) {
  var this__7284 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2310__auto__)) {
    return this__2309__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2309__auto__, cljs.core._nth.call(null, entry__2310__auto__, 0), cljs.core._nth.call(null, entry__2310__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2309__auto__, entry__2310__auto__)
  }
};
pacman.pacman.Pacman.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2316__auto__) {
  var this__7285 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'x", this__7285.x), cljs.core.vector.call(null, "\ufdd0'y", this__7285.y), cljs.core.vector.call(null, "\ufdd0'direction", this__7285.direction), cljs.core.vector.call(null, "\ufdd0'opening?", this__7285.opening_QMARK_), cljs.core.vector.call(null, "\ufdd0'open", this__7285.open)], true), this__7285.__extmap))
};
pacman.pacman.Pacman.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2318__auto__, opts__2319__auto__) {
  var this__7286 = this;
  var pr_pair__2320__auto____7287 = function(keyval__2321__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2319__auto__, keyval__2321__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2320__auto____7287, [cljs.core.str("#"), cljs.core.str("Pacman"), cljs.core.str("{")].join(""), ", ", "}", opts__2319__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'x", this__7286.x), cljs.core.vector.call(null, "\ufdd0'y", this__7286.y), cljs.core.vector.call(null, "\ufdd0'direction", this__7286.direction), cljs.core.vector.call(null, "\ufdd0'opening?", this__7286.opening_QMARK_), 
  cljs.core.vector.call(null, "\ufdd0'open", this__7286.open)], true), this__7286.__extmap))
};
pacman.pacman.Pacman.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2308__auto__) {
  var this__7288 = this;
  return 5 + cljs.core.count.call(null, this__7288.__extmap)
};
pacman.pacman.Pacman.prototype.pacman$core$Sprite$ = true;
pacman.pacman.Pacman.prototype.pacman$core$Sprite$boundary$arity$1 = function(_) {
  var this__7289 = this;
  return cljs.core.ObjMap.fromObject(["\ufdd0'x", "\ufdd0'y", "\ufdd0'w", "\ufdd0'h"], {"\ufdd0'x":this__7289.x - radius__7268, "\ufdd0'y":this__7289.y - radius__7268, "\ufdd0'w":diameter__7267, "\ufdd0'h":diameter__7267})
};
pacman.pacman.Pacman.prototype.pacman$core$Sprite$draw_sprite_BANG_$arity$2 = function(_, ctx) {
  var this__7290 = this;
  return pacman.pacman.draw_BANG_.call(null, ctx, this__7290.x, this__7290.y, centre_offset__7269 * -pacman.core.direction__GT_x.call(null, this__7290.direction), centre_offset__7269 * -pacman.core.direction__GT_y.call(null, this__7290.direction), radius__7268, this__7290.direction, this__7290.open)
};
pacman.pacman.Pacman.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2300__auto__, other__2301__auto__) {
  var this__7291 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____7292 = other__2301__auto__;
    if(cljs.core.truth_(and__3822__auto____7292)) {
      var and__3822__auto____7293 = this__2300__auto__.constructor === other__2301__auto__.constructor;
      if(and__3822__auto____7293) {
        return cljs.core.equiv_map.call(null, this__2300__auto__, other__2301__auto__)
      }else {
        return and__3822__auto____7293
      }
    }else {
      return and__3822__auto____7292
    }
  }())) {
    return true
  }else {
    return false
  }
};
pacman.pacman.Pacman.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2303__auto__, G__7270) {
  var this__7294 = this;
  return new pacman.pacman.Pacman(this__7294.x, this__7294.y, this__7294.direction, this__7294.opening_QMARK_, this__7294.open, G__7270, this__7294.__extmap, this__7294.__hash)
};
pacman.pacman.Pacman.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2302__auto__) {
  var this__7295 = this;
  return this__7295.__meta
};
pacman.pacman.Pacman.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2313__auto__, k__2314__auto__) {
  var this__7296 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.set(["\ufdd0'direction", "\ufdd0'y", "\ufdd0'x", "\ufdd0'opening?", "\ufdd0'open"]), k__2314__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2313__auto__), this__7296.__meta), k__2314__auto__)
  }else {
    return new pacman.pacman.Pacman(this__7296.x, this__7296.y, this__7296.direction, this__7296.opening_QMARK_, this__7296.open, this__7296.__meta, this__7296.__hash, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__7296.__extmap, k__2314__auto__)), null)
  }
};
pacman.pacman.Pacman.cljs$lang$type = true;
pacman.pacman.Pacman.cljs$lang$ctorPrSeq = function(this__2338__auto__) {
  return cljs.core.list.call(null, "pacman.pacman/Pacman")
};
pacman.pacman.__GT_Pacman = function __GT_Pacman(x, y, direction, opening_QMARK_, open) {
  return new pacman.pacman.Pacman(x, y, direction, opening_QMARK_, open)
};
pacman.pacman.map__GT_Pacman = function map__GT_Pacman(G__7272) {
  return new pacman.pacman.Pacman((new cljs.core.Keyword("\ufdd0'x")).call(null, G__7272), (new cljs.core.Keyword("\ufdd0'y")).call(null, G__7272), (new cljs.core.Keyword("\ufdd0'direction")).call(null, G__7272), (new cljs.core.Keyword("\ufdd0'opening?")).call(null, G__7272), (new cljs.core.Keyword("\ufdd0'open")).call(null, G__7272), null, cljs.core.dissoc.call(null, G__7272, "\ufdd0'x", "\ufdd0'y", "\ufdd0'direction", "\ufdd0'opening?", "\ufdd0'open"))
};
pacman.pacman.Pacman;
pacman.pacman.init = function init() {
  return pacman.pacman.__GT_Pacman.call(null, pacman.core.col__GT_x.call(null, 14), pacman.core.row__GT_y.call(null, 26.5), "\ufdd0'west", true, 0.2)
};
goog.provide("goog.events.KeyCodes");
goog.require("goog.userAgent");
goog.events.KeyCodes = {MAC_ENTER:3, BACKSPACE:8, TAB:9, NUM_CENTER:12, ENTER:13, SHIFT:16, CTRL:17, ALT:18, PAUSE:19, CAPS_LOCK:20, ESC:27, SPACE:32, PAGE_UP:33, PAGE_DOWN:34, END:35, HOME:36, LEFT:37, UP:38, RIGHT:39, DOWN:40, PRINT_SCREEN:44, INSERT:45, DELETE:46, ZERO:48, ONE:49, TWO:50, THREE:51, FOUR:52, FIVE:53, SIX:54, SEVEN:55, EIGHT:56, NINE:57, FF_SEMICOLON:59, QUESTION_MARK:63, A:65, B:66, C:67, D:68, E:69, F:70, G:71, H:72, I:73, J:74, K:75, L:76, M:77, N:78, O:79, P:80, Q:81, R:82, 
S:83, T:84, U:85, V:86, W:87, X:88, Y:89, Z:90, META:91, WIN_KEY_RIGHT:92, CONTEXT_MENU:93, NUM_ZERO:96, NUM_ONE:97, NUM_TWO:98, NUM_THREE:99, NUM_FOUR:100, NUM_FIVE:101, NUM_SIX:102, NUM_SEVEN:103, NUM_EIGHT:104, NUM_NINE:105, NUM_MULTIPLY:106, NUM_PLUS:107, NUM_MINUS:109, NUM_PERIOD:110, NUM_DIVISION:111, F1:112, F2:113, F3:114, F4:115, F5:116, F6:117, F7:118, F8:119, F9:120, F10:121, F11:122, F12:123, NUMLOCK:144, SCROLL_LOCK:145, FIRST_MEDIA_KEY:166, LAST_MEDIA_KEY:183, SEMICOLON:186, DASH:189, 
EQUALS:187, COMMA:188, PERIOD:190, SLASH:191, APOSTROPHE:192, TILDE:192, SINGLE_QUOTE:222, OPEN_SQUARE_BRACKET:219, BACKSLASH:220, CLOSE_SQUARE_BRACKET:221, WIN_KEY:224, MAC_FF_META:224, WIN_IME:229, PHANTOM:255};
goog.events.KeyCodes.isTextModifyingKeyEvent = function(e) {
  if(e.altKey && !e.ctrlKey || e.metaKey || e.keyCode >= goog.events.KeyCodes.F1 && e.keyCode <= goog.events.KeyCodes.F12) {
    return false
  }
  switch(e.keyCode) {
    case goog.events.KeyCodes.ALT:
    ;
    case goog.events.KeyCodes.CAPS_LOCK:
    ;
    case goog.events.KeyCodes.CONTEXT_MENU:
    ;
    case goog.events.KeyCodes.CTRL:
    ;
    case goog.events.KeyCodes.DOWN:
    ;
    case goog.events.KeyCodes.END:
    ;
    case goog.events.KeyCodes.ESC:
    ;
    case goog.events.KeyCodes.HOME:
    ;
    case goog.events.KeyCodes.INSERT:
    ;
    case goog.events.KeyCodes.LEFT:
    ;
    case goog.events.KeyCodes.MAC_FF_META:
    ;
    case goog.events.KeyCodes.META:
    ;
    case goog.events.KeyCodes.NUMLOCK:
    ;
    case goog.events.KeyCodes.NUM_CENTER:
    ;
    case goog.events.KeyCodes.PAGE_DOWN:
    ;
    case goog.events.KeyCodes.PAGE_UP:
    ;
    case goog.events.KeyCodes.PAUSE:
    ;
    case goog.events.KeyCodes.PHANTOM:
    ;
    case goog.events.KeyCodes.PRINT_SCREEN:
    ;
    case goog.events.KeyCodes.RIGHT:
    ;
    case goog.events.KeyCodes.SCROLL_LOCK:
    ;
    case goog.events.KeyCodes.SHIFT:
    ;
    case goog.events.KeyCodes.UP:
    ;
    case goog.events.KeyCodes.WIN_KEY:
    ;
    case goog.events.KeyCodes.WIN_KEY_RIGHT:
      return false;
    default:
      return e.keyCode < goog.events.KeyCodes.FIRST_MEDIA_KEY || e.keyCode > goog.events.KeyCodes.LAST_MEDIA_KEY
  }
};
goog.events.KeyCodes.firesKeyPressEvent = function(keyCode, opt_heldKeyCode, opt_shiftKey, opt_ctrlKey, opt_altKey) {
  if(!goog.userAgent.IE && !(goog.userAgent.WEBKIT && goog.userAgent.isVersion("525"))) {
    return true
  }
  if(goog.userAgent.MAC && opt_altKey) {
    return goog.events.KeyCodes.isCharacterKey(keyCode)
  }
  if(opt_altKey && !opt_ctrlKey) {
    return false
  }
  if(!opt_shiftKey && (opt_heldKeyCode == goog.events.KeyCodes.CTRL || opt_heldKeyCode == goog.events.KeyCodes.ALT)) {
    return false
  }
  if(goog.userAgent.IE && opt_ctrlKey && opt_heldKeyCode == keyCode) {
    return false
  }
  switch(keyCode) {
    case goog.events.KeyCodes.ENTER:
      return!(goog.userAgent.IE && goog.userAgent.isDocumentMode(9));
    case goog.events.KeyCodes.ESC:
      return!goog.userAgent.WEBKIT
  }
  return goog.events.KeyCodes.isCharacterKey(keyCode)
};
goog.events.KeyCodes.isCharacterKey = function(keyCode) {
  if(keyCode >= goog.events.KeyCodes.ZERO && keyCode <= goog.events.KeyCodes.NINE) {
    return true
  }
  if(keyCode >= goog.events.KeyCodes.NUM_ZERO && keyCode <= goog.events.KeyCodes.NUM_MULTIPLY) {
    return true
  }
  if(keyCode >= goog.events.KeyCodes.A && keyCode <= goog.events.KeyCodes.Z) {
    return true
  }
  if(goog.userAgent.WEBKIT && keyCode == 0) {
    return true
  }
  switch(keyCode) {
    case goog.events.KeyCodes.SPACE:
    ;
    case goog.events.KeyCodes.QUESTION_MARK:
    ;
    case goog.events.KeyCodes.NUM_PLUS:
    ;
    case goog.events.KeyCodes.NUM_MINUS:
    ;
    case goog.events.KeyCodes.NUM_PERIOD:
    ;
    case goog.events.KeyCodes.NUM_DIVISION:
    ;
    case goog.events.KeyCodes.SEMICOLON:
    ;
    case goog.events.KeyCodes.FF_SEMICOLON:
    ;
    case goog.events.KeyCodes.DASH:
    ;
    case goog.events.KeyCodes.EQUALS:
    ;
    case goog.events.KeyCodes.COMMA:
    ;
    case goog.events.KeyCodes.PERIOD:
    ;
    case goog.events.KeyCodes.SLASH:
    ;
    case goog.events.KeyCodes.APOSTROPHE:
    ;
    case goog.events.KeyCodes.SINGLE_QUOTE:
    ;
    case goog.events.KeyCodes.OPEN_SQUARE_BRACKET:
    ;
    case goog.events.KeyCodes.BACKSLASH:
    ;
    case goog.events.KeyCodes.CLOSE_SQUARE_BRACKET:
      return true;
    default:
      return false
  }
};
goog.provide("goog.debug.Console");
goog.require("goog.debug.LogManager");
goog.require("goog.debug.Logger.Level");
goog.require("goog.debug.TextFormatter");
goog.debug.Console = function() {
  this.publishHandler_ = goog.bind(this.addLogRecord, this);
  this.formatter_ = new goog.debug.TextFormatter;
  this.formatter_.showAbsoluteTime = false;
  this.formatter_.showExceptionText = false;
  this.isCapturing_ = false;
  this.logBuffer_ = "";
  this.filteredLoggers_ = {}
};
goog.debug.Console.prototype.getFormatter = function() {
  return this.formatter_
};
goog.debug.Console.prototype.setCapturing = function(capturing) {
  if(capturing == this.isCapturing_) {
    return
  }
  var rootLogger = goog.debug.LogManager.getRoot();
  if(capturing) {
    rootLogger.addHandler(this.publishHandler_)
  }else {
    rootLogger.removeHandler(this.publishHandler_);
    this.logBuffer = ""
  }
  this.isCapturing_ = capturing
};
goog.debug.Console.prototype.addLogRecord = function(logRecord) {
  if(this.filteredLoggers_[logRecord.getLoggerName()]) {
    return
  }
  var record = this.formatter_.formatRecord(logRecord);
  var console = goog.debug.Console.console_;
  if(console && console["firebug"]) {
    switch(logRecord.getLevel()) {
      case goog.debug.Logger.Level.SHOUT:
        console["info"](record);
        break;
      case goog.debug.Logger.Level.SEVERE:
        console["error"](record);
        break;
      case goog.debug.Logger.Level.WARNING:
        console["warn"](record);
        break;
      default:
        console["debug"](record);
        break
    }
  }else {
    if(console) {
      console.log(record)
    }else {
      if(window.opera) {
        window.opera["postError"](record)
      }else {
        this.logBuffer_ += record
      }
    }
  }
};
goog.debug.Console.prototype.addFilter = function(loggerName) {
  this.filteredLoggers_[loggerName] = true
};
goog.debug.Console.prototype.removeFilter = function(loggerName) {
  delete this.filteredLoggers_[loggerName]
};
goog.debug.Console.instance = null;
goog.debug.Console.console_ = window.console;
goog.debug.Console.autoInstall = function() {
  if(!goog.debug.Console.instance) {
    goog.debug.Console.instance = new goog.debug.Console
  }
  if(window.location.href.indexOf("Debug=true") != -1) {
    goog.debug.Console.instance.setCapturing(true)
  }
};
goog.debug.Console.show = function() {
  alert(goog.debug.Console.instance.logBuffer_)
};
goog.provide("clojure.browser.dom");
goog.require("cljs.core");
goog.require("goog.object");
goog.require("goog.dom");
clojure.browser.dom.append = function() {
  var append__delegate = function(parent, children) {
    cljs.core.apply.call(null, goog.dom.append, parent, children);
    return parent
  };
  var append = function(parent, var_args) {
    var children = null;
    if(goog.isDef(var_args)) {
      children = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return append__delegate.call(this, parent, children)
  };
  append.cljs$lang$maxFixedArity = 1;
  append.cljs$lang$applyTo = function(arglist__11451) {
    var parent = cljs.core.first(arglist__11451);
    var children = cljs.core.rest(arglist__11451);
    return append__delegate(parent, children)
  };
  append.cljs$lang$arity$variadic = append__delegate;
  return append
}();
void 0;
clojure.browser.dom.DOMBuilder = {};
clojure.browser.dom._element = function() {
  var _element = null;
  var _element__1 = function(this$) {
    if(function() {
      var and__3822__auto____11461 = this$;
      if(and__3822__auto____11461) {
        return this$.clojure$browser$dom$DOMBuilder$_element$arity$1
      }else {
        return and__3822__auto____11461
      }
    }()) {
      return this$.clojure$browser$dom$DOMBuilder$_element$arity$1(this$)
    }else {
      return function() {
        var or__3824__auto____11462 = clojure.browser.dom._element[goog.typeOf(this$)];
        if(or__3824__auto____11462) {
          return or__3824__auto____11462
        }else {
          var or__3824__auto____11463 = clojure.browser.dom._element["_"];
          if(or__3824__auto____11463) {
            return or__3824__auto____11463
          }else {
            throw cljs.core.missing_protocol.call(null, "DOMBuilder.-element", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _element__2 = function(this$, attrs_or_children) {
    if(function() {
      var and__3822__auto____11464 = this$;
      if(and__3822__auto____11464) {
        return this$.clojure$browser$dom$DOMBuilder$_element$arity$2
      }else {
        return and__3822__auto____11464
      }
    }()) {
      return this$.clojure$browser$dom$DOMBuilder$_element$arity$2(this$, attrs_or_children)
    }else {
      return function() {
        var or__3824__auto____11465 = clojure.browser.dom._element[goog.typeOf(this$)];
        if(or__3824__auto____11465) {
          return or__3824__auto____11465
        }else {
          var or__3824__auto____11466 = clojure.browser.dom._element["_"];
          if(or__3824__auto____11466) {
            return or__3824__auto____11466
          }else {
            throw cljs.core.missing_protocol.call(null, "DOMBuilder.-element", this$);
          }
        }
      }().call(null, this$, attrs_or_children)
    }
  };
  var _element__3 = function(this$, attrs, children) {
    if(function() {
      var and__3822__auto____11467 = this$;
      if(and__3822__auto____11467) {
        return this$.clojure$browser$dom$DOMBuilder$_element$arity$3
      }else {
        return and__3822__auto____11467
      }
    }()) {
      return this$.clojure$browser$dom$DOMBuilder$_element$arity$3(this$, attrs, children)
    }else {
      return function() {
        var or__3824__auto____11468 = clojure.browser.dom._element[goog.typeOf(this$)];
        if(or__3824__auto____11468) {
          return or__3824__auto____11468
        }else {
          var or__3824__auto____11469 = clojure.browser.dom._element["_"];
          if(or__3824__auto____11469) {
            return or__3824__auto____11469
          }else {
            throw cljs.core.missing_protocol.call(null, "DOMBuilder.-element", this$);
          }
        }
      }().call(null, this$, attrs, children)
    }
  };
  _element = function(this$, attrs, children) {
    switch(arguments.length) {
      case 1:
        return _element__1.call(this, this$);
      case 2:
        return _element__2.call(this, this$, attrs);
      case 3:
        return _element__3.call(this, this$, attrs, children)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _element.cljs$lang$arity$1 = _element__1;
  _element.cljs$lang$arity$2 = _element__2;
  _element.cljs$lang$arity$3 = _element__3;
  return _element
}();
void 0;
clojure.browser.dom.log = function() {
  var log__delegate = function(args) {
    return console.log(cljs.core.apply.call(null, cljs.core.pr_str, args))
  };
  var log = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, args)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__11470) {
    var args = cljs.core.seq(arglist__11470);
    return log__delegate(args)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
clojure.browser.dom.log_obj = function log_obj(obj) {
  return console.log(obj)
};
Element.prototype.clojure$browser$dom$DOMBuilder$ = true;
Element.prototype.clojure$browser$dom$DOMBuilder$_element$arity$1 = function(this$) {
  clojure.browser.dom.log.call(null, "js/Element (-element ", this$, ")");
  return this$
};
cljs.core.PersistentVector.prototype.clojure$browser$dom$DOMBuilder$ = true;
cljs.core.PersistentVector.prototype.clojure$browser$dom$DOMBuilder$_element$arity$1 = function(this$) {
  clojure.browser.dom.log.call(null, "PersistentVector (-element ", this$, ")");
  var tag__11471 = cljs.core.first.call(null, this$);
  var attrs__11472 = cljs.core.second.call(null, this$);
  var children__11473 = cljs.core.drop.call(null, 2, this$);
  if(cljs.core.map_QMARK_.call(null, attrs__11472)) {
    return clojure.browser.dom._element.call(null, tag__11471, attrs__11472, children__11473)
  }else {
    return clojure.browser.dom._element.call(null, tag__11471, null, cljs.core.rest.call(null, this$))
  }
};
clojure.browser.dom.DOMBuilder["string"] = true;
clojure.browser.dom._element["string"] = function() {
  var G__11486 = null;
  var G__11486__1 = function(this$) {
    clojure.browser.dom.log.call(null, "string (-element ", this$, ")");
    if(cljs.core.keyword_QMARK_.call(null, this$)) {
      return goog.dom.createElement(cljs.core.name.call(null, this$))
    }else {
      if("\ufdd0'else") {
        return goog.dom.createTextNode(cljs.core.name.call(null, this$))
      }else {
        return null
      }
    }
  };
  var G__11486__2 = function(this$, attrs_or_children) {
    clojure.browser.dom.log.call(null, "string (-element ", this$, " ", attrs_or_children, ")");
    var attrs__11474 = cljs.core.first.call(null, attrs_or_children);
    if(cljs.core.map_QMARK_.call(null, attrs__11474)) {
      return clojure.browser.dom._element.call(null, this$, attrs__11474, cljs.core.rest.call(null, attrs_or_children))
    }else {
      return clojure.browser.dom._element.call(null, this$, null, attrs_or_children)
    }
  };
  var G__11486__3 = function(this$, attrs, children) {
    clojure.browser.dom.log.call(null, "string (-element ", this$, " ", attrs, " ", children, ")");
    var str_attrs__11485 = cljs.core.truth_(function() {
      var and__3822__auto____11475 = cljs.core.map_QMARK_.call(null, attrs);
      if(and__3822__auto____11475) {
        return cljs.core.seq.call(null, attrs)
      }else {
        return and__3822__auto____11475
      }
    }()) ? cljs.core.reduce.call(null, function(o, p__11476) {
      var vec__11477__11478 = p__11476;
      var k__11479 = cljs.core.nth.call(null, vec__11477__11478, 0, null);
      var v__11480 = cljs.core.nth.call(null, vec__11477__11478, 1, null);
      var o__11481 = o == null ? {} : o;
      clojure.browser.dom.log.call(null, "o = ", o__11481);
      clojure.browser.dom.log.call(null, "k = ", k__11479);
      clojure.browser.dom.log.call(null, "v = ", v__11480);
      if(function() {
        var or__3824__auto____11482 = cljs.core.keyword_QMARK_.call(null, k__11479);
        if(or__3824__auto____11482) {
          return or__3824__auto____11482
        }else {
          return cljs.core.string_QMARK_.call(null, k__11479)
        }
      }()) {
        var G__11483__11484 = o__11481;
        G__11483__11484[cljs.core.name.call(null, k__11479)] = v__11480;
        return G__11483__11484
      }else {
        return null
      }
    }, {}, attrs) : null;
    clojure.browser.dom.log_obj.call(null, str_attrs__11485);
    if(cljs.core.seq.call(null, children)) {
      return cljs.core.apply.call(null, goog.dom.createDom, cljs.core.name.call(null, this$), str_attrs__11485, cljs.core.map.call(null, clojure.browser.dom._element, children))
    }else {
      return goog.dom.createDom(cljs.core.name.call(null, this$), str_attrs__11485)
    }
  };
  G__11486 = function(this$, attrs, children) {
    switch(arguments.length) {
      case 1:
        return G__11486__1.call(this, this$);
      case 2:
        return G__11486__2.call(this, this$, attrs);
      case 3:
        return G__11486__3.call(this, this$, attrs, children)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11486
}();
clojure.browser.dom.element = function() {
  var element = null;
  var element__1 = function(tag_or_text) {
    clojure.browser.dom.log.call(null, "(element ", tag_or_text, ")");
    return clojure.browser.dom._element.call(null, tag_or_text)
  };
  var element__2 = function() {
    var G__11489__delegate = function(tag, children) {
      clojure.browser.dom.log.call(null, "(element ", tag, " ", children, ")");
      var attrs__11488 = cljs.core.first.call(null, children);
      if(cljs.core.map_QMARK_.call(null, attrs__11488)) {
        return clojure.browser.dom._element.call(null, tag, attrs__11488, cljs.core.rest.call(null, children))
      }else {
        return clojure.browser.dom._element.call(null, tag, null, children)
      }
    };
    var G__11489 = function(tag, var_args) {
      var children = null;
      if(goog.isDef(var_args)) {
        children = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11489__delegate.call(this, tag, children)
    };
    G__11489.cljs$lang$maxFixedArity = 1;
    G__11489.cljs$lang$applyTo = function(arglist__11490) {
      var tag = cljs.core.first(arglist__11490);
      var children = cljs.core.rest(arglist__11490);
      return G__11489__delegate(tag, children)
    };
    G__11489.cljs$lang$arity$variadic = G__11489__delegate;
    return G__11489
  }();
  element = function(tag, var_args) {
    var children = var_args;
    switch(arguments.length) {
      case 1:
        return element__1.call(this, tag);
      default:
        return element__2.cljs$lang$arity$variadic(tag, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  element.cljs$lang$maxFixedArity = 1;
  element.cljs$lang$applyTo = element__2.cljs$lang$applyTo;
  element.cljs$lang$arity$1 = element__1;
  element.cljs$lang$arity$variadic = element__2.cljs$lang$arity$variadic;
  return element
}();
clojure.browser.dom.remove_children = function remove_children(id) {
  var parent__11492 = goog.dom.getElement(cljs.core.name.call(null, id));
  return goog.dom.removeChildren(parent__11492)
};
clojure.browser.dom.get_element = function get_element(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id))
};
clojure.browser.dom.html__GT_dom = function html__GT_dom(s) {
  return goog.dom.htmlToDocumentFragment(s)
};
clojure.browser.dom.insert_at = function insert_at(parent, child, index) {
  return goog.dom.insertChildAt(parent, child, index)
};
clojure.browser.dom.ensure_element = function ensure_element(e) {
  if(cljs.core.keyword_QMARK_.call(null, e)) {
    return clojure.browser.dom.get_element.call(null, e)
  }else {
    if(cljs.core.string_QMARK_.call(null, e)) {
      return clojure.browser.dom.html__GT_dom.call(null, e)
    }else {
      if("\ufdd0'else") {
        return e
      }else {
        return null
      }
    }
  }
};
clojure.browser.dom.replace_node = function replace_node(old_node, new_node) {
  var old_node__11495 = clojure.browser.dom.ensure_element.call(null, old_node);
  var new_node__11496 = clojure.browser.dom.ensure_element.call(null, new_node);
  goog.dom.replaceNode(new_node__11496, old_node__11495);
  return new_node__11496
};
clojure.browser.dom.set_text = function set_text(e, s) {
  return goog.dom.setTextContent(clojure.browser.dom.ensure_element.call(null, e), s)
};
clojure.browser.dom.get_value = function get_value(e) {
  return clojure.browser.dom.ensure_element.call(null, e).value
};
clojure.browser.dom.set_properties = function set_properties(e, m) {
  return goog.dom.setProperties(clojure.browser.dom.ensure_element.call(null, e), cljs.core.apply.call(null, goog.object.create, cljs.core.interleave.call(null, cljs.core.keys.call(null, m), cljs.core.vals.call(null, m))))
};
clojure.browser.dom.set_value = function set_value(e, v) {
  return clojure.browser.dom.set_properties.call(null, e, cljs.core.ObjMap.fromObject(["value"], {"value":v}))
};
clojure.browser.dom.click_element = function click_element(e) {
  return clojure.browser.dom.ensure_element.call(null, e).click(cljs.core.List.EMPTY)
};
goog.provide("pacman.util.logging");
goog.require("cljs.core");
goog.require("pacman.util");
goog.require("goog.debug.LogManager");
goog.require("goog.debug.Logger.Level");
goog.require("goog.debug.Console");
pacman.util.logging.levels = cljs.core.ObjMap.fromObject(["\ufdd0'debug", "\ufdd0'info", "\ufdd0'warn", "\ufdd0'error"], {"\ufdd0'debug":goog.debug.Logger.Level.FINE, "\ufdd0'info":goog.debug.Logger.Level.INFO, "\ufdd0'warn":goog.debug.Logger.Level.WARNING, "\ufdd0'error":goog.debug.Logger.Level.SEVERE});
pacman.util.logging.logger = cljs.core.atom.call(null, null);
pacman.util.logging.init = function init(logger_name, level) {
  goog.debug.LogManager.initialize();
  (new goog.debug.Console).setCapturing(true);
  goog.debug.LogManager.getRoot().setLevel(pacman.util.logging.levels.call(null, "\ufdd0'warn"));
  cljs.core.reset_BANG_.call(null, pacman.util.logging.logger, goog.debug.LogManager.getLogger(logger_name));
  return cljs.core.deref.call(null, pacman.util.logging.logger).setLevel(pacman.util.logging.levels.call(null, level))
};
pacman.util.logging.log_STAR_ = function log_STAR_(level, message_fn) {
  var level__7521 = cljs.core._lookup.call(null, pacman.util.logging.levels, level, null);
  var logger__7522 = cljs.core.deref.call(null, pacman.util.logging.logger);
  if(cljs.core.truth_(logger__7522.isLoggable(level__7521))) {
    return logger__7522.log(level__7521, [cljs.core.str(message_fn.call(null))].join(""))
  }else {
    return null
  }
};
goog.provide("pacman.util.dom");
goog.require("cljs.core");
goog.require("goog.style");
goog.require("goog.dom");
goog.require("clojure.browser.dom");
pacman.util.dom.append_BANG_ = clojure.browser.dom.append;
pacman.util.dom.element_BANG_ = clojure.browser.dom.element;
pacman.util.dom.get_element = clojure.browser.dom.get_element;
pacman.util.dom.content_BANG_ = function() {
  var content_BANG___delegate = function(e, vals) {
    return goog.dom.setTextContent(e, cljs.core.apply.call(null, cljs.core.str, vals))
  };
  var content_BANG_ = function(e, var_args) {
    var vals = null;
    if(goog.isDef(var_args)) {
      vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return content_BANG___delegate.call(this, e, vals)
  };
  content_BANG_.cljs$lang$maxFixedArity = 1;
  content_BANG_.cljs$lang$applyTo = function(arglist__14862) {
    var e = cljs.core.first(arglist__14862);
    var vals = cljs.core.rest(arglist__14862);
    return content_BANG___delegate(e, vals)
  };
  content_BANG_.cljs$lang$arity$variadic = content_BANG___delegate;
  return content_BANG_
}();
pacman.util.dom.style_BANG_ = function style_BANG_(e, k, v) {
  goog.style.setStyle(e, cljs.core.name.call(null, k), v);
  return e
};
pacman.util.dom.styles_BANG_ = function styles_BANG_(e, m) {
  var G__14882__14883 = cljs.core.seq.call(null, m);
  if(G__14882__14883) {
    var G__14885__14887 = cljs.core.first.call(null, G__14882__14883);
    var vec__14886__14888 = G__14885__14887;
    var k__14889 = cljs.core.nth.call(null, vec__14886__14888, 0, null);
    var v__14890 = cljs.core.nth.call(null, vec__14886__14888, 1, null);
    var G__14882__14891 = G__14882__14883;
    var G__14885__14892 = G__14885__14887;
    var G__14882__14893 = G__14882__14891;
    while(true) {
      var vec__14894__14895 = G__14885__14892;
      var k__14896 = cljs.core.nth.call(null, vec__14894__14895, 0, null);
      var v__14897 = cljs.core.nth.call(null, vec__14894__14895, 1, null);
      var G__14882__14898 = G__14882__14893;
      pacman.util.dom.style_BANG_.call(null, e, k__14896, v__14897);
      var temp__3974__auto____14899 = cljs.core.next.call(null, G__14882__14898);
      if(temp__3974__auto____14899) {
        var G__14882__14900 = temp__3974__auto____14899;
        var G__14901 = cljs.core.first.call(null, G__14882__14900);
        var G__14902 = G__14882__14900;
        G__14885__14892 = G__14901;
        G__14882__14893 = G__14902;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.repl_print = function repl_print(data) {
  var temp__3971__auto____11267 = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  if(cljs.core.truth_(temp__3971__auto____11267)) {
    var conn__11268 = temp__3971__auto____11267;
    return clojure.browser.net.transmit.call(null, conn__11268, "\ufdd0'print", cljs.core.pr_str.call(null, data))
  }else {
    return null
  }
};
clojure.browser.repl.evaluate_javascript = function evaluate_javascript(conn, block) {
  var result__11274 = function() {
    try {
      return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value"], {"\ufdd0'status":"\ufdd0'success", "\ufdd0'value":[cljs.core.str(eval(block))].join("")})
    }catch(e11272) {
      if(cljs.core.instance_QMARK_.call(null, Error, e11272)) {
        var e__11273 = e11272;
        return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value", "\ufdd0'stacktrace"], {"\ufdd0'status":"\ufdd0'exception", "\ufdd0'value":cljs.core.pr_str.call(null, e__11273), "\ufdd0'stacktrace":cljs.core.truth_(e__11273.hasOwnProperty("stack")) ? e__11273.stack : "No stacktrace available."})
      }else {
        if("\ufdd0'else") {
          throw e11272;
        }else {
          return null
        }
      }
    }
  }();
  return cljs.core.pr_str.call(null, result__11274)
};
clojure.browser.repl.send_result = function send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0)
};
clojure.browser.repl.send_print = function() {
  var send_print = null;
  var send_print__2 = function(url, data) {
    return send_print.call(null, url, data, 0)
  };
  var send_print__3 = function(url, data, n) {
    var conn__11276 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, conn__11276, "\ufdd0'error", function(_) {
      if(n < 10) {
        return send_print.call(null, url, data, n + 1)
      }else {
        return console.log([cljs.core.str("Could not send "), cljs.core.str(data), cljs.core.str(" after "), cljs.core.str(n), cljs.core.str(" attempts.")].join(""))
      }
    });
    return clojure.browser.net.transmit.call(null, conn__11276, url, "POST", data, null, 0)
  };
  send_print = function(url, data, n) {
    switch(arguments.length) {
      case 2:
        return send_print__2.call(this, url, data);
      case 3:
        return send_print__3.call(this, url, data, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  send_print.cljs$lang$arity$2 = send_print__2;
  send_print.cljs$lang$arity$3 = send_print__3;
  return send_print
}();
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function wrap_message(t, data) {
  return cljs.core.pr_str.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'content", "\ufdd0'order"], {"\ufdd0'type":t, "\ufdd0'content":data, "\ufdd0'order":cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)}))
};
clojure.browser.repl.start_evaluator = function start_evaluator(url) {
  var temp__3971__auto____11280 = clojure.browser.net.xpc_connection.call(null);
  if(cljs.core.truth_(temp__3971__auto____11280)) {
    var repl_connection__11281 = temp__3971__auto____11280;
    var connection__11282 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, connection__11282, "\ufdd0'success", function(e) {
      return clojure.browser.net.transmit.call(null, repl_connection__11281, "\ufdd0'evaluate-javascript", e.currentTarget.getResponseText(cljs.core.List.EMPTY))
    });
    clojure.browser.net.register_service.call(null, repl_connection__11281, "\ufdd0'send-result", function(data) {
      return clojure.browser.repl.send_result.call(null, connection__11282, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'result", data))
    });
    clojure.browser.net.register_service.call(null, repl_connection__11281, "\ufdd0'print", function(data) {
      return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'print", data))
    });
    clojure.browser.net.connect.call(null, repl_connection__11281, cljs.core.constantly.call(null, null));
    return setTimeout(function() {
      return clojure.browser.repl.send_result.call(null, connection__11282, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'ready", "ready"))
    }, 50)
  }else {
    return alert("No 'xpc' param provided to child iframe.")
  }
};
clojure.browser.repl.connect = function connect(repl_server_url) {
  var repl_connection__11284 = clojure.browser.net.xpc_connection.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'peer_uri"], {"\ufdd0'peer_uri":repl_server_url}));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection__11284));
  clojure.browser.net.register_service.call(null, repl_connection__11284, "\ufdd0'evaluate-javascript", function(js) {
    return clojure.browser.net.transmit.call(null, repl_connection__11284, "\ufdd0'send-result", clojure.browser.repl.evaluate_javascript.call(null, repl_connection__11284, js))
  });
  return clojure.browser.net.connect.call(null, repl_connection__11284, cljs.core.constantly.call(null, null), function(iframe) {
    return iframe.style.display = "none"
  })
};
goog.provide("pacman.resources");
goog.require("cljs.core");
goog.require("pacman.util");
goog.require("pacman.util.logging");
pacman.resources.resources = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
pacman.resources.image = function image(id) {
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, pacman.resources.resources), cljs.core.PersistentVector.fromArray(["\ufdd0'images", id], true))
};
pacman.resources.fetch_image = function fetch_image(url, onload, onerror) {
  var image__18247 = new Image;
  image__18247["onload"] = function() {
    return onload.call(null, image__18247)
  };
  image__18247["onerror"] = onerror;
  image__18247["src"] = url;
  return image__18247
};
pacman.resources.fetch_sound = function fetch_sound(url, onload, onerror) {
  return null
};
pacman.resources.load_resources_BANG_ = function load_resources_BANG_(p__18248, onload) {
  var remaining__18294 = p__18248;
  var remaining__18295 = cljs.core.seq_QMARK_.call(null, remaining__18294) ? cljs.core.apply.call(null, cljs.core.hash_map, remaining__18294) : remaining__18294;
  var sounds__18296 = cljs.core._lookup.call(null, remaining__18295, "\ufdd0'sounds", null);
  var images__18297 = cljs.core._lookup.call(null, remaining__18295, "\ufdd0'images", null);
  var pending__18298 = cljs.core.atom.call(null, remaining__18295);
  var fetch_resource__18300 = function(path, type, id, load_fn) {
    var url__18299 = [cljs.core.str("/"), cljs.core.str(path)].join("");
    pacman.util.logging.log_STAR_.call(null, "\ufdd0'debug", function() {
      return pacman.util.format.call(null, "fetching %s...", url__18299)
    });
    return load_fn.call(null, url__18299, function success(resource) {
      pacman.util.logging.log_STAR_.call(null, "\ufdd0'info", function() {
        return pacman.util.format.call(null, "loaded %s", url__18299)
      });
      cljs.core.swap_BANG_.call(null, pacman.resources.resources, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([type, id], true), resource);
      cljs.core.swap_BANG_.call(null, pending__18298, pacman.util.dissoc_in, cljs.core.PersistentVector.fromArray([type, id], true));
      if(cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, pending__18298))) {
        return onload.call(null)
      }else {
        return null
      }
    }, function error() {
      throw new Error([cljs.core.str("Failed to load "), cljs.core.str(url__18299)].join(""));
    })
  };
  var G__18301__18302 = cljs.core.seq.call(null, images__18297);
  if(G__18301__18302) {
    var G__18304__18306 = cljs.core.first.call(null, G__18301__18302);
    var vec__18305__18307 = G__18304__18306;
    var id__18308 = cljs.core.nth.call(null, vec__18305__18307, 0, null);
    var path__18309 = cljs.core.nth.call(null, vec__18305__18307, 1, null);
    var G__18301__18310 = G__18301__18302;
    var G__18304__18311 = G__18304__18306;
    var G__18301__18312 = G__18301__18310;
    while(true) {
      var vec__18313__18314 = G__18304__18311;
      var id__18315 = cljs.core.nth.call(null, vec__18313__18314, 0, null);
      var path__18316 = cljs.core.nth.call(null, vec__18313__18314, 1, null);
      var G__18301__18317 = G__18301__18312;
      fetch_resource__18300.call(null, path__18316, "\ufdd0'images", id__18315, pacman.resources.fetch_image);
      var temp__3974__auto____18318 = cljs.core.next.call(null, G__18301__18317);
      if(temp__3974__auto____18318) {
        var G__18301__18319 = temp__3974__auto____18318;
        var G__18339 = cljs.core.first.call(null, G__18301__18319);
        var G__18340 = G__18301__18319;
        G__18304__18311 = G__18339;
        G__18301__18312 = G__18340;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__18320__18321 = cljs.core.seq.call(null, sounds__18296);
  if(G__18320__18321) {
    var G__18323__18325 = cljs.core.first.call(null, G__18320__18321);
    var vec__18324__18326 = G__18323__18325;
    var id__18327 = cljs.core.nth.call(null, vec__18324__18326, 0, null);
    var path__18328 = cljs.core.nth.call(null, vec__18324__18326, 1, null);
    var G__18320__18329 = G__18320__18321;
    var G__18323__18330 = G__18323__18325;
    var G__18320__18331 = G__18320__18329;
    while(true) {
      var vec__18332__18333 = G__18323__18330;
      var id__18334 = cljs.core.nth.call(null, vec__18332__18333, 0, null);
      var path__18335 = cljs.core.nth.call(null, vec__18332__18333, 1, null);
      var G__18320__18336 = G__18320__18331;
      fetch_resource__18300.call(null, path__18335, "\ufdd0'sounds", id__18334, pacman.resources.fetch_sound);
      var temp__3974__auto____18337 = cljs.core.next.call(null, G__18320__18336);
      if(temp__3974__auto____18337) {
        var G__18320__18338 = temp__3974__auto____18337;
        var G__18341 = cljs.core.first.call(null, G__18320__18338);
        var G__18342 = G__18320__18338;
        G__18323__18330 = G__18341;
        G__18320__18331 = G__18342;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
goog.provide("pacman.main");
goog.require("cljs.core");
goog.require("pacman.util");
goog.require("pacman.core");
goog.require("pacman.resources");
goog.require("goog.events");
goog.require("pacman.util.dom");
goog.require("pacman.util.canvas");
goog.require("pacman.util.logging");
goog.require("goog.events.KeyCodes");
goog.require("goog.Timer");
goog.require("pacman.pacman");
goog.require("pacman.maze");
goog.require("clojure.browser.repl");
pacman.main.tick_delay = function tick_delay() {
  return 1E3 / pacman.core.hz
};
pacman.main.initial_state = function initial_state() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'score", "\ufdd0'level", "\ufdd0'lives", "\ufdd0'dots", "\ufdd0'pacman"], {"\ufdd0'score":0, "\ufdd0'level":1, "\ufdd0'lives":3, "\ufdd0'dots":pacman.maze.init_dots.call(null), "\ufdd0'pacman":pacman.pacman.init.call(null)})
};
pacman.main.profile_QMARK_ = cljs.core.atom.call(null, true);
pacman.main.stats_panel = new cljs.core.Delay(cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":false, "\ufdd0'value":null})), function() {
  var panel__6782 = pacman.util.dom.element_BANG_.call(null, "pre", cljs.core.ObjMap.fromObject(["\ufdd0'id"], {"\ufdd0'id":"stats"}));
  pacman.util.dom.styles_BANG_.call(null, panel__6782, cljs.core.ObjMap.fromObject(["\ufdd0'position", "\ufdd0'right", "\ufdd0'top"], {"\ufdd0'position":"fixed", "\ufdd0'right":0, "\ufdd0'top":0}));
  pacman.util.dom.append_BANG_.call(null, pacman.util.dom.get_element.call(null, "cruft"), panel__6782);
  return panel__6782
});
pacman.main.print_stats_BANG_ = function print_stats_BANG_(tick_durations) {
  var tick_count__6785 = cljs.core.count.call(null, tick_durations);
  var avg_duration__6786 = cljs.core.reduce.call(null, cljs.core._PLUS_, tick_durations) / tick_count__6785;
  return pacman.util.dom.content_BANG_.call(null, cljs.core.deref.call(null, pacman.main.stats_panel), pacman.util.format.call(null, "fps=%d\nmin=%2.2fms\navg=%2.2fms (%.2f%%)\nmax=%2.2fms", tick_count__6785, tick_count__6785 === 0 ? 0 : cljs.core.apply.call(null, cljs.core.min, tick_durations), avg_duration__6786, 100 * (avg_duration__6786 / pacman.main.tick_delay.call(null)), tick_count__6785 === 0 ? 0 : cljs.core.apply.call(null, cljs.core.max, tick_durations)))
};
pacman.main.requested_direction = cljs.core.atom.call(null, null);
pacman.main.key_directions = cljs.core.PersistentArrayMap.fromArrays([goog.events.KeyCodes.UP, goog.events.KeyCodes.DOWN, goog.events.KeyCodes.LEFT, goog.events.KeyCodes.RIGHT], ["\ufdd0'north", "\ufdd0'south", "\ufdd0'west", "\ufdd0'east"]);
pacman.main.key_pressed = function key_pressed(e) {
  var code__6790 = e.keyCode;
  var temp__3974__auto____6791 = pacman.main.key_directions.call(null, code__6790);
  if(cljs.core.truth_(temp__3974__auto____6791)) {
    var direction__6792 = temp__3974__auto____6791;
    cljs.core.reset_BANG_.call(null, pacman.main.requested_direction, direction__6792);
    return e.preventDefault()
  }else {
    return null
  }
};
pacman.main.key_released = function key_released(e) {
  var code__6796 = e.keyCode;
  var temp__3971__auto____6797 = pacman.main.key_directions.call(null, code__6796);
  if(cljs.core.truth_(temp__3971__auto____6797)) {
    var direction__6798 = temp__3971__auto____6797;
    if(cljs.core._EQ_.call(null, direction__6798, cljs.core.deref.call(null, pacman.main.requested_direction))) {
      cljs.core.reset_BANG_.call(null, pacman.main.requested_direction, null);
      return e.preventDefault()
    }else {
      return null
    }
  }else {
    return null
  }
};
pacman.main.update = function update(state) {
  return pacman.pacman.update.call(null, pacman.util.dissoc_in.call(null, cljs.core.dissoc.call(null, state, "\ufdd0'invalidated"), cljs.core.PersistentVector.fromArray(["\ufdd0'pacman", "\ufdd0'invalidated?"], true)), cljs.core.deref.call(null, pacman.main.requested_direction))
};
pacman.main.screen = new cljs.core.Delay(cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":false, "\ufdd0'value":null})), function() {
  return pacman.util.dom.get_element.call(null, "screen")
});
pacman.main.screen_width = function screen_width() {
  return cljs.core.deref.call(null, pacman.main.screen).width
};
pacman.main.screen_height = function screen_height() {
  return cljs.core.deref.call(null, pacman.main.screen).height
};
pacman.main.invalidated_entities = function invalidated_entities(clean, dirty) {
  return null
};
pacman.main.repaint_bg_BANG_ = function repaint_bg_BANG_(ctx, x, y, w, h) {
  return pacman.util.canvas.draw_image_BANG_.call(null, ctx, pacman.resources.image.call(null, "\ufdd0'maze"), x, y, w, h, x, y, w, h)
};
pacman.main.draw_BANG_ = function draw_BANG_(p__6799, ctx) {
  var map__6854__6855 = p__6799;
  var map__6854__6856 = cljs.core.seq_QMARK_.call(null, map__6854__6855) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6854__6855) : map__6854__6855;
  var invalidated_regions__6857 = cljs.core._lookup.call(null, map__6854__6856, "\ufdd0'invalidated", null);
  var p__6858 = cljs.core._lookup.call(null, map__6854__6856, "\ufdd0'pacman", null);
  var dots__6859 = cljs.core._lookup.call(null, map__6854__6856, "\ufdd0'dots", null);
  return pacman.util.canvas.with_state_STAR_.call(null, ctx, function() {
    pacman.util.canvas.scale_BANG_.call(null, ctx, pacman.main.screen_width.call(null) / pacman.core.world_width, pacman.main.screen_height.call(null) / pacman.core.world_height);
    var G__6860__6861 = cljs.core.seq.call(null, invalidated_regions__6857);
    if(G__6860__6861) {
      var G__6863__6865 = cljs.core.first.call(null, G__6860__6861);
      var map__6864__6866 = G__6863__6865;
      var map__6864__6867 = cljs.core.seq_QMARK_.call(null, map__6864__6866) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6864__6866) : map__6864__6866;
      var h__6868 = cljs.core._lookup.call(null, map__6864__6867, "\ufdd0'h", null);
      var w__6869 = cljs.core._lookup.call(null, map__6864__6867, "\ufdd0'w", null);
      var y__6870 = cljs.core._lookup.call(null, map__6864__6867, "\ufdd0'y", null);
      var x__6871 = cljs.core._lookup.call(null, map__6864__6867, "\ufdd0'x", null);
      var G__6860__6872 = G__6860__6861;
      var G__6863__6873 = G__6863__6865;
      var G__6860__6874 = G__6860__6872;
      while(true) {
        var map__6875__6876 = G__6863__6873;
        var map__6875__6877 = cljs.core.seq_QMARK_.call(null, map__6875__6876) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6875__6876) : map__6875__6876;
        var h__6878 = cljs.core._lookup.call(null, map__6875__6877, "\ufdd0'h", null);
        var w__6879 = cljs.core._lookup.call(null, map__6875__6877, "\ufdd0'w", null);
        var y__6880 = cljs.core._lookup.call(null, map__6875__6877, "\ufdd0'y", null);
        var x__6881 = cljs.core._lookup.call(null, map__6875__6877, "\ufdd0'x", null);
        var G__6860__6882 = G__6860__6874;
        pacman.main.repaint_bg_BANG_.call(null, ctx, x__6881, y__6880, w__6879, h__6878);
        var temp__3974__auto____6883 = cljs.core.next.call(null, G__6860__6882);
        if(temp__3974__auto____6883) {
          var G__6860__6884 = temp__3974__auto____6883;
          var G__6908 = cljs.core.first.call(null, G__6860__6884);
          var G__6909 = G__6860__6884;
          G__6863__6873 = G__6908;
          G__6860__6874 = G__6909;
          continue
        }else {
        }
        break
      }
    }else {
    }
    var G__6885__6886 = cljs.core.seq.call(null, pacman.maze.invalidated_dots.call(null, dots__6859, invalidated_regions__6857));
    if(G__6885__6886) {
      var G__6888__6890 = cljs.core.first.call(null, G__6885__6886);
      var map__6889__6891 = G__6888__6890;
      var map__6889__6892 = cljs.core.seq_QMARK_.call(null, map__6889__6891) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6889__6891) : map__6889__6891;
      var row__6893 = cljs.core._lookup.call(null, map__6889__6892, "\ufdd0'row", null);
      var col__6894 = cljs.core._lookup.call(null, map__6889__6892, "\ufdd0'col", null);
      var type__6895 = cljs.core._lookup.call(null, map__6889__6892, "\ufdd0'type", null);
      var G__6885__6896 = G__6885__6886;
      var G__6888__6897 = G__6888__6890;
      var G__6885__6898 = G__6885__6896;
      while(true) {
        var map__6899__6900 = G__6888__6897;
        var map__6899__6901 = cljs.core.seq_QMARK_.call(null, map__6899__6900) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6899__6900) : map__6899__6900;
        var row__6902 = cljs.core._lookup.call(null, map__6899__6901, "\ufdd0'row", null);
        var col__6903 = cljs.core._lookup.call(null, map__6899__6901, "\ufdd0'col", null);
        var type__6904 = cljs.core._lookup.call(null, map__6899__6901, "\ufdd0'type", null);
        var G__6885__6905 = G__6885__6898;
        pacman.maze.draw_dot_BANG_.call(null, ctx, type__6904, col__6903, row__6902);
        var temp__3974__auto____6906 = cljs.core.next.call(null, G__6885__6905);
        if(temp__3974__auto____6906) {
          var G__6885__6907 = temp__3974__auto____6906;
          var G__6910 = cljs.core.first.call(null, G__6885__6907);
          var G__6911 = G__6885__6907;
          G__6888__6897 = G__6910;
          G__6885__6898 = G__6911;
          continue
        }else {
        }
        break
      }
    }else {
    }
    if(cljs.core.truth_((new cljs.core.Keyword("\ufdd0'invalidated?")).call(null, p__6858))) {
      return pacman.core.draw_sprite_BANG_.call(null, p__6858, ctx)
    }else {
      return null
    }
  })
};
pacman.main.tick = function tick(state) {
  var start_time__6917 = pacman.util.now.call(null);
  var stats__6918 = (new cljs.core.Keyword("\ufdd0'stats")).call(null, state);
  var reset_stats_QMARK___6919 = start_time__6917 - (new cljs.core.Keyword("\ufdd0'last-printed")).call(null, stats__6918) > 1E3;
  if(cljs.core.truth_(function() {
    var and__3822__auto____6920 = reset_stats_QMARK___6919;
    if(and__3822__auto____6920) {
      return cljs.core.deref.call(null, pacman.main.profile_QMARK_)
    }else {
      return and__3822__auto____6920
    }
  }())) {
    pacman.main.print_stats_BANG_.call(null, (new cljs.core.Keyword("\ufdd0'tick-durations")).call(null, stats__6918))
  }else {
  }
  pacman.main.draw_BANG_.call(null, state, pacman.util.canvas.context.call(null, cljs.core.deref.call(null, pacman.main.screen)));
  var new_state__6921 = cljs.core.assoc.call(null, pacman.main.update.call(null, state), "\ufdd0'stats", reset_stats_QMARK___6919 ? cljs.core.ObjMap.fromObject(["\ufdd0'last-printed"], {"\ufdd0'last-printed":start_time__6917}) : cljs.core.update_in.call(null, stats__6918, cljs.core.PersistentVector.fromArray(["\ufdd0'tick-durations"], true), cljs.core.conj, pacman.util.now.call(null) - start_time__6917));
  return goog.Timer.callOnce(function() {
    return tick.call(null, new_state__6921)
  }, 0 > pacman.main.tick_delay.call(null) - (pacman.util.now.call(null) - start_time__6917) ? 0 : pacman.main.tick_delay.call(null) - (pacman.util.now.call(null) - start_time__6917))
};
pacman.main.start = function start() {
  return pacman.main.tick.call(null, pacman.core.invalidate_region.call(null, pacman.main.initial_state.call(null), 0, 0, pacman.core.world_width, pacman.core.world_height))
};
pacman.main.init = function init() {
  pacman.util.dom.style_BANG_.call(null, cljs.core.deref.call(null, pacman.main.screen), "\ufdd0'background-color", "#000");
  pacman.util.logging.init.call(null, "pacman", "\ufdd0'debug");
  pacman.util.logging.log_STAR_.call(null, "\ufdd0'info", function() {
    return pacman.util.format.call(null, "initing")
  });
  clojure.browser.repl.connect.call(null, "http://localhost:9000/repl");
  goog.events.listen(document, goog.events.EventType.KEYDOWN, pacman.main.key_pressed);
  goog.events.listen(document, goog.events.EventType.KEYUP, pacman.main.key_released);
  return pacman.resources.load_resources_BANG_.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'images"], {"\ufdd0'images":cljs.core.ObjMap.fromObject(["\ufdd0'maze", "\ufdd0'inky", "\ufdd0'pinky", "\ufdd0'blinky", "\ufdd0'clyde"], {"\ufdd0'maze":"bg.png", "\ufdd0'inky":"inky.png", "\ufdd0'pinky":"pinky.png", "\ufdd0'blinky":"blinky.png", "\ufdd0'clyde":"clyde.png"})}), pacman.main.start)
};
goog.exportSymbol("pacman.main.init", pacman.main.init);
